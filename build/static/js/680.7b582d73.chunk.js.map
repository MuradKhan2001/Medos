{"version":3,"file":"static/js/680.7b582d73.chunk.js","mappings":"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","sources":["components/notFound/NotFound.jsx","components/navbar/Navbar.jsx","components/footer/Footer.jsx","components/map/googleMapsApi.js","components/map/loader-map/LoaderMap.jsx","components/map/ClinicMarkers.jsx","components/map/DoctorMarkers.jsx","components/map/PharmaciesMarkers.jsx","components/map/AboutMarker.jsx","components/map/Map.jsx","components/mobile-navbar/MobileNavbar.jsx","components/adverts/AdvertBox.js","components/clinics/Clinics.jsx","components/doctors/Doctors.jsx","components/Pharmacies/Pharmacies.jsx","components/saved/Saved.jsx","components/map/MapAbout.jsx","components/about-clinic/About-clinic.jsx","components/login/login.jsx","components/login/useOnKeyPress.js","components/about-doctor/About-doctor.jsx","components/about-pharma/AboutPharma.jsx","components/register/Register.jsx","components/register/googleMapsApi.js","components/register/register-hospital/RegisterHospital.jsx","components/register/register-doctor/RegisterDoctor.jsx","components/register/register-pharmacies/RegisterPharmacies.jsx","components/services/Services.jsx","components/profile/googleMapsApi.js","components/profile/profile-doctor/ProfileDoctor.jsx","components/profile/hospital-profile/HospitalProfile.jsx","components/profile/pharmacy-profile/PharmacyProfile.jsx","components/messages/Messages.jsx","components/my-balance/Balance.jsx","components/register-login/RegisterLogin.jsx","components/register-login/useOnKeyPress.js","routes/Routes.jsx","components/modal/Modal.jsx","components/alerts/Alerts.jsx","components/app/App.js"],"sourcesContent":["import \"./not-found.scss\"\n\nconst NotFound = () => {\n    return <div className=\"not-found-wrapper\">\n        <div className=\"sloy\">\n            <div className=\"text1\">\n                <div className=\"error\">\n                    error 404\n                </div>\n                <div className=\"text\">\n                    Page not found\n                </div>\n            </div>\n        </div>\n    </div>\n};\n\nexport default NotFound","import {useNavigate, NavLink} from \"react-router-dom\";\nimport \"./style-navbar.scss\"\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeMenu} from \"../../redux/menu\";\nimport axios from \"axios\";\nimport {getClinics} from \"../../redux/clinics\";\nimport {getDoctor} from \"../../redux/doctors\";\nimport {getPharmacies} from \"../../redux/pharmacies\";\n\nconst Navbar = () => {\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n    const [profile, setProfile] = useState(false);\n    const [searchList, setSearchList] = useState(false);\n    const navigate = useNavigate();\n    const [location, setLocation] = useState();\n    const [locationRu, setLocationRu] = useState();\n    const [searchBox, setSearchBox] = useState([]);\n    const [inputVal, setInputVal] = useState(\"\");\n    const [filterResult, setFilterResult] = useState([]);\n\n    useEffect(() => {\n        axios.get(`${baseUrl}search-options/`).then((response) => {\n            setSearchBox(response.data);\n        });\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"}}).then((res) => {\n                setLocation(res.data.address.city)\n            });\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"}}).then((res) => {\n                setLocationRu(res.data.address.city)\n            });\n        });\n    }, []);\n\n    const Menus = [\n        {\n            name: t('nav1'),\n            url: \"/\",\n        },\n        {\n            name: t('nav2'),\n            url: \"/doctors\",\n        },\n        {\n            name: t('nav3'),\n            url: \"/pharmacies\",\n        }, {\n            name: t('nav4'),\n            url: \"/services\",\n        }\n    ];\n\n    const language = [\n        {\n            code: \"uz\",\n            name: \"UZ\",\n            country_code: \"uz\",\n        },\n        // {\n        //     code: \"en\",\n        //     name: \"EN\",\n        //     country_code: \"en\",\n        // },\n        {\n            code: \"ru\",\n            name: \"RU\",\n            country_code: \"ru\",\n        },\n    ];\n\n    const changeLanguage = (code) => {\n        localStorage.setItem(\"lng\", code);\n        i18next.changeLanguage(code);\n        window.location.reload()\n    };\n\n    window.onclick = function (event) {\n        if (!event.target.matches('.click-profile')) {\n            setProfile(false)\n        }\n    };\n\n    const filterData = (searchBox, searchValue) => {\n        const lowerCaseSearchValue = searchValue.toLowerCase();\n\n        const filterHospitals = (hospitals) => {\n            return hospitals && hospitals.filter(hospital =>\n                Object.values(hospital.translations).some(translation =>\n                    translation.name.toLowerCase().includes(lowerCaseSearchValue)\n                )\n            );\n        };\n\n        const filterDoctors = (doctors) => {\n            return doctors && doctors.filter(doctor =>\n                Object.values(doctor.translations).some(translation => {\n                    const fullName = `${translation.first_name} ${translation.middle_name} ${translation.last_name}`.toLowerCase();\n                    return fullName.includes(lowerCaseSearchValue);\n                })\n            );\n        };\n\n        const filterPharmacies = (pharmacies) => {\n            return pharmacies && pharmacies.filter(pharmacy =>\n                Object.values(pharmacy.translations).some(translation =>\n                    translation.name.toLowerCase().includes(lowerCaseSearchValue)\n                )\n            );\n        };\n\n        const filterServices = (services) => {\n            return services && services.filter(service =>\n                Object.values(service.translations).some(translation =>\n                    translation.name.toLowerCase().includes(lowerCaseSearchValue)\n                )\n            );\n        };\n\n        let find1 = filterHospitals(searchBox.hospitals);\n        let find2 = filterDoctors(searchBox.doctors);\n        let find3 = filterPharmacies(searchBox.pharmacy);\n        let find4 = filterServices(searchBox.services);\n\n        return {\n            hospitals: find1,\n            doctors: find2,\n            pharmacy: find3,\n            services: find4,\n            found: (find1 && find1.length > 0 || find2 && find2.length > 0 || find3 && find3.length > 0 || find4 && find4.length > 0)\n        };\n    };\n\n    const handleSearch = (e) => {\n\n        setInputVal(e.target.value);\n        const filteredResults = filterData(searchBox, e.target.value);\n        setFilterResult(filteredResults);\n    };\n\n    const getInformation = (status, item) => {\n\n        if (status === \"hospital\") {\n            axios.get(`${baseUrl}hospital/?name=${item.translations[\"uz\"].name}`).then((response) => {\n                dispatch(getClinics(response.data));\n                dispatch(changeMenu(true));\n                navigate(\"/\")\n                setSearchList(false)\n            })\n        }\n\n        if (status === \"doctor\") {\n            axios.get(`${baseUrl}doctor/?first_name=${item.translations[\"uz\"].first_name}&last_name=${item.translations[\"uz\"].last_name}`).then((response) => {\n                dispatch(getDoctor(response.data));\n                dispatch(changeMenu(true));\n                navigate(\"/doctors\");\n                setSearchList(false)\n            })\n        }\n\n        if (status === \"pharmacy\") {\n            axios.get(`${baseUrl}pharmacy/?name=${item.translations[\"uz\"].name}`).then((response) => {\n                dispatch(getPharmacies(response.data));\n                dispatch(changeMenu(true));\n                navigate(\"/pharmacies\");\n                setSearchList(false)\n            })\n        }\n\n        if (status === \"service\") {\n            axios.post(`${baseUrl}filter-hospital/`, {sub_service: item.id}).then((response) => {\n                dispatch(getClinics(response.data));\n                dispatch(changeMenu(true));\n                navigate(\"/\")\n                setSearchList(false)\n            });\n        }\n    };\n\n    return <>\n        <div className=\"navbar-wrapper\">\n            {\n                searchList && <div onClick={() => setSearchList(false)} className=\"search-sloy\"></div>\n            }\n            <div className=\"section-header\">\n                <div className=\"location-user\">\n                    <div><img src=\"./images/address.png\" alt=\"\"/></div>\n                    <div className=\"title\">\n                        {i18next.language === \"uz\" && location}\n                        {i18next.language === \"ru\" && locationRu}\n                    </div>\n                </div>\n                <div className=\"languages-wrapper\">\n                    <div className=\"items mr\">\n                        <div><img src=\"./images/globe.png\" alt=\"\"/></div>\n                        {language.map(({code, name, country_code}) => (\n                            <div\n                                key={country_code}\n                                onClick={() => changeLanguage(code)}\n                                className={`title ${i18next.language === code ? \"title-active\" : \"\"}`}\n                            >\n                                {name}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className=\"items\">\n                        <div><img src=\"./images/hear.png\" alt=\"\"/></div>\n                        <div onClick={() => navigate(\"/saved\")} className=\"title\">\n                            {t(\"saved\")}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"section-menu\">\n                <div className=\"left-side\">\n                    <div className=\"logo\">\n                        <img onClick={() => navigate(\"/\")} src=\"./images/logo2.png\" alt=\"\"/>\n                    </div>\n                    <div className=\"menu-wrapper\">\n                        {\n                            Menus.map((item, index) => {\n                                return <NavLink to={item.url} key={index}\n                                                className={`menu-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\n                                    <img src={item.img} alt=\"\"/>\n                                    <span> {item.name}</span>\n                                </NavLink>\n                            })\n                        }\n                    </div>\n                    <div className={`search-box ${searchList ? \"active-search\" : \"\"}`}>\n                        <div className=\"icon-search\">\n                            <img src=\"./images/search.png\" alt=\"search\"/>\n                        </div>\n\n                        <input onChange={handleSearch} onClick={() => setSearchList(true)}\n                               placeholder={t(\"search-placeholder\")}\n                               type=\"text\"/>\n\n                        {searchList && <div\n                            className={`search-list`}>\n\n                            {inputVal && <div>\n                                {filterResult.services && filterResult.services.length > 0 &&\n                                <div className=\"search-title\">{t(\"nav4\")}</div>}\n                                {filterResult.services && filterResult.services.map((item, index) => {\n                                    return <div onClick={() => getInformation(\"service\", item)} key={index}\n                                                className=\"search-result\">\n                                        <div className=\"icon\">\n                                            <img src=\"./images/searchicon2.png\" alt=\"\"/>\n                                        </div>\n                                        {item.translations[i18next.language].name}\n                                    </div>\n                                })}\n\n                                {filterResult.hospitals && filterResult.hospitals.length > 0 &&\n                                <div className=\"search-title\">{t(\"nav1\")}</div>}\n                                {filterResult.hospitals && filterResult.hospitals.map((item, index) => {\n                                    return <div onClick={() => getInformation(\"hospital\", item)} key={index}\n                                                className=\"search-result\">\n                                        <div className=\"icon\">\n                                            <img src=\"./images/searchicon3.png\" alt=\"\"/>\n                                        </div>\n                                        {item.translations[i18next.language].name}\n                                    </div>\n                                })}\n\n                                {filterResult.doctors && filterResult.doctors.length > 0 &&\n                                <div className=\"search-title\">{t(\"nav2\")}</div>}\n                                {filterResult.doctors && filterResult.doctors.map((item, index) => {\n                                    return <div onClick={() => getInformation(\"doctor\", item)} key={index}\n                                                className=\"search-result\">\n                                        <div className=\"icon\">\n                                            <img src=\"./images/searchicon1.png\" alt=\"\"/>\n                                        </div>\n                                        {item.translations[i18next.language].first_name} &nbsp;\n                                        {item.translations[i18next.language].last_name}\n                                    </div>\n                                })}\n\n                                {filterResult.pharmacy && filterResult.pharmacy.length > 0 &&\n                                <div className=\"search-title\">{t(\"nav3\")}</div>}\n                                {filterResult.pharmacy && filterResult.pharmacy.map((item, index) => {\n                                    return <div onClick={() => getInformation(\"pharmacy\", item)} key={index}\n                                                className=\"search-result\">\n                                        <div className=\"icon\">\n                                            <img src=\"./images/pill.png\" alt=\"\"/>\n                                        </div>\n                                        {item.translations[i18next.language].name}\n                                    </div>\n                                })}\n\n                                {!filterResult.found && <div className=\"search-none\">\n                                    <div className=\"title\">{t(\"norFoundText1\")}</div>\n                                    <div className=\"des\">{t(\"norFoundText2\")}</div>\n                                </div>}\n                            </div>}\n                        </div>}\n\n                        {searchList && <div onClick={() => setSearchList(false)} className=\"xbtn\">\n                            <img src=\"./images/cancel.png\" alt=\"\"/>\n                        </div>}\n                    </div>\n                </div>\n\n                <div className={`profile ${profile ? \"active-profile\" : \"\"}`}>\n                    <div onClick={() => setProfile(!profile)} className=\"click-profile\"></div>\n                    <div className=\"user\">\n                        <img src=\"./images/user.png\" alt=\"\"/>\n                    </div>\n                    <div className=\"menu-icon\">\n                        <img src=\"./images/menu.png\" alt=\"\"/>\n                    </div>\n\n                    {\n                        profile && <div className=\"profile-card\">\n                            <div className=\"content\">\n                                {localStorage.getItem(\"token\") ? <div className=\"user-profile\">\n                                        <div className=\"header-side\">\n                                            <div className=\"name\">\n                                                {i18next.language === \"uz\" && localStorage.getItem(\"nameUz\")}\n                                                {i18next.language === \"ru\" && localStorage.getItem(\"nameRu\")}\n                                            </div>\n                                        </div>\n\n                                        {/*<div onClick={() => navigate(\"/balance\")} className=\"btns\">*/}\n                                        {/*    <img src=\"./images/cash.png\" alt=\"\"/>*/}\n                                        {/*    {t(\"Mening hisobim\")}*/}\n                                        {/*</div>*/}\n\n                                        <div onClick={() => {\n                                            if (localStorage.getItem(\"profile\") !== \"false\") {\n                                                localStorage.getItem(\"userType\") === \"Doctor\" && navigate(\"/profile-doctor\");\n                                                localStorage.getItem(\"userType\") === \"Hospital\" && navigate(\"/profile-hospital\");\n                                                localStorage.getItem(\"userType\") === \"Pharmacy\" && navigate(\"/profile-pharmacy\");\n                                            } else {\n                                                if (localStorage.getItem(\"userType\") === \"Doctor\") {\n                                                    window.location.pathname = \"/register-doctor\"\n\n                                                } else if (localStorage.getItem(\"userType\") === \"Hospital\") {\n                                                    window.location.pathname = \"/register-hospital\"\n\n                                                } else if (localStorage.getItem(\"userType\") === \"Pharmacy\") {\n                                                    window.location.pathname = \"/register-pharmacies\"\n\n                                                }\n                                            }\n                                        }} className=\"btns\">\n                                            <img src=\"./images/settings.png\" alt=\"\"/>\n                                            {t(\"settings\")}\n                                        </div>\n\n                                        {(localStorage.getItem(\"userType\") === \"Doctor\" ||\n                                            localStorage.getItem(\"userType\") === \"Hospital\") &&\n                                        <div onClick={() => {\n\n                                            if (localStorage.getItem(\"profile\") !== \"false\") {\n                                                navigate(\"/messages\");\n                                            } else {\n                                                if (localStorage.getItem(\"userType\") === \"Doctor\") {\n                                                    window.location.pathname = \"/register-doctor\"\n\n                                                } else\n                                                    if (localStorage.getItem(\"userType\") === \"Hospital\") {\n                                                    window.location.pathname = \"/register-hospital\"\n                                                } else if (localStorage.getItem(\"userType\") === \"Pharmacy\") {\n                                                    window.location.pathname = \"/register-pharmacies\"\n                                                }\n                                            }\n\n\n                                        }} className=\"btns\">\n                                            <img src=\"./images/email.png\" alt=\"\"/>\n                                            {t(\"messages\")}\n                                        </div>}\n\n                                        <div onClick={() => {\n                                            localStorage.removeItem(\"token\")\n                                            localStorage.removeItem(\"userId\")\n                                            localStorage.removeItem(\"nameUz\")\n                                            localStorage.removeItem(\"nameRu\")\n                                            localStorage.removeItem(\"userType\")\n                                            localStorage.removeItem(\"profile\")\n                                            window.location.reload()\n                                        }} className=\"btns\">\n                                            <img src=\"./images/log-out.png\" alt=\"\"/>\n                                            {t(\"log-out\")}\n                                        </div>\n\n                                    </div> :\n                                    <div className=\"register-card\">\n                                        <div onClick={() => navigate(\"/register\")} className=\"register-btn\">\n                                            {t(\"register\")}\n                                        </div>\n                                        <div onClick={() => navigate(\"/login\")} className=\"login-btn\">\n                                            {t(\"login\")}\n                                        </div>\n                                        <div className=\"des\">\n                                            {t(\"login-des\")}\n                                        </div>\n                                    </div>}\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    </>\n};\n\nexport default Navbar","import \"./footer-style.scss\"\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst Footer = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const links = [\n        {name: t('nav1'), link: \"/\"},\n        {name: t(\"nav2\"), link: \"/doctors\"},\n        {name: t(\"nav4\"), link: \"/services\"},\n        {name: t(\"nav3\"), link: \"/pharmacies\"},\n        {name: t(\"saved\"), link: \"/saved\"},\n        {name: t(\"add-doctor\"), link: \"/register-doctor\"},\n        {name: t(\"add-clinic\"), link: \"/register-hospital\"},\n        {name: t(\"add-pharmacy\"), link: \"/register-pharmacies\"}\n    ];\n\n    return <>\n        <div className=\"footer-container\">\n            <div className=\"top-content\">\n                <div className=\"contents-footer\">\n                    {\n                        links.map((item, index) => {\n                            return <div onClick={()=>navigate(item.link)} key={index} className=\"links\">\n                                {item.name}\n                            </div>\n                        })\n                    }\n                </div>\n\n                <div className=\"call\">\n                    <div className=\"title-call\">94 009 09 06</div>\n                    <div className=\"des-call\">\n                        {t(\"des-footer\")}\n                    </div>\n                </div>\n\n                <div className=\"social-medias\">\n                    <div className=\"title-bot\">medos.uz</div>\n                    <div className=\"des-bot\">\n                        {t(\"des-footer2\")}\n                    </div>\n\n                    <div className=\"icon-social-media\">\n                        <a href=\"#\">\n                            <img src=\"./images/instagram.png\" alt=\"\"/>\n                        </a>\n                        <a href=\"#\">\n                            <img src=\"./images/facebook.png\" alt=\"\"/>\n                        </a>\n                        <a href=\"#\">\n                            <img src=\"./images/telegram.png\" alt=\"\"/>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"bottom-content-footer\">\n                <div className=\"text\">\n                    © 2024 medos.uz · {t(\"footer-text\")}\n                </div>\n                <div className=\"uzb\">\n                    <img src=\"./images/globe-pahrma.png\" alt=\"\"/>\n                    {t(\"uzb\")}\n                </div>\n            </div>\n        </div>\n    </>\n};\n\nexport default Footer","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import \"./loader-map.scss\";\nconst LoaderMap = () => {\n\n\n    return <>\n        <div className=\"spinner-container\">\n            <div className=\"loader\"></div>\n        </div>\n    </>\n};\n\nexport default LoaderMap;","import {InfoWindow, MarkerF, MarkerClustererF} from \"@react-google-maps/api\";\nimport {useState} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport i18next from \"i18next\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\n\nconst ClinicMarkers = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const clinics = useSelector((store) => store.Clinics.data);\n    const [selectedLocation, setSelectedLocation] = useState(null);\n    const [clinicActiveId, setClinicActiveId] = useState(null);\n    const icon = {url: './images/Location-Pin.png', scaledSize: {width: 50, height: 55}};\n    const icon2 = {url: './images/Location-active.png', scaledSize: {width: 50, height: 55}};\n\n    const onMarkerClick = (location) => {\n        setSelectedLocation(location);\n    };\n\n    const onCloseClick = () => {\n        setSelectedLocation(null);\n        setClinicActiveId(null)\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    return <>\n\n        <MarkerClustererF gridSize={60}>\n            {(clusterer) => clinics.map((item, index) => {\n                return <MarkerF\n                    key={index}\n                    position={{lat: Number(item.location.split(\",\")[0]), lng: Number(item.location.split(\",\")[1])}}\n                    icon={clinicActiveId === item.id ? icon2 : icon}\n                    onClick={() => {\n                        onMarkerClick(item);\n                        setClinicActiveId(item.id)\n                    }}\n                    clusterer={clusterer}\n                />\n            })\n\n            }\n        </MarkerClustererF>\n\n        {selectedLocation && (<InfoWindow\n            position={{\n                lat: Number(selectedLocation.location.split(\",\")[0]),\n                lng: Number(selectedLocation.location.split(\",\")[1])\n            }}\n            onCloseClick={onCloseClick}\n        >\n            <div className=\"info-box-clinic\">\n                <div className=\"info-text\">\n                    <div className=\"photo-clinic\">\n                        <img src={selectedLocation.image} alt=\"\"/>\n                    </div>\n                    <div onClick={()=> NavigateButton(selectedLocation.location)} className=\"navigator\">\n                        {t(\"navigator\")}\n                        <img src=\"./images/compass.png\" alt=\"\"/>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"title\">\n                            {selectedLocation.translations[i18next.language].name}\n                        </div>\n                        <div className=\"section-commit\">\n                            <div className=\"raiting\">\n                                {selectedLocation.avg_rating}\n                            </div>\n                            <div className=\"commit-count\">\n                                {selectedLocation.comment_count} {t(\"comment\")}\n                            </div>\n                        </div>\n                        <div className=\"section-location\">\n                            <div className=\"time-open\">\n                                <img src=\"./images/clock.png\" alt=\"\"/>\n                                {selectedLocation.open_24 ? t(\"open24\") : <>\n                                    {selectedLocation.start_time} {t(\"from\")}\n                                    &nbsp;\n                                    {selectedLocation.end_time} {t(\"to\")}\n                                </>}\n                            </div>\n                        </div>\n                        <div onClick={() => {\n                            navigate(\"/about-clinic\");\n                            localStorage.setItem(\"clinicId\", selectedLocation.id);\n                            dispatch(getAboutMarker(selectedLocation.location))\n                        }} className=\"more-btn\">\n                            {t(\"more\")}\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </InfoWindow>)}\n\n    </>\n};\n\nexport default ClinicMarkers","import {InfoWindow, MarkerF, MarkerClustererF} from \"@react-google-maps/api\";\nimport {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport i18next from \"i18next\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport {useTranslation} from \"react-i18next\";\n\nconst DoctorMarkers = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const Doctors = useSelector((store) => store.Doctors.data);\n    const [selectedLocation, setSelectedLocation] = useState(null);\n    const [clinicActiveId, setClinicActiveId] = useState(null);\n    const icon = {url: './images/pin-Doctor.png', scaledSize: {width: 50, height: 55}};\n    const icon2 = {url: './images/doctor-pin-active.png', scaledSize: {width: 40, height: 55}};\n\n    const onMarkerClick = (location) => {\n        setSelectedLocation(location);\n    };\n\n    const onCloseClick = () => {\n        setSelectedLocation(null);\n        setClinicActiveId(null)\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    return <>\n        <MarkerClustererF gridSize={60}>\n            {(clusterer) => Doctors.map((item, index) => {\n                return <MarkerF\n                    key={index}\n                    position={\n                        item.location ?\n                            {lat: Number(item.location.split(\",\")[0]), lng: Number(item.location.split(\",\")[1])} :\n                            {\n                                lat: Number(item.hospital.location.split(\",\")[0]),\n                                lng: Number(item.hospital.location.split(\",\")[1])\n                            }}\n                    icon={clinicActiveId === item.id ? icon2 : icon}\n                    onClick={() => {\n                        onMarkerClick(item);\n                        setClinicActiveId(item.id)\n                    }}\n                    clusterer={clusterer}\n                />\n            })}\n        </MarkerClustererF>\n\n        {selectedLocation && (<InfoWindow\n            position={\n                selectedLocation.location ?\n                    {\n                        lat: Number(selectedLocation.location.split(\",\")[0]),\n                        lng: Number(selectedLocation.location.split(\",\")[1])\n                    } :\n                    {\n                        lat: Number(selectedLocation.hospital.location.split(\",\")[0]),\n                        lng: Number(selectedLocation.hospital.location.split(\",\")[1])\n                    }\n            }\n            onCloseClick={onCloseClick}\n        >\n            <div className=\"info-box-clinic\">\n                <div className=\"info-text\">\n                    <div className=\"photo-clinic\">\n                        <img src={selectedLocation.image} alt=\"\"/>\n                    </div>\n                    <div onClick={() => NavigateButton(selectedLocation.location)}\n                         className=\"navigator\">\n                        {t(\"navigator\")}\n                        <img src=\"./images/compass.png\" alt=\"\"/>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"header-clinic\">\n                            <div className=\"name-clinic\">\n                                {selectedLocation.translations[i18next.language].first_name} &nbsp;\n                                {selectedLocation.translations[i18next.language].last_name} &nbsp;\n                                {selectedLocation.translations[i18next.language].middle_name}\n                            </div>\n\n                            <div className=\"section-commit\">\n                                <div className=\"raiting\">\n                                    <img src=\"./images/star.png\" alt=\"\"/>\n                                    {selectedLocation.avg_rating}\n                                </div>\n                                <span></span>\n                                <div className=\"commit-count\">\n                                    {selectedLocation.comment_count} {t(\"comment\")}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"section-location\">\n                            <div className=\"location\">\n                                <img src=\"./images/job.png\" alt=\"\"/>\n                                {selectedLocation.specialty.translations[i18next.language].name}\n                            </div>\n                            <span></span>\n                            <div className=\"time-open\">\n                                {selectedLocation.experience} {t(\"experience\")}\n                            </div>\n                        </div>\n\n                        <div className=\"section-location\">\n                            <div className=\"location\">\n                                <img src=\"./images/icon.png\" alt=\"\"/>\n                                {selectedLocation.hospital ? selectedLocation.hospital.translations[i18next.language].address :\n                                    selectedLocation.translations[i18next.language].address}\n                            </div>\n\n                            {selectedLocation.hospital ?\n                                <>\n                                    <span></span>\n                                    <div className=\"time-open\">\n                                        {selectedLocation.hospital.translations[i18next.language].name}\n                                    </div>\n                                </> : \"\"}\n                        </div>\n\n                        <div className=\"section-location\">\n                            <div className=\"location\">\n                                <img src=\"./images/time.png\" alt=\"\"/>\n                                {selectedLocation.working_days.map((item, index) => {\n                                    return <p key={index}>\n                                        {item.translations[i18next.language].day}\n                                    </p>\n                                })}\n                            </div>\n                            <span></span>\n                            <div className=\"time-open\">\n                                {selectedLocation.start_time} {t(\"from\")}\n                                &nbsp;\n                                {selectedLocation.end_time} {t(\"to\")}\n                            </div>\n                        </div>\n\n                        <div className=\"buttons\">\n                            <div onClick={() => {\n                                localStorage.setItem(\"doctorId\", selectedLocation.id)\n                                navigate(\"/about-doctor\")\n                                dispatch(getAboutMarker(selectedLocation.location ? selectedLocation.location : selectedLocation.hospital.location))\n                            }} className=\"more-btn\">\n                                {t(\"more\")}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </InfoWindow>)}\n    </>\n};\n\nexport default DoctorMarkers","import {InfoWindow, MarkerClustererF, MarkerF} from \"@react-google-maps/api\";\nimport {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport i18next from \"i18next\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport {useTranslation} from \"react-i18next\";\n\nconst PharmaciesMarkers = () => {\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const Pharmacies = useSelector((store) => store.Pharmacies.data);\n    const [selectedLocation, setSelectedLocation] = useState(null);\n    const [clinicActiveId, setClinicActiveId] = useState(null);\n    const icon = {url: './images/pharma-pin.png', scaledSize: {width: 50, height: 55}};\n    const icon2 = {url: './images/pharma-pin-active.png', scaledSize: {width: 50, height: 55}};\n\n    const onMarkerClick = (location) => {\n        setSelectedLocation(location);\n    };\n\n    const onCloseClick = () => {\n        setSelectedLocation(null);\n        setClinicActiveId(null)\n    };\n\n    const isPlaceOpen = (startTime, endTime) => {\n        const startParts = startTime.split(':');\n        const endParts = endTime.split(':');\n\n        const startDate = new Date();\n        startDate.setHours(startParts[0], startParts[1], startParts[2]);\n\n        const endDate = new Date();\n        endDate.setHours(endParts[0], endParts[1], endParts[2]);\n\n        const now = new Date();\n\n        return now >= startDate && now <= endDate;\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    return <>\n        <MarkerClustererF gridSize={60}>\n            {(clusterer) => Pharmacies.map((item, index) => {\n                return <MarkerF\n                    key={index}\n                    position={{lat: Number(item.location.split(\",\")[0]), lng: Number(item.location.split(\",\")[1])}}\n                    icon={clinicActiveId === item.id ? icon2 : icon}\n                    onClick={() => {\n                        onMarkerClick(item);\n                        setClinicActiveId(item.id)\n                    }}\n                    clusterer={clusterer}\n                />\n            })}\n        </MarkerClustererF>\n\n        {selectedLocation && (<InfoWindow\n            position={{\n                lat: Number(selectedLocation.location.split(\",\")[0]),\n                lng: Number(selectedLocation.location.split(\",\")[1])\n            }}\n            onCloseClick={onCloseClick}\n        >\n            <div className=\"info-box-clinic\">\n                <div className=\"info-text\">\n                    <div className=\"photo-clinic\">\n                        <img src={selectedLocation.image} alt=\"\"/>\n                    </div>\n                    <div onClick={() => NavigateButton(selectedLocation.location)}\n                         className=\"navigator\">\n                        {t(\"navigator\")}\n                        <img src=\"./images/compass.png\" alt=\"\"/>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"header-clinic\">\n                            <div className=\"name-clinic\">\n                                {selectedLocation.translations[i18next.language].name}\n                            </div>\n\n                            <div className=\"section-commit\">\n                                <div className=\"raiting\">\n                                    <img src=\"./images/star2.png\" alt=\"\"/>\n                                    {selectedLocation.avg_rating}\n                                </div>\n                                <span></span>\n                                <div className=\"commit-count\">\n                                    ({selectedLocation.comment_count})\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"section-location\">\n                            <div className=\"location\">\n                                <img src=\"./images/icon.png\" alt=\"\"/>\n                                {selectedLocation.translations[i18next.language].address}\n                            </div>\n                        </div>\n\n                        <div className=\"section-location\">\n                            <div className=\"location\">\n                                <img src=\"./images/time.png\" alt=\"\"/>\n                                {selectedLocation.open_24 ? <div\n                                    className=\"open\">{t(\"open\")}</div> : isPlaceOpen(selectedLocation.start_time, selectedLocation.end_time) ?\n                                    <div className=\"open\">{t(\"open\")}</div> :\n                                    <div className=\"close\">{t(\"close\")}</div>}\n                            </div>\n\n                            <span></span>\n                            <div className=\"time-open\">\n                                {selectedLocation.open_24 ? t(\"open24\") : <>\n                                    {selectedLocation.start_time} {t(\"from\")}\n                                    &nbsp;\n                                    {selectedLocation.end_time} {t(\"to\")}\n                                </>}\n                            </div>\n                        </div>\n\n                        <div className=\"buttons\">\n                            <div onClick={() => {\n                                localStorage.setItem(\"pharmacyId\", selectedLocation.id);\n                                dispatch(getAboutMarker(selectedLocation.location));\n                                navigate(\"/about-pharmacies\")\n                            }} className=\"more-btn\">\n                                {t(\"more\")}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </InfoWindow>)}\n    </>\n};\n\nexport default PharmaciesMarkers","import {MarkerF} from \"@react-google-maps/api\";\nimport {useSelector} from \"react-redux\";\n\nconst AboutMarker = () => {\n    const aboutMarker = useSelector((store) => store.MarkerAbout.data);\n    const icon = {url: './images/address.png', scaledSize: {width: 50, height: 65}};\n    let location = {lat: Number(aboutMarker.split(\",\")[0]), lng: Number(aboutMarker.split(\",\")[1])};\n    return <>\n        <MarkerF\n            key={location.lat}\n            position={location}\n            icon={icon}\n        />\n    </>\n};\n\nexport default AboutMarker","import {useEffect, useState, useMemo} from \"react\";\nimport {GoogleMap, useLoadScript} from \"@react-google-maps/api\";\nimport i18next from \"i18next\";\nimport {GOOGLE_MAPS_API_KEY} from \"./googleMapsApi\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getLocation} from \"../../redux/locationUser\";\nimport {show} from \"../../redux/show-map\";\nimport LoaderMap from \"./loader-map/LoaderMap\";\nimport {useNavigate} from \"react-router-dom\";\nimport ClinicMarkers from \"./ClinicMarkers\";\nimport DoctorMarkers from \"./DoctorMarkers\";\nimport PharmaciesMarkers from \"./PharmaciesMarkers\";\nimport AboutMarker from \"./AboutMarker\";\nimport {useTranslation} from \"react-i18next\";\n\nconst libraries = [\"places\"];\n\nconst Map = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [onloadMap, setOnloadMap] = useState(false)\n    const location = useSelector((store) => store.LocationUser.data);\n    const showMap = useSelector((store) => store.ShowMap.data);\n    const [center, setCenter] = useState(null)\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false\n        }),\n        []\n    );\n\n    // useEffect(() => {\n    //     navigator.geolocation.getCurrentPosition((position) => {\n    //         const {latitude, longitude} = position.coords;\n    //         let locMy = {lat: Number(latitude), lng: Number(longitude)}\n    //         setCenter(locMy)\n    //     });\n    // }, []);\n\n    useEffect(() => {\n        if (isLoaded) {\n            setOnloadMap(true);\n        }\n    }, [isLoaded]);\n\n    useEffect(() => {\n        let locMy = {lat: Number(location.latitude), lng: Number(location.longitude)};\n        setCenter(locMy)\n    }, [location]);\n\n    const myLocation = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n            axios.get(`${url}`, {headers: {\"Accept-Language\": i18next.language}}).then((res) => {\n                let regionkey = regions.findIndex(region => region.name === res.data.address.city)\n                const location = {\n                    key: regionkey,\n                    \"city\": res.data.address.city,\n                    \"latitude\": latitude,\n                    \"longitude\": longitude\n                };\n                dispatch(getLocation(location));\n            });\n        });\n    };\n\n    if (!isLoaded) return <LoaderMap/>;\n    return <>\n        <GoogleMap\n            zoom={9}\n            center={center}\n            options={options}\n            mapContainerClassName=\"map\"\n            onLoad={() => setOnloadMap(true)}\n        >\n            <div onClick={myLocation} className=\"my-location\">\n                <img src=\"./images/direction.png\" alt=\"\"/>\n            </div>\n\n            <div onClick={() => dispatch(show(!showMap))} className=\"show-hide-btn\">\n                <img className={showMap ? \"hide-img\" : \"\"} src=\"./images/Vector.png\" alt=\"\"/>\n            </div>\n\n            {onloadMap && window.location.pathname === \"/\" && <ClinicMarkers/>}\n            {onloadMap && window.location.pathname === \"/doctors\" && <DoctorMarkers/>}\n            {onloadMap && window.location.pathname === \"/pharmacies\" && <PharmaciesMarkers/>}\n        </GoogleMap>\n    </>\n};\n\nexport default Map","import \"./style.scss\"\nimport {NavLink, useNavigate} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\n\nconst MobileNavbar = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n\n    const Menus = [\n        {\n            name: t('nav1'),\n            url: \"/\",\n            icon: \"clinic\"\n        },\n        {\n            name: t('nav2'),\n            url: \"/doctors\",\n            icon: \"doctor\"\n        },\n        {\n            name: t('nav3'),\n            url: \"/pharmacies\",\n            icon: \"pharmacy\"\n        },\n        {\n            name: t('nav4'),\n            url: \"/services\",\n            icon: \"service\"\n        }\n    ];\n\n    return <div className=\"mobile-navbar\">\n        <div className=\"menu-wrapper\">\n            {\n                Menus.map((item, index) => {\n                    return <NavLink to={item.url} key={index}\n                                    className={`menu-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\n\n                        <div className=\"icon\">\n                            <div className={`icons ${item.icon}`}/>\n                        </div>\n\n                        <span> {item.name}</span>\n                    </NavLink>\n                })\n            }\n        </div>\n    </div>\n};\n\nexport default MobileNavbar","import React, {useContext, useEffect, useState} from 'react';\nimport Slider from \"react-slick\";\nimport axios from \"axios\";\nimport {useSelector} from \"react-redux\";\nimport \"./advetStyle.scss\"\n\nfunction AdvertBox(props) {\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [adverts, setAdverts] = useState([]);\n\n    // useEffect(() => {\n    //     axios.get(`${baseUrl}/api/advertisement/`).then((response) => {\n    //         setAdverts(response.data);\n    //     }).catch(() => {\n    //     });\n    //\n    // }, []);\n\n    const settingsAdvertSlider = {\n        lazyLoad: false,\n        slidesToShow: 1,\n        dots: false,\n        infinite: true,\n        fade: true,\n        speed: 3000,\n        autoplay: true,\n        navs: false,\n        slidesToScroll: 1,\n        initialSlide: 1,\n        responsive: [{\n            breakpoint: 1024, settings: {\n                slidesToShow: 1, slidesToScroll: 1, infinite: true, dots: false\n            }\n        }, {\n            breakpoint: 600, settings: {\n                slidesToShow: 1, slidesToScroll: 1, initialSlide: 1\n            }\n        }, {\n            breakpoint: 480, settings: {\n                slidesToShow: 1, slidesToScroll: 1\n            }\n        }]\n    };\n\n    return (\n        adverts.length > 0 ? <div className=\"advert-box\">\n            <Slider {...settingsAdvertSlider}>\n                {adverts ? adverts.map((item, index) => {\n                    return <div key={index}>\n                        <img src={item.image} alt=\"\"/>\n                    </div>\n                }) : \"\"}\n            </Slider>\n        </div> : <></>\n    );\n}\n\nexport default AdvertBox;","import \"./style-clinics.scss\";\nimport Navbar from \"../navbar/Navbar\";\nimport {useEffect, useState} from \"react\";\nimport {MenuItem, InputLabel, FormControl, Select} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\nimport i18next from \"i18next\";\nimport {useNavigate} from \"react-router-dom\";\nimport Footer from \"../footer/Footer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Map from \"../map/Map\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport axios from \"axios\";\nimport {getLocation} from \"../../redux/locationUser\";\nimport {getClinics} from \"../../redux/clinics\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\nimport {show} from \"../../redux/show-map\";\nimport AdvertBox from \"../adverts/AdvertBox\";\n\n\nconst Clinics = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const {t} = useTranslation();\n    const clinics = useSelector((store) => store.Clinics.data);\n    const filterService = useSelector((store) => store.Menu.data);\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const showMap = useSelector((store) => store.ShowMap.data);\n    const location = useSelector((store) => store.LocationUser.data);\n    const [serviceList, setServiceList] = useState([]);\n    const [regionSelect, setRegionSelect] = useState(\"\");\n    const [hospitalList, setHospitalList] = useState([]);\n    const [hospitalType, setHospitalType] = useState(\"\");\n    const [region, setRegion] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [speciality, setSpeciality] = useState(\"\");\n    const [working24, setWorking24] = useState(\"\");\n    const [disable, setDisable] = useState(\"\");\n    const [emergency_number, setEmergency_number] = useState(\"\");\n    const [savedPosts, setSavedPosts] = useState([]);\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    useEffect(() => {\n        axios.get(`${baseUrl}hospital-type/`, {\n            headers: {\n                \"Accept-Language\": i18next.language\n            },\n        }).then((response) => {\n            setHospitalList(response.data)\n        }).catch((error) => {\n        });\n\n        axios.get(`${baseUrl}speciality/`, {\n            headers: {\n                \"Accept-Language\": i18next.language\n            },\n        }).then((response) => {\n            setServiceList(response.data)\n        }).catch((error) => {\n        });\n\n        setSavedPosts(getSavedPosts())\n    }, []);\n\n    useEffect(() => {\n        if (location.key + 1 && !filterService) {\n            filterHospital(hospitalType, location.key + 1, type, speciality, working24, disable, emergency_number);\n            setRegion(location.key + 1);\n            setRegionSelect(location.key)\n        }\n    }, [location]);\n\n    const ShowModal = (status, item) => {\n        dispatch(showModals({show: true, status, item}))\n    };\n\n    const filterHospital = (hospital_type_key, region_key, type_key, speciality_key, open_24_key, disabled_key, emergency_number_key) => {\n        let filterBox = {\n            hospital_type: hospital_type_key,\n            region: region_key,\n            type: type_key,\n            speciality: speciality_key,\n            open_24: open_24_key,\n            disabled: disabled_key,\n            emergency_number: emergency_number_key\n        };\n\n        const queryString = Object.entries(filterBox)\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n            .join('&');\n\n        axios.get(`${baseUrl}hospital/?${queryString}`).then((response) => {\n            dispatch(getClinics(response.data));\n        })\n    };\n\n    const changeRegion = (region, index) => {\n        const location = {key: index, \"city\": region.name, \"latitude\": region.latitude, \"longitude\": region.longitude};\n        dispatch(getLocation(location));\n    };\n\n    const getSavedPosts = () => {\n        const savedPosts = localStorage.getItem('hospital_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n\n    const handleSaveClick = (postId) => {\n        let updatedSavedPosts = [...savedPosts];\n\n        if (savedPosts.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('hospital_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPosts(updatedSavedPosts);\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    return <>\n        <div className=\"clinics-wrapper\">\n            <AdvertBox/>\n            <Navbar/>\n            <div className=\"clinics-list\">\n                <div className=\"category-wrapper\">\n                    {\n                        hospitalList.map((item, index) => {\n                            return <div key={index}>\n                                <div onClick={() => {\n                                    setHospitalType(item.id)\n                                    filterHospital(item.id, region, type, speciality, working24, disable);\n                                }}\n                                     className={`category-name ${hospitalType === item.id ? \"active\" : \"\"}`}>\n                                    {item.translations[i18next.language].name}\n                                </div>\n                            </div>\n                        })\n                    }\n                </div>\n                <div className=\"bottom-content\">\n                    <div className={showMap ? \"left-side-hide\" : \"left-side\"}>\n                        <div className=\"category-wrapper\">\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"selectProfessional\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"region\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={regionSelect}\n                                            label={t(\"region\")}\n                                            onChange={(e) => {\n                                                setRegion(e.target.value)\n                                                setRegionSelect(e.target.value)\n                                            }}\n                                        >\n                                            {regions.map((item, index) => {\n                                                return <MenuItem onClick={() => changeRegion(item, index)}\n                                                                 key={index + 1}\n                                                                 value={index}>\n                                                    {item.name}\n                                                </MenuItem>\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <div onClick={() => {\n                                        filterHospital(hospitalType, region, type, speciality, working24, disable, !emergency_number);\n                                        setEmergency_number(!emergency_number)\n                                    }}\n                                         className={`button-filter ${emergency_number ? \"active-filter-btn\" : \"\"}`}>\n                                        {t(\"emergency\")}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"selectHospitalType\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"hospital_type\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={type}\n                                            label={t(\"hospital_type\")}\n                                            onChange={(e) => {\n                                                filterHospital(hospitalType, region, e.target.value, speciality, working24, disable, emergency_number);\n                                                setType(e.target.value)\n                                            }}\n                                        >\n                                            <MenuItem value={1}>{t(\"hospital_type1\")}</MenuItem>\n                                            <MenuItem value={2}>{t(\"hospital_type2\")}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"selectProfessional\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"expertise\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={speciality}\n                                            label={t(\"expertise\")}\n                                            onChange={(e) => {\n                                                filterHospital(hospitalType, region, type, e.target.value, working24, disable, emergency_number);\n                                                setSpeciality(e.target.value)\n                                            }}\n                                        >\n                                            {serviceList.map((item, index) => {\n                                                return <MenuItem key={index} value={item.id}>\n                                                    {item.translations[i18next.language].name}\n                                                </MenuItem>\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <div onClick={() => {\n                                        filterHospital(hospitalType, region, type, speciality, !working24, disable, emergency_number);\n                                        setWorking24(!working24)\n                                    }}\n                                         className={`button-filter ${working24 ? \"active-filter-btn\" : \"\"}`}>\n                                        {t(\"open24\")}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <div onClick={() => {\n                                        filterHospital(hospitalType, region, type, speciality, working24, !disable, emergency_number);\n                                        setDisable(!disable)\n                                    }}\n                                         className={`button-filter ${disable ? \"active-filter-btn\" : \"\"}`}>\n                                        {t(\"disable\")}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {!showMap && <div className=\"clinics\">\n                            {clinics.length > 0 && clinics.map((item, index) => {\n                                return <div key={index} className=\"clinic\">\n                                    <div className=\"left-side\">\n                                        <img src={item.image} alt=\"\"/>\n                                        <div className=\"like\">\n                                            <img onClick={() => handleSaveClick(item.id)}\n                                                 src={savedPosts.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                                                 alt=\"\"/>\n                                        </div>\n                                    </div>\n                                    <div className=\"right-side\">\n                                        <div className=\"header-clinic\">\n                                            <div className=\"name-clinic\">\n                                                {item.translations[i18next.language].name}\n                                            </div>\n                                            <div className=\"buttons\">\n                                                <div onClick={() => ShowModal(\"contact\", item)}\n                                                     className=\"button-call\">{t(\"call\")}\n                                                </div>\n                                                <div onClick={() => ShowModal(\"sms\", item.user)}\n                                                     className=\"button-send\">{t(\"acceptance2\")}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"section-commit\">\n                                            <div className=\"raiting\">\n                                                {item.avg_rating}\n                                            </div>\n                                            <div className=\"commit-count\">\n                                                {item.comment_count} {t(\"comment\")}\n                                            </div>\n                                        </div>\n                                        <div className=\"section-location\">\n                                            <div className=\"location\">\n                                                <img src=\"./images/icon.png\" alt=\"\"/>\n                                                {item.translations[i18next.language].address}\n                                            </div>\n                                            <div className=\"time-open\">\n                                                <img src=\"./images/clock.png\" alt=\"\"/>\n\n                                                {item.open_24 ? t(\"open24\") : <>\n                                                    {item.start_time} {t(\"from\")}\n                                                    &nbsp;\n                                                    {item.end_time} {t(\"to\")}\n                                                </>}\n\n                                            </div>\n                                        </div>\n                                        <div className=\"services\">\n                                            {item.hospital_services.map((item, index) => {\n                                                return <div key={index} className=\"service\">\n                                                    {item.service.translations[i18next.language].name}\n                                                </div>\n                                            })}\n                                        </div>\n\n                                        <div className=\"btns\">\n                                            <div onClick={() => {\n                                                navigate(\"/about-clinic\");\n                                                localStorage.setItem(\"clinicId\", item.id);\n                                                dispatch(getAboutMarker(item.location))\n                                            }} className=\"more-btn\">\n                                                {t(\"more\")}\n                                            </div>\n                                            <div className=\"left-btn\">\n                                                {item.emergency_number &&\n                                                <a href={`tel:${item.emergency_number}`} className=\"emergency\">\n                                                    <img src=\"./images/phone-call.png\" alt=\"\"/>\n                                                    {item.emergency_number}\n                                                </a>}\n\n                                                <div onClick={() => NavigateButton(item.location)}\n                                                     className=\"navigator\">\n                                                    {t(\"navigator\")}\n                                                    <img src=\"./images/compass.png\" alt=\"\"/>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            })}\n                            <Footer/>\n                        </div>}\n                    </div>\n                    <div className={`right-side ${showMap ? \"show-map\" : \"\"}`}>\n                        <Map/>\n                    </div>\n                </div>\n            </div>\n            <div onClick={() => dispatch(show(!showMap))} className=\"map-mobile\">\n                {showMap ? <img className=\"prev-to\" src=\"./images/next-btn.png\" alt=\"\"/> :\n                    <img src=\"./images/map-mobile.png\" alt=\"\"/>}\n                {showMap ? t(\"prev\") : t(\"map\")}\n            </div>\n            <div className=\"mobile-navbar-container\">\n                <MobileNavbar/>\n            </div>\n        </div>\n    </>\n};\n\nexport default Clinics","import \"./style-doctors.scss\";\nimport Navbar from \"../navbar/Navbar\";\nimport {useEffect, useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Footer from \"../footer/Footer\";\nimport Map from \"../map/Map\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\nimport {getLocation} from \"../../redux/locationUser\";\nimport {show} from \"../../redux/show-map\";\nimport {getDoctor} from \"../../redux/doctors\";\nimport axios from \"axios\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport AdvertBox from \"../adverts/AdvertBox\";\n\nconst Doctors = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const filterService = useSelector((store) => store.Menu.data);\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const Doctors = useSelector((store) => store.Doctors.data);\n    const showMap = useSelector((store) => store.ShowMap.data);\n    const [serviceList, setServiceList] = useState([]);\n    const [regionSelect, setRegionSelect] = useState(\"\");\n    const [region, setRegion] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [cost, setCost] = useState(\"\");\n    const [speciality, setSpeciality] = useState(\"\");\n    const [savedPosts, setSavedPosts] = useState([]);\n\n    const location = useSelector((store) => store.LocationUser.data);\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    useEffect(() => {\n        axios.get(`${baseUrl}speciality/`, {\n            headers:{\n                \"Accept-Language\": i18next.language\n            },\n        }).then((response) => {\n            setServiceList(response.data)\n        }).catch((error) => {\n        });\n\n        setSavedPosts(getSavedPosts())\n    }, []);\n\n    useEffect(() => {\n        if (location.key + 1 && !filterService) {\n            filterHospital(location.key + 1, gender, cost, speciality);\n            setRegion(location.key + 1);\n            setRegionSelect(location.key)\n        }\n    }, [location]);\n\n    const filterHospital = (region_key, gender_key, cost_key, speciality_key) => {\n        let filterBox = {\n            region: region_key,\n            gender: gender_key,\n            cost: cost_key,\n            specialty: speciality_key,\n        };\n\n        const queryString = Object.entries(filterBox)\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n            .join('&');\n\n        axios.get(`${baseUrl}doctor/?${queryString}`).then((response) => {\n            dispatch(getDoctor(response.data));\n        })\n    };\n\n    const changeRegion = (region, index) => {\n        const location = {key: index, \"city\": region.name, \"latitude\": region.latitude, \"longitude\": region.longitude};\n        dispatch(getLocation(location));\n    };\n\n    const ShowModal = (status, item) => {\n        dispatch(showModals({show: true, status, item}))\n    };\n\n    const getSavedPosts = () => {\n        const savedPosts = localStorage.getItem('doctor_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n\n    const handleSaveClick = (postId) => {\n        let updatedSavedPosts = [...savedPosts];\n\n        if (savedPosts.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('doctor_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPosts(updatedSavedPosts);\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    return <>\n        <div className=\"doctors-wrapper\">\n            <AdvertBox/>\n            <Navbar/>\n            <div className=\"doctors-list\">\n                <div className=\"bottom-content\">\n                    <div className={showMap ? \"left-side-hide\" : \"left-side\"}>\n                        <div className=\"category-wrapper\">\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"selectProfessional\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"region\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={regionSelect}\n                                            label={t(\"region\")}\n                                            onChange={(e) => {\n                                                setRegion(e.target.value)\n                                                setRegionSelect(e.target.value)\n                                            }}\n                                        >\n                                            {regions.map((item, index) => {\n                                                return <MenuItem onClick={() => changeRegion(item, index)}\n                                                                 key={index + 1}\n                                                                 value={index}>\n                                                    {item.name}\n                                                </MenuItem>\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"selectHospitalType\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"gender\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={gender}\n                                            label={t(\"gender\")}\n                                            onChange={(e) => {\n                                                filterHospital(region, e.target.value, cost, speciality);\n                                                setGender(e.target.value)\n                                            }}\n                                        >\n                                            <MenuItem value={true}>{t(\"men\")}</MenuItem>\n                                            <MenuItem value={false}>{t(\"women\")}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"price\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"price\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={cost}\n                                            label={\"price\"}\n                                            onChange={(e) => {\n                                                filterHospital(region, gender, e.target.value, speciality);\n                                                setCost(e.target.value)\n                                            }}\n                                        >\n                                            <MenuItem value={true}>{t(\"cheap\")}</MenuItem>\n                                            <MenuItem value={false}>{t(\"expensive\")}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"selectProfessional\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"expertise\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={speciality}\n                                            label={t(\"expertise\")}\n                                            onChange={(e) => {\n                                                filterHospital(region, gender, cost, e.target.value);\n                                                setSpeciality(e.target.value)\n                                            }}\n                                        >\n                                            {serviceList.map((item, index) => {\n                                                return <MenuItem key={index} value={item.id}>\n                                                    {item.translations[i18next.language].name}\n                                                </MenuItem>\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        {!showMap && <div className=\"doctors\">\n\n                            {Doctors.map((item, index) => {\n                                return <div key={index} className=\"doctor\">\n                                    <div className=\"left-side\">\n                                        <img src={item.image} alt=\"\"/>\n                                        <div className=\"like\">\n                                            <img onClick={() => handleSaveClick(item.id)}\n                                                 src={savedPosts.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                                                 alt=\"\"/>\n                                        </div>\n                                        <div onClick={() => NavigateButton(item.location)}\n                                             className=\"navigator\">\n                                            {t(\"navigator\")}\n                                            <img src=\"./images/compass.png\" alt=\"\"/>\n                                        </div>\n                                    </div>\n                                    <div className=\"right-side\">\n                                        <div className=\"header-clinic\">\n                                            <div className=\"name-clinic\">\n                                                {item.translations[i18next.language].first_name} &nbsp;\n                                                {item.translations[i18next.language].last_name} &nbsp;\n                                                {item.translations[i18next.language].middle_name}\n                                            </div>\n\n                                            <div className=\"section-commit\">\n                                                <div className=\"raiting\">\n                                                    <img src=\"./images/star.png\" alt=\"\"/>\n                                                    {item.avg_rating}\n                                                </div>\n                                                <span></span>\n                                                <div className=\"commit-count\">\n                                                    {item.comment_count} {t(\"comment\")}\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"section-location\">\n                                            <div className=\"location\">\n                                                <img src=\"./images/job.png\" alt=\"\"/>\n                                                {item.specialty.translations[i18next.language].name}\n                                            </div>\n                                            <span></span>\n                                            <div className=\"time-open\">\n                                                {item.experience} {t(\"experience\")}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"section-location\">\n                                            <div className=\"location\">\n                                                <img src=\"./images/icon.png\" alt=\"\"/>\n                                                {item.hospital ? item.hospital.translations[i18next.language].address :\n                                                    item.translations[i18next.language].address}\n                                            </div>\n\n                                            {item.hospital ?\n                                                <>\n                                                    <span></span>\n                                                    <div className=\"time-open\">\n                                                       <b>\n                                                           {item.hospital.translations[i18next.language].name}\n                                                       </b>\n                                                    </div>\n                                                </> : \"\"}\n                                        </div>\n\n                                        <div className=\"section-location-working-days\">\n                                            <div className=\"location\">\n                                                <img src=\"./images/time.png\" alt=\"\"/>\n                                                {item.working_days.map((itemWorkingdays, index) => {\n                                                    return <p key={index}>\n                                                        &nbsp;\n                                                        {itemWorkingdays.translations[i18next.language].day}\n                                                        {index !== item.working_days.length-1 && \",\"}\n                                                    </p>\n                                                })}\n                                            </div>\n                                            <br/>\n                                            <div className=\"time-open\">\n                                                <img src=\"./images/clock.png\" alt=\"\"/>\n                                                {item.start_time} {t(\"from\")}\n                                                &nbsp;\n                                                {item.end_time} {t(\"to\")}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"services\">\n                                            {item.sub_speciality.map((item, index) => {\n                                                return <div key={index} className=\"service\">\n                                                    {item.translations[i18next.language].name}\n                                                </div>\n                                            })}\n                                        </div>\n\n                                        <div onClick={() => NavigateButton(item.location)}\n                                             className=\"navigator\">\n                                            {t(\"navigator\")}\n                                            <img src=\"./images/compass.png\" alt=\"\"/>\n                                        </div>\n\n                                        <div className=\"prices\">\n                                            <div className=\"item-price\">\n                                                <div className=\"title\">{t(\"first-consultation\")}</div>\n                                                <div className=\"number\">\n                                                    {item.consultation_fee ? <>{item.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\n                                                </div>\n                                            </div>\n                                            <div className=\"item-price\">\n                                                <div className=\"title\">{t(\"second-consultation\")}</div>\n                                                <div className=\"number\">\n                                                    {item.second_consultation_fee ?\n                                                        <>{item.second_consultation_fee} {t(\"sum\")} </> :\n                                                        t(\"agreement\")}\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"buttons\">\n                                            <div className=\"left-btn\">\n                                                <div onClick={() => ShowModal(\"sms\", item.user)}\n                                                     className=\"button-send\">\n                                                    {t(\"acceptance\")}\n                                                </div>\n                                                <div onClick={() => ShowModal(\"contact\", item)}\n                                                     className=\"button-call\">\n                                                    {t(\"call\")}\n                                                </div>\n                                            </div>\n\n                                            <div onClick={() => {\n                                                localStorage.setItem(\"doctorId\", item.id)\n                                                navigate(\"/about-doctor\")\n                                                dispatch(getAboutMarker(item.location ? item.location : item.hospital.location))\n                                            }} className=\"more-btn\">\n                                                {t(\"more\")}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            })}\n\n\n                            {/*<div className=\"pagination-box\">*/}\n                            {/*    <div className=\"prev-btn\">*/}\n                            {/*        <img src=\"./images/arrow.png\" alt=\"\"/>*/}\n                            {/*    </div>*/}\n\n                            {/*    <div className=\"pagination-items\">*/}\n                            {/*        1*/}\n                            {/*    </div>*/}\n                            {/*    <div className=\"pagination-items\">*/}\n                            {/*        2*/}\n                            {/*    </div>*/}\n                            {/*    <div className=\"pagination-items\">*/}\n                            {/*        3*/}\n                            {/*    </div>*/}\n                            {/*    <div className=\"pagination-items\">*/}\n                            {/*        4*/}\n                            {/*    </div>*/}\n\n                            {/*    <div className=\"next-btn\">*/}\n                            {/*        <img src=\"./images/arrow.png\" alt=\"\"/>*/}\n                            {/*    </div>*/}\n                            {/*</div>*/}\n                            <Footer/>\n                        </div>}\n                    </div>\n\n                    <div className={`right-side ${showMap ? \"show-map\" : \"\"}`}>\n                        <Map/>\n                    </div>\n                </div>\n            </div>\n            <div onClick={() => dispatch(show(!showMap))} className=\"map-mobile\">\n                {showMap ? <img className=\"prev-to\" src=\"./images/next-btn.png\" alt=\"\"/> :\n                    <img src=\"./images/map-mobile.png\" alt=\"\"/>}\n                {showMap ? t(\"prev\") : t(\"map\")}\n            </div>\n            <div className=\"mobile-navbar-container\">\n                <MobileNavbar/>\n            </div>\n        </div>\n    </>\n};\n\nexport default Doctors","import \"./style-pharmacies.scss\";\nimport Navbar from \"../navbar/Navbar\";\nimport {useEffect, useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Footer from \"../footer/Footer\";\nimport Map from \"../map/Map\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\nimport {getLocation} from \"../../redux/locationUser\";\nimport {show} from \"../../redux/show-map\";\nimport {getPharmacies} from \"../../redux/pharmacies\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\nimport axios from \"axios\";\nimport {useTranslation} from \"react-i18next\";\nimport i18next from \"i18next\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport AdvertBox from \"../adverts/AdvertBox\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\n\n\nconst Pharmacies = () => {\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const filterService = useSelector((store) => store.Menu.data);\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const Pharmacies = useSelector((store) => store.Pharmacies.data);\n    const location = useSelector((store) => store.LocationUser.data);\n    const showMap = useSelector((store) => store.ShowMap.data);\n    const [regionSelect, setRegionSelect] = useState(\"\");\n    const [working24, setWorking24] = useState(\"\");\n    const [region, setRegion] = useState(\"\");\n    const [savedPosts, setSavedPosts] = useState([]);\n    const [searchText, setSearchText] = useState(\"\");\n    const [cost, setCost] = useState(true);\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    const isPlaceOpen = (startTime, endTime) => {\n        const startParts = startTime.split(':');\n        const endParts = endTime.split(':');\n\n        const startDate = new Date();\n        startDate.setHours(startParts[0], startParts[1], startParts[2]);\n\n        const endDate = new Date();\n        endDate.setHours(endParts[0], endParts[1], endParts[2]);\n\n        const now = new Date();\n\n        return now >= startDate && now <= endDate;\n    };\n\n    useEffect(() => {\n        if (location.key + 1 && !filterService) {\n            filterHospital(location.key + 1, working24);\n            setRegion(location.key + 1);\n            setRegionSelect(location.key)\n        }\n    }, [location]);\n\n    useEffect(() => {\n        setSavedPosts(getSavedPosts())\n    }, []);\n\n    const filterHospital = (region_key, open_24_key) => {\n        let filterBox = {\n            region: region_key,\n            open_24: open_24_key\n        };\n\n        const queryString = Object.entries(filterBox)\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n            .join('&');\n\n        axios.get(`${baseUrl}pharmacy/?${queryString}`).then((response) => {\n            dispatch(getPharmacies(response.data));\n        })\n    };\n\n    const changeRegion = (region, index) => {\n        const location = {key: index, \"city\": region.name, \"latitude\": region.latitude, \"longitude\": region.longitude};\n        dispatch(getLocation(location));\n    };\n\n    const getSavedPosts = () => {\n        const savedPosts = localStorage.getItem('pharmacy_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n\n    const handleSaveClick = (postId) => {\n        let updatedSavedPosts = [...savedPosts];\n\n        if (savedPosts.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('pharmacy_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPosts(updatedSavedPosts);\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    const filterPharmacy = () => {\n        axios.get(`${baseUrl}pharmacy/search_pill/?medicine=${searchText}&region=${region}`).then((response) => {\n            dispatch(getPharmacies(response.data));\n        }).catch((error) => {\n            if (error.response.status) {\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: t(\"search_text_med\"),\n                    img: \"./images/yellow.svg\",\n                    color: \"#fff4e0\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n            }\n        })\n    };\n\n    const sortPharmacies = (i) => {\n        if (Pharmacies[0].hasOwnProperty('medicine_cost')) {\n            var temp_list = [...Pharmacies];\n            if (i) {\n                temp_list.sort((a, b) => a.medicine_cost - b.medicine_cost);\n            } else {\n                temp_list.sort((a, b) => b.medicine_cost - a.medicine_cost);\n            }\n            dispatch(getPharmacies(temp_list));\n        }\n    };\n\n    return <>\n        <div className=\"pharmacies-wrapper\">\n            <AdvertBox/>\n            <Navbar/>\n            <div className=\"pharmacies-list\">\n                <div className=\"bottom-content\">\n                    <div className={showMap ? \"left-side-hide\" : \"left-side\"}>\n                        <div className=\"category-wrapper\">\n                            <div>\n                                <div className=\"dropdown-filter-search\">\n                                    <input value={searchText} onChange={(e) => setSearchText(e.target.value)}\n                                           placeholder={t(\"input_med\")} type=\"text\"/>\n\n                                    <div className=\"cancel-box\">\n                                        {searchText && <img onClick={() => setSearchText(\"\")} className=\"cancel\"\n                                                            src=\"./images/x-button.png\" alt=\"\"/>}\n                                    </div>\n\n                                    <div onClick={filterPharmacy} className=\"btn-search\">\n                                        {t(\"search_med\")}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"selectProfessional\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"region\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={regionSelect}\n                                            label={t(\"region\")}\n                                            onChange={(e) => {\n                                                setRegion(e.target.value)\n                                                setRegionSelect(e.target.value)\n                                            }}\n                                        >\n                                            {regions.map((item, index) => {\n                                                return <MenuItem onClick={() => changeRegion(item, index)}\n                                                                 key={index + 1}\n                                                                 value={index}>\n                                                    {item.name}\n                                                </MenuItem>\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>\n\n                            {searchText &&\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                                 className=\"price\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"price\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={cost}\n                                            label={\"price\"}\n                                            onChange={(e) => {\n                                                sortPharmacies(e.target.value)\n                                                setCost(e.target.value)\n                                            }}\n                                        >\n                                            <MenuItem value={true}>{t(\"cheap\")}</MenuItem>\n                                            <MenuItem value={false}>{t(\"expensive\")}</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </div>}\n\n                            <div>\n                                <div className=\"dropdown-filter\">\n                                    <div onClick={() => {\n                                        filterHospital(region, !working24);\n                                        setWorking24(!working24)\n                                    }}\n                                         className={`button-filter ${working24 ? \"active-filter-btn\" : \"\"}`}>\n                                        {t(\"open24\")}\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        {!showMap && <div className=\"pharmacies\">\n                            <div className=\"pharmacies-box\">\n                                {\n                                    Pharmacies.map((item, index) => {\n                                        return <div key={index} className=\"pharma\">\n                                            <div className=\"left-side\">\n                                                <img src={item.image} alt=\"\"/>\n                                                <div className=\"like\">\n                                                    <img onClick={() => handleSaveClick(item.id)}\n                                                         src={savedPosts.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                                                         alt=\"\"/>\n                                                </div>\n\n                                                {item.hasOwnProperty('medicine_cost') && item.hasOwnProperty('medicine_name') &&\n                                                <div className=\"pharma-list\">\n                                                    <div className=\"name\">{item.medicine_name}</div>\n                                                    <div className=\"price\">{item.medicine_cost} {t(\"sum\")}</div>\n                                                </div>}\n\n                                            </div>\n                                            <div className=\"right-side\">\n                                                <div className=\"header-clinic\">\n                                                    <div className=\"name-clinic\">\n                                                        {item.translations[i18next.language].name}\n                                                    </div>\n                                                    <div className=\"section-commit\">\n                                                        <div className=\"raiting\">\n                                                            <img src=\"./images/star2.png\" alt=\"\"/>\n                                                            {item.avg_rating}\n                                                        </div>\n                                                        <span></span>\n                                                        <div className=\"commit-count\">\n                                                            ({item.comment_count})\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"section-location\">\n                                                    <div className=\"location\">\n                                                        <img src=\"./images/icon.png\" alt=\"\"/>\n                                                        {item.translations[i18next.language].address}\n                                                    </div>\n                                                </div>\n                                                <div className=\"section-location\">\n                                                    <div className=\"location\">\n                                                        <img src=\"./images/time.png\" alt=\"\"/>\n                                                        {item.open_24 ? <div\n                                                            className=\"open\">{t(\"open\")}</div> : isPlaceOpen(item.start_time, item.end_time) ?\n                                                            <div className=\"open\">{t(\"open\")}</div> :\n                                                            <div className=\"close\">{t(\"close\")}</div>}\n                                                    </div>\n                                                    <span></span>\n                                                    <div className=\"time-open\">\n                                                        {item.open_24 ? t(\"open24\") : <>\n                                                            {item.start_time} {t(\"from\")}\n                                                            &nbsp;\n                                                            {item.end_time} {t(\"to\")}\n                                                        </>}\n                                                    </div>\n                                                </div>\n                                                <div className=\"buttons\">\n                                                    <div onClick={() => NavigateButton(item.location)}\n                                                         className=\"navigator\">\n                                                        {t(\"navigator\")}\n                                                        <img src=\"./images/compass.png\" alt=\"\"/>\n                                                    </div>\n\n                                                    <div onClick={() => {\n                                                        localStorage.setItem(\"pharmacyId\", item.id);\n                                                        dispatch(getAboutMarker(item.location));\n                                                        navigate(\"/about-pharmacies\")\n                                                    }}\n                                                         className=\"more-btn\">\n                                                        {t(\"more\")}\n                                                    </div>\n\n\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    })\n                                }\n                            </div>\n                            <Footer/>\n                        </div>}\n                    </div>\n                    <div className={`right-side ${showMap ? \"show-map\" : \"\"}`}>\n                        <Map/>\n                    </div>\n                </div>\n            </div>\n            <div onClick={() => dispatch(show(!showMap))} className=\"map-mobile\">\n                {showMap ? <img className=\"prev-to\" src=\"./images/next-btn.png\" alt=\"\"/> :\n                    <img src=\"./images/map-mobile.png\" alt=\"\"/>}\n                {showMap ? t(\"prev\") : t(\"map\")}\n            </div>\n            <div className=\"mobile-navbar-container\">\n                <MobileNavbar/>\n            </div>\n        </div>\n    </>\n};\n\nexport default Pharmacies","import \"./style-saved.scss\"\nimport Navbar from \"../navbar/Navbar\";\nimport {useEffect, useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Footer from \"../footer/Footer\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\nimport axios from \"axios\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport i18next from \"i18next\";\nimport Doctors from \"../doctors/Doctors\";\nimport Pharmacies from \"../Pharmacies/Pharmacies\";\nimport {useTranslation} from \"react-i18next\";\n\n\nconst Saved = () => {\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [tabActive, setTabActive] = useState(1);\n    const navigate = useNavigate();\n    const [like, setLike] = useState(false);\n    const [clinics, setClinics] = useState([]);\n    const [doctors, setDoctors] = useState([]);\n    const [pharmacies, setPharmacies] = useState([]);\n\n    const [savedPostsClinic, setSavedPostsClinic] = useState([]);\n    const getSavedPostsClinic = () => {\n        const savedPosts = localStorage.getItem('hospital_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n    const handleSaveClickClinic = (postId) => {\n        let updatedSavedPosts = [...savedPostsClinic];\n\n        if (savedPostsClinic.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('hospital_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPostsClinic(updatedSavedPosts);\n        axios.post(`${baseUrl}saved/hospital/`, {hospitals: getSavedPostsClinic()}).then((response) => {\n            setClinics(response.data);\n        });\n    };\n\n    const [savedPostsDoctor, setSavedPostsDoctor] = useState([]);\n    const getSavedPostsDoctor = () => {\n        const savedPosts = localStorage.getItem('doctor_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n    const handleSaveClickDoctor = (postId) => {\n        let updatedSavedPosts = [...savedPostsDoctor];\n\n        if (savedPostsDoctor.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('doctor_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPostsDoctor(updatedSavedPosts);\n        axios.post(`${baseUrl}saved/doctor/`, {doctors: getSavedPostsDoctor()}).then((response) => {\n            setDoctors(response.data);\n        });\n    };\n\n    const [savedPostsPharmacy, setSavedPostsPharmacy] = useState([]);\n    const getSavedPostsPharmacy = () => {\n        const savedPosts = localStorage.getItem('pharmacy_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n    const handleSaveClickPharmacy = (postId) => {\n        let updatedSavedPosts = [...savedPostsDoctor];\n\n        if (savedPostsPharmacy.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('pharmacy_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPostsPharmacy(updatedSavedPosts);\n        axios.post(`${baseUrl}saved/pharmacy/`, {pharmacy: getSavedPostsPharmacy()}).then((response) => {\n            setPharmacies(response.data);\n        });\n    };\n\n    const dispatch = useDispatch();\n    const Tabs = [\n        {id: 1, name: t(\"nav1\")},\n        {id: 2, name: t(\"nav2\")},\n        {id: 3, name: t(\"nav3\")}\n    ];\n\n    useEffect(() => {\n        axios.post(`${baseUrl}saved/hospital/`, {hospitals: getSavedPostsClinic()}).then((response) => {\n            setClinics(response.data);\n        });\n\n        axios.post(`${baseUrl}saved/doctor/`, {doctors: getSavedPostsDoctor()}).then((response) => {\n            setDoctors(response.data);\n        });\n\n        axios.post(`${baseUrl}saved/pharmacy/`, {pharmacy: getSavedPostsPharmacy()}).then((response) => {\n            setPharmacies(response.data);\n        });\n\n        setSavedPostsDoctor(getSavedPostsDoctor());\n        setSavedPostsClinic(getSavedPostsClinic());\n        setSavedPostsPharmacy(getSavedPostsPharmacy());\n    }, []);\n\n    const isPlaceOpen = (startTime, endTime) => {\n        const startParts = startTime.split(':');\n        const endParts = endTime.split(':');\n\n        const startDate = new Date();\n        startDate.setHours(startParts[0], startParts[1], startParts[2]);\n\n        const endDate = new Date();\n        endDate.setHours(endParts[0], endParts[1], endParts[2]);\n\n        const now = new Date();\n\n        return now >= startDate && now <= endDate;\n    };\n    const ShowModal = (status, item) => {\n        dispatch(showModals({show: true, status, item}))\n    };\n\n    return <>\n        <div className=\"saved-container\">\n            <Navbar/>\n            <div className=\"content-box\">\n                <div className=\"title-saved\">\n                    {t(\"saved\")}\n                </div>\n                <div className=\"tab-box\">\n                    {\n                        Tabs.map((item, index) => {\n                            return <div key={index} onClick={() => setTabActive(item.id)}\n                                        className={`tab ${tabActive === item.id ? \"tab-active\" : \"\"}`}>{item.name}</div>\n                        })\n                    }\n                </div>\n\n                {tabActive === 1 && <div className=\"clinics\">\n                    {clinics.length > 0 ? clinics.map((item, index) => {\n                        return <div key={index} className=\"clinic\">\n                            <div className=\"left-side\">\n                                <img src={item.image} alt=\"\"/>\n                                <div className=\"like\">\n                                    <img onClick={() => handleSaveClickClinic(item.id)}\n                                         src={savedPostsClinic.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                                         alt=\"\"/>\n                                </div>\n                            </div>\n                            <div className=\"right-side\">\n                                <div className=\"header-clinic\">\n                                    <div className=\"name-clinic\">\n                                        {item.translations[i18next.language].name}\n                                    </div>\n                                    <div className=\"buttons\">\n                                        <div onClick={() => ShowModal(\"contact\", item)}\n                                             className=\"button-call\">\n                                            {t(\"call\")}\n                                        </div>\n                                        <div onClick={() => ShowModal(\"sms\", item.user)}\n                                             className=\"button-send\">\n                                            {t(\"acceptance2\")}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"section-commit\">\n                                    <div className=\"raiting\">\n                                        {item.avg_rating}\n                                    </div>\n                                    <div className=\"commit-count\">\n                                        {item.comment_count} {t(\"comment\")}\n                                    </div>\n                                </div>\n\n                                <div className=\"section-location\">\n                                    <div className=\"location\">\n                                        <img src=\"./images/icon.png\" alt=\"\"/>\n                                        {item.translations[i18next.language].address}  &nbsp;\n                                    </div>\n                                    <div className=\"time-open\">\n                                        <img src=\"./images/clock.png\" alt=\"\"/>\n\n                                        {item.open_24 ? t(\"open24\") : <>\n                                            {item.start_time} {t(\"from\")}\n                                            &nbsp;\n                                            {item.end_time} {t(\"to\")}\n                                        </>}\n                                    </div>\n                                </div>\n\n                                <div className=\"services\">\n                                    {item.hospital_services.map((item, index) => {\n                                        return <div key={index} className=\"service\">\n                                            {item.service.translations[i18next.language].name}\n                                        </div>\n                                    })}\n                                </div>\n\n                                <div onClick={() => {\n                                    navigate(\"/about-clinic\");\n                                    localStorage.setItem(\"clinicId\", item.id);\n                                    dispatch(getAboutMarker(item.location))\n                                }} className=\"more-btn\">\n                                    {t(\"more\")}\n                                </div>\n                            </div>\n                        </div>\n                    }) : <div className=\"text-box\">\n                        <div className=\"text-no-info\">\n                            {t(\"saved_text1\")}\n                        </div>\n                    </div>}\n                </div>}\n\n                {tabActive === 2 && <div className=\"doctors\">\n                    {doctors.length > 0 ? doctors.map((item, index) => {\n                        return <div key={index} className=\"doctor\">\n                            <div className=\"left-side\">\n                                <img src={item.image} alt=\"\"/>\n                                <div className=\"like\">\n                                    <img onClick={() => handleSaveClickDoctor(item.id)}\n                                         src={savedPostsDoctor.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                                         alt=\"\"/>\n                                </div>\n                            </div>\n                            <div className=\"right-side\">\n                                <div className=\"header-clinic\">\n                                    <div className=\"name-clinic\">\n                                        {item.translations[i18next.language].first_name} &nbsp;\n                                        {item.translations[i18next.language].last_name} &nbsp;\n                                        {item.translations[i18next.language].middle_name}\n                                    </div>\n\n                                    <div className=\"section-commit\">\n                                        <div className=\"raiting\">\n                                            {item.avg_rating}\n                                        </div>\n                                        <span></span>\n                                        <div className=\"commit-count\">\n                                            {item.comment_count} {t(\"comment\")}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"section-location\">\n                                    <div className=\"location\">\n                                        <img src=\"./images/job.png\" alt=\"\"/>\n                                        {item.specialty.translations[i18next.language].name}\n                                    </div>\n                                    <span></span>\n                                    <div className=\"time-open\">\n                                        {item.experience} {t(\"experience\")}\n                                    </div>\n                                </div>\n\n                                <div className=\"section-location\">\n                                    <div className=\"location\">\n                                        <img src=\"./images/icon.png\" alt=\"\"/>\n                                        {item.hospital ? item.hospital.translations[i18next.language].address :\n                                            item.translations[i18next.language].address}\n                                    </div>\n\n                                    {item.hospital ?\n                                        <>\n                                            <span></span>\n                                            <div className=\"time-open\">\n                                                {item.hospital.translations[i18next.language].name}\n                                            </div>\n                                        </> : \"\"}\n                                </div>\n\n                                <div className=\"section-location\">\n                                    <div className=\"location\">\n                                        <img src=\"./images/time.png\" alt=\"\"/>\n                                        {item.working_days.map((item, index) => {\n                                            return <p key={index}>\n                                                &nbsp;\n                                                {item.translations[i18next.language].day}\n                                            </p>\n                                        })}\n                                    </div>\n                                    <span></span>\n                                    <div className=\"time-open\">\n                                        {item.start_time} {t(\"from\")}\n                                        &nbsp;\n                                        {item.end_time} {t(\"to\")}\n                                    </div>\n                                </div>\n\n                                <div className=\"services\">\n                                    {item.sub_speciality.map((item, index) => {\n                                        return <div key={index} className=\"service\">\n                                            {item.translations[i18next.language].name}\n                                        </div>\n                                    })}\n                                </div>\n\n                                <div className=\"prices\">\n                                    <div className=\"item-price\">\n                                        <div className=\"title\">{t(\"first-consultation\")}</div>\n                                        <div className=\"number\">\n                                            {item.consultation_fee ? <>{item.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"item-price\">\n                                        <div className=\"title\">{t(\"second-consultation\")}</div>\n                                        <div className=\"number\">\n                                            {item.second_consultation_fee ?\n                                                <>{item.second_consultation_fee} {t(\"sum\")} </> :\n                                                t(\"agreement\")}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"buttons\">\n                                    <div className=\"left-btn\">\n                                        <div onClick={() => ShowModal(\"sms\", item.user)}\n                                             className=\"button-send\">\n                                            {t(\"acceptance\")}\n                                        </div>\n                                        <div onClick={() => ShowModal(\"contact\", item)}\n                                             className=\"button-call\">\n                                            {t(\"call\")}\n                                        </div>\n                                    </div>\n                                    <div onClick={() => {\n                                        localStorage.setItem(\"doctorId\", item.id)\n                                        navigate(\"/about-doctor\")\n                                        dispatch(getAboutMarker(item.location ? item.location : item.hospital.location))\n                                    }} className=\"more-btn\">\n                                        {t(\"more\")}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    }) : <div className=\"text-box\">\n                        <div className=\"text-no-info\">\n                            {t(\"saved_text2\")}\n                        </div>\n                    </div>}\n                </div>}\n\n                {tabActive === 3 && <div className=\"pharmacies-box\">\n                    {pharmacies.length > 0 ?\n                        pharmacies.map((item, index) => {\n                            return <div key={index} className=\"pharma\">\n                                <div className=\"left-side\">\n                                    <img src={item.image} alt=\"\"/>\n                                    <div className=\"like\">\n                                        <img onClick={() => handleSaveClickPharmacy(item.id)}\n                                             src={savedPostsPharmacy.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                                             alt=\"\"/>\n                                    </div>\n                                </div>\n                                <div className=\"right-side\">\n                                    <div className=\"header-clinic\">\n                                        <div className=\"name-clinic\">\n                                            {item.translations[i18next.language].name}\n                                        </div>\n\n                                        <div className=\"section-commit\">\n                                            <div className=\"raiting\">\n                                                <img src=\"./images/star2.png\" alt=\"\"/>\n                                                {item.avg_rating}\n                                            </div>\n                                            <span></span>\n                                            <div className=\"commit-count\">\n                                                ({item.comment_count})\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"section-location\">\n                                        <div className=\"location\">\n                                            <img src=\"./images/icon.png\" alt=\"\"/>\n                                            {item.translations[i18next.language].address}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"section-location\">\n                                        <div className=\"location\">\n                                            <img src=\"./images/time.png\" alt=\"\"/>\n                                            {item.open_24 ? <div\n                                                className=\"open\">{t(\"open\")}</div> : isPlaceOpen(item.start_time, item.end_time) ?\n                                                <div className=\"open\">{t(\"open\")}</div> :\n                                                <div className=\"close\">{t(\"close\")}</div>}\n                                        </div>\n\n                                        <span></span>\n                                        <div className=\"time-open\">\n                                            {item.open_24 ? t(\"open24\") : <>\n                                                {item.start_time} {t(\"from\")}\n                                                &nbsp;\n                                                {item.end_time} {t(\"to\")}\n                                            </>}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"buttons\">\n                                        <div onClick={() => {\n                                            localStorage.setItem(\"pharmacyId\", item.id);\n                                            dispatch(getAboutMarker(item.location));\n                                            navigate(\"/about-pharmacies\")\n                                        }}\n                                             className=\"more-btn\">\n                                            {t(\"more\")}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        })\n                        : <div className=\"text-box\">\n                            <div className=\"text-no-info\">\n                                {t(\"saved_text3\")}\n                            </div>\n                        </div>\n                    }\n                </div>}\n            </div>\n\n            <div className=\"mobile-navbar-container\">\n                <MobileNavbar/>\n            </div>\n            <Footer/>\n        </div>\n\n    </>\n};\n\nexport default Saved","import {useEffect, useState, useMemo} from \"react\";\nimport {GoogleMap, useLoadScript} from \"@react-google-maps/api\";\nimport i18next from \"i18next\";\nimport {GOOGLE_MAPS_API_KEY} from \"./googleMapsApi\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport LoaderMap from \"./loader-map/LoaderMap\";\nimport AboutMarker from \"./AboutMarker\";\n\nconst libraries = [\"places\"];\n\nconst MapAbout = () => {\n    const aboutMarker = useSelector((store) => store.MarkerAbout.data);\n    const [onloadMap, setOnloadMap] = useState(false)\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n    let locationAbout = {lat: Number(aboutMarker.split(\",\")[0]), lng: Number(aboutMarker.split(\",\")[1])};\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false\n        }),\n        []\n    );\n\n    useEffect(() => {\n        if (isLoaded) {\n            setOnloadMap(true);\n        }\n    }, [isLoaded]);\n\n    if (!isLoaded) return <LoaderMap/>;\n    return <>\n        <GoogleMap\n            zoom={9}\n            center={locationAbout}\n            options={options}\n            mapContainerClassName=\"map\"\n            onLoad={() => setOnloadMap(true)}\n        >\n            {onloadMap && <AboutMarker/>}\n        </GoogleMap>\n    </>\n};\n\nexport default MapAbout","import \"./clinic-style.scss\"\nimport Navbar from \"../navbar/Navbar\";\nimport {useEffect, useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport Footer from \"../footer/Footer\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\nimport axios from \"axios\";\nimport {useTranslation} from \"react-i18next\";\nimport i18next from \"i18next\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport MapAbout from \"../map/MapAbout\";\n\n\nconst AboutClinic = () => {\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [tabActive, setTabActive] = useState(1);\n    const [clinic, setClinic] = useState(\"\");\n    const [comments, setComments] = useState([]);\n    const [doctors, setDoctors] = useState([]);\n    const [services, setServices] = useState([]);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const tabs = [\n        {id: 1, name: t(\"all\")},\n        {id: 2, name: t(\"nav2\")},\n        {id: 3, name: t(\"comment\")},\n        {id: 4, name: t(\"service-price\")}\n    ];\n    const [savedPosts, setSavedPosts] = useState([]);\n\n    useEffect(() => {\n        axios.get(`${baseUrl}hospital/${localStorage.getItem(\"clinicId\")}/`).then((response) => {\n            setClinic(response.data);\n\n            dispatch(getAboutMarker(response.data.location));\n\n            axios.get(`${baseUrl}comment/${response.data.user}/`).then((response) => {\n                setComments(response.data)\n            });\n\n            axios.get(`${baseUrl}hospital/${response.data.id}/doctors/`).then((response) => {\n                setDoctors(response.data)\n            });\n\n            axios.get(`${baseUrl}hospital/${response.data.id}/services/`).then((response) => {\n                setServices(response.data)\n            })\n        });\n\n        setSavedPosts(getSavedPosts())\n    }, []);\n\n    const ShowModal = (status, item) => {\n        dispatch(showModals({show: true, status, item}))\n    };\n\n    const getSavedPosts = () => {\n        const savedPosts = localStorage.getItem('hospital_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n\n    const handleSaveClick = (postId) => {\n        let updatedSavedPosts = [...savedPosts];\n\n        if (savedPosts.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('hospital_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPosts(updatedSavedPosts);\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    return <div className=\"about-clinic-box\">\n        <Navbar/>\n\n        {clinic &&\n            <div className=\"about-hospital\">\n                <div className=\"header\">\n                    <div className=\"title\">\n                        {clinic && clinic.translations[i18next.language].name}\n                    </div>\n\n                    <div className=\"buttons\">\n                        <div className=\"like\">\n                            <img onClick={() => handleSaveClick(clinic.id)}\n                                 src={savedPosts.includes(clinic.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                                 alt=\"\"/>\n                        </div>\n\n                        {clinic.emergency_number &&\n                            <a href={`tel:${clinic.emergency_number}`} className=\"emergency\">\n                                <img src=\"./images/phone-call.png\" alt=\"\"/>\n                                {clinic.emergency_number}\n                            </a>}\n\n                        <div onClick={() => ShowModal(\"contact\", clinic)}\n                             className=\"button-call\">\n                            {t(\"call\")}\n                        </div>\n                        <div onClick={() => ShowModal(\"sms\", clinic.user)}\n                             className=\"button-send\">\n                            {t(\"acceptance2\")}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"social-medias-icons\">\n                    {clinic.hospital_socials.map((item, index) => {\n                        return <a key={index} href={item.url} target=\"_blank\">\n                            <img src={`./images/social-media/${item.key}.png`} alt=\"\"/>\n                        </a>\n                    })}\n                </div>\n                <div className=\"body\">\n                    <div className=\"section-commit\">\n                        <div className=\"raiting\">\n                            {clinic.avg_rating}\n                        </div>\n                        <div className=\"commit-count\">\n                            {clinic.comment_count} {t(\"comment\")}\n                        </div>\n                    </div>\n                    <div className=\"section-location\">\n                        <div className=\"location\">\n                            <img src=\"./images/icon.png\" alt=\"\"/>\n                            {clinic && clinic.translations[i18next.language].address}\n                        </div>\n                        <span></span>\n                        <div className=\"time-open\">\n                            <img src=\"./images/clock.png\" alt=\"\"/>\n                            {clinic.open_24 ? t(\"open24\") : <>\n                                {clinic.start_time} {t(\"from\")}\n                                &nbsp;\n                                {clinic.end_time} {t(\"to\")}\n                            </>}\n                        </div>\n                    </div>\n                    <div onClick={() => NavigateButton(clinic.location)}\n                         className=\"navigator\">\n                        {t(\"navigator\")}\n                        <img src=\"./images/compass.png\" alt=\"\"/>\n                    </div>\n                    <div className=\"images-location\">\n                        <div className=\"images-box\">\n                            <div className=\"image-hospital\">\n                                <img src={clinic.image} alt=\"\"/>\n                            </div>\n                        </div>\n\n\n                        <div className=\"location-box\">\n                            <MapAbout/>\n                        </div>\n                    </div>\n                    <div className=\"tab-hospital\">\n                        {tabs.map((item, index) => {\n                            return <div key={index} onClick={() => setTabActive(item.id)}\n                                        className={tabActive === item.id ? \"tab-active\" : \"tab\"}>\n                                {item.name}\n                            </div>\n                        })}\n                    </div>\n\n                    {tabActive === 1 && <div className=\"all-info\">\n                        <div className=\"service-hospital\">\n                            <div className=\"title\">\n                                {t(\"nav4\")}\n                            </div>\n                            <div className=\"contents\">\n                                {clinic && clinic.hospital_services.map((item, index) => {\n                                    return <div key={index} className=\"service\">\n                                        {item.service.translations[i18next.language].name}\n                                    </div>\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"comments-box\">\n                            <div className=\"header-commet\">\n                                <div className=\"counts\">\n                                    <div className=\"raiting\">\n                                        {clinic.avg_rating}\n                                    </div>\n                                    <div className=\"commit-count\">\n                                        {clinic.comment_count} {t(\"comment\")}\n                                    </div>\n                                </div>\n\n                                <div onClick={() => ShowModal(\"commit\", clinic.user)} className=\"btn-commit\">\n                                    <img src=\"./images/comit.png\" alt=\"\"/>\n                                    {t(\"comment-btn\")}\n                                </div>\n                            </div>\n                            {comments.map((item, index) => {\n                                if (index < 6) {\n                                    return <div key={index} className=\"commits\">\n                                        <div className=\"header-commit\">\n                                            <div className=\"left-circle\">\n                                                {item.name.slice(0, 1)}\n                                            </div>\n                                            <div className=\"right-names\">\n                                                <div className=\"name\">\n                                                    {item.name}\n                                                    <span>{item.time}</span>\n                                                </div>\n                                                <div className=\"stars\">\n                                                    {Array.from({length: item.mark}).map((_, index) => (\n                                                        <img key={index} src=\"./images/raiting1.png\" alt=\"Rating 1\"/>\n                                                    ))}\n\n                                                    {Array.from({length: 5 - item.mark}).map((_, index) => (\n                                                        <img key={index} src=\"./images/raiting2.png\" alt=\"Rating 2\"/>\n                                                    ))}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"text-commit\">\n                                            {item.text}\n                                        </div>\n                                    </div>\n                                }\n                            })}\n                            <div onClick={() => setTabActive(3)} className=\"more-btn\">\n                                {t(\"more\")}\n                            </div>\n                        </div>\n                    </div>}\n\n                    {tabActive === 2 && <div className=\"doctors\">\n                        <div className=\"category-wrapper\">\n                            {\n                                doctors.services.map((item, index) => {\n                                    return <div key={index}>\n                                        <div\n                                            className=\"category-name active\">\n                                            {item.translations[i18next.language].name} <span></span> {item.doctor_count}\n                                        </div>\n                                    </div>\n                                })\n                            }\n                        </div>\n\n                        <div className=\"doctors-warapper\">\n                            {\n                                doctors.doctors.map((item, index) => {\n                                    return <div key={index} className=\"doctor\">\n                                        <div className=\"left-side\">\n                                            <img src={\"https://api.medos.uz/\" + item.image} alt=\"\"/>\n                                        </div>\n\n                                        <div className=\"right-side\">\n                                            <div className=\"header-clinic\">\n                                                <div className=\"name-clinic\">\n                                                    {item.translations[i18next.language].first_name} &nbsp;\n                                                    {item.translations[i18next.language].last_name} &nbsp;\n                                                    {item.translations[i18next.language].middle_name}\n                                                </div>\n\n                                                <div className=\"section-commit\">\n                                                    <div className=\"raiting\">\n                                                        {item.avg_rating}\n                                                    </div>\n                                                    <span></span>\n                                                    <div className=\"commit-count\">\n                                                        {item.comment_count} {t(\"comment\")}\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"section-location\">\n                                                <div className=\"location\">\n                                                    <img src=\"./images/job.png\" alt=\"\"/>\n                                                    {item.specialty.translations[i18next.language].name}\n                                                </div>\n                                                <span></span>\n                                                <div className=\"time-open\">\n                                                    {item.experience} {t(\"experience\")}\n                                                </div>\n                                            </div>\n\n                                            <div className=\"section-location\">\n                                                <div className=\"location\">\n                                                    <img src=\"./images/icon.png\" alt=\"\"/>\n                                                    {item.hospital ? clinic.translations[i18next.language].address :\n                                                        item.translations[i18next.language].address}\n                                                </div>\n                                                {item.hospital ?\n                                                    <>\n                                                        <span></span>\n                                                        <div className=\"time-open\">\n                                                            {clinic.translations[i18next.language].name}\n                                                        </div>\n                                                    </> : \"\"}\n                                            </div>\n\n                                            <div className=\"section-location\">\n                                                <div className=\"location-working\">\n                                                    <img src=\"./images/time.png\" alt=\"\"/>\n                                                    {item.working_days.map((itemWorkingdays, index) => {\n                                                        return <p key={index}>\n                                                            &nbsp;\n                                                            {itemWorkingdays.translations[i18next.language].day}\n                                                            {index !== item.working_days.length - 1 && \",\"}\n                                                        </p>\n                                                    })}\n                                                </div>\n                                                <span></span>\n                                                <div className=\"time-open\">\n                                                    {item.start_time} {t(\"from\")}\n                                                    &nbsp;\n                                                    {item.end_time} {t(\"to\")}\n                                                </div>\n                                            </div>\n\n                                            <div className=\"services\">\n                                                {item.sub_speciality.map((item, index) => {\n                                                    return <div key={index} className=\"service\">\n                                                        {item.translations[i18next.language].name}\n                                                    </div>\n                                                })}\n                                            </div>\n\n                                            <div className=\"prices\">\n                                                <div className=\"item-price\">\n                                                    <div className=\"title\">{t(\"first-consultation\")}</div>\n                                                    <div className=\"number\">\n                                                        {item.consultation_fee ? <>{item.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\n\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"item-price\">\n                                                    <div className=\"title\">{t(\"second-consultation\")}</div>\n                                                    <div className=\"number\">\n                                                        {item.second_consultation_fee ?\n                                                            <>{item.second_consultation_fee} {t(\"sum\")} </> :\n                                                            t(\"agreement\")}\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"buttons\">\n                                                <div className=\"left-btn\">\n                                                    <div onClick={() => ShowModal(\"sms\", item.user)}\n                                                         className=\"button-send\">\n                                                        {t(\"acceptance\")}\n                                                    </div>\n                                                    <div onClick={() => ShowModal(\"contact\", item)}\n                                                         className=\"button-call\">\n                                                        {t(\"call\")}\n                                                    </div>\n                                                </div>\n                                                <div onClick={() => {\n                                                    localStorage.setItem(\"doctorId\", item.id)\n                                                    navigate(\"/about-doctor\")\n                                                    dispatch(getAboutMarker(item.location ? item.location : item.hospital.location))\n                                                }} className=\"more-btn\">\n                                                    {t(\"more\")}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                })\n                            }\n                        </div>\n                    </div>}\n\n                    {tabActive === 3 && <div className=\"all-commits\">\n                        <div className=\"header-commet\">\n                            <div className=\"counts\">\n                                <div className=\"raiting\">\n                                    {clinic.avg_rating}\n                                </div>\n                                <div className=\"commit-count\">\n                                    {clinic.comment_count} {t(\"comment\")}\n                                </div>\n                            </div>\n\n                            <div onClick={() => ShowModal(\"commit\", clinic.user)} className=\"btn-commit\">\n                                <img src=\"./images/comit.png\" alt=\"\"/>\n                                {t(\"comment-btn\")}\n                            </div>\n                        </div>\n\n                        {comments.map((item, index) => {\n                            return <div key={index} className=\"commits\">\n                                <div className=\"header-commit\">\n                                    <div className=\"left-circle\">\n                                        {item.name.slice(0, 1)}\n                                    </div>\n                                    <div className=\"right-names\">\n                                        <div className=\"name\">\n                                            {item.name}\n                                            <span>{item.time}</span>\n                                        </div>\n                                        <div className=\"stars\">\n                                            {Array.from({length: item.mark}).map((_, index) => (\n                                                <img key={index} src=\"./images/raiting1.png\" alt=\"Rating 1\"/>\n                                            ))}\n\n                                            {Array.from({length: 5 - item.mark}).map((_, index) => (\n                                                <img key={index} src=\"./images/raiting2.png\" alt=\"Rating 2\"/>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"text-commit\">\n                                    {item.text}\n                                </div>\n                            </div>\n                        })}\n\n                    </div>}\n\n                    {tabActive === 4 && <div className=\"service-box\">\n                        <div className=\"category-wrapper\">\n                            {\n                                services.services_count && services.services_count.map((item, index) => {\n                                    return <div key={index}>\n                                        <div\n                                            className=\"category-name active\">\n                                            {item.translations[i18next.language].name}\n                                            <span></span> {item.service_count}\n                                        </div>\n                                    </div>\n                                })\n                            }\n                        </div>\n\n                        {services.services && services.services.map((item, index) => {\n                            return <div key={index} className=\"one-service\">\n                                <div className=\"title\">\n                                    {item.service.translations[i18next.language].name}\n                                </div>\n                                {item.sub_services_list.map((item, index) => {\n                                    return <div key={index} className=\"service\">\n                                        <div\n                                            className=\"name\">{item.sub_service.translations[i18next.language].name}</div>\n                                        <div className=\"value\">\n                                            {item.price ? <>{item.price} {t(\"sum\")} </> : t(\"agreement\")}\n                                        </div>\n                                    </div>\n                                })}\n                            </div>\n                        })}\n\n                    </div>}\n                </div>\n            </div>}\n\n        <div className=\"mobile-navbar-container\">\n            <MobileNavbar/>\n        </div>\n        <Footer/>\n    </div>\n};\n\nexport default AboutClinic","import \"./login.scss\"\nimport {useOnKeyPress} from \"./useOnKeyPress\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\nimport {TextField} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\nimport {useFormik} from \"formik\";\n\nconst Login = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n\n    const HandleLogin = (values) => {\n        let user = {\n            username: values.username,\n            password: values.password\n        };\n        axios\n            .post(`${baseUrl}auth/register/login/`, user)\n            .then((response) => {\n                localStorage.setItem(\"token\", response.data.token)\n                localStorage.setItem(\"userType\",response.data.user_type);\n                localStorage.setItem(\"profile\", response.data.profile);\n                if (response.data.profile) {\n\n                    if (response.data.user_type === \"Doctor\") {\n                        window.location.pathname = \"/profile-doctor\"\n\n                    } else if (response.data.user_type === \"Hospital\") {\n                        window.location.pathname = \"/profile-hospital\"\n\n                    } else if (response.data.user_type === \"Pharmacy\") {\n                        window.location.pathname = \"/profile-pharmacy\"\n                    }\n\n                } else {\n                    if (response.data.user_type === \"Doctor\") {\n                        window.location.pathname = \"/register-doctor\"\n\n                    } else\n                        if (response.data.user_type === \"Hospital\") {\n                        window.location.pathname = \"/register-hospital\"\n\n                    } else if (response.data.user_type === \"Pharmacy\") {\n                        window.location.pathname = \"/register-pharmacies\"\n\n                    }\n                }\n            })\n            .catch((error) => {\n                if (error.response.status === 404) {\n                    let idAlert = Date.now();\n                    let alert = {\n                        id: idAlert,\n                        text: t(\"error1\"),\n                        img: \"./images/red.svg\",\n                        color: \"#ffefe7\",\n                    };\n                    dispatch(addAlert(alert));\n                    setTimeout(() => {\n                        dispatch(delAlert(idAlert));\n                    }, 5000);\n                }\n\n            });\n    };\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.username) {\n            errors.login = \"Required\";\n        }\n\n        if (!values.password) {\n            errors.password = \"Required\";\n        }\n\n        return errors;\n    };\n\n    const formOne = useFormik({\n        initialValues: {\n            username: \"\",\n            password: \"\"\n        },\n        validate,\n        onSubmit: (values) => {\n            HandleLogin(values)\n        },\n    });\n\n    useOnKeyPress(formOne.handleSubmit, \"Enter\");\n\n    return <div className=\"login-container\">\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n\n        <div className=\"login-card\">\n            <div className=\"xbtn\">\n                <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n            </div>\n\n            <div className=\"title-login\">\n                {t(\"login_text\")}\n            </div>\n\n            <div className=\"des-login\">\n                {t(\"login_des\")}\n            </div>\n\n            <div className=\"inputs\">\n                <TextField\n                    error={formOne.errors.username === \"Required\"}\n                    value={formOne.username}\n                    onChange={formOne.handleChange}\n                    name=\"username\"\n                    sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                    label={t(\"user_name\")} variant=\"outlined\" className=\"textField\"/>\n\n                <TextField\n                    error={formOne.errors.password === \"Required\"}\n                    value={formOne.password}\n                    onChange={formOne.handleChange}\n                    name=\"password\"\n                    sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                    label={t(\"password\")} variant=\"outlined\" className=\"textField\"/>\n            </div>\n\n            <div onClick={() => formOne.handleSubmit()}\n                 className=\"login-btn\">\n                {t(\"login\")}\n            </div>\n        </div>\n\n    </div>\n};\n\nexport default Login","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import \"./clinic-doctor.scss\"\nimport Navbar from \"../navbar/Navbar\";\nimport {useEffect, useState} from \"react\";\nimport Footer from \"../footer/Footer\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport axios from \"axios\";\nimport {useTranslation} from \"react-i18next\";\nimport i18next from \"i18next\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport MapAbout from \"../map/MapAbout\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\n\n\nconst AboutDoctor = () => {\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [like, setLike] = useState(false);\n    const [doctor, setDoctor] = useState(\"\");\n    const [similarDoctors, setSimilarDoctors] = useState();\n    const [comments, setComments] = useState([]);\n    const [savedPosts, setSavedPosts] = useState([]);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        axios.get(`${baseUrl}doctor/${localStorage.getItem(\"doctorId\")}/`).then((response) => {\n            setDoctor(response.data);\n            axios.get(`${baseUrl}comment/${response.data.user}/`).then((response) => {\n                setComments(response.data)\n            });\n            dispatch(getAboutMarker(response.data.location ? response.data.location : response.data.hospital.location));\n        });\n\n        axios.get(`${baseUrl}doctor/${localStorage.getItem(\"doctorId\")}/similar/`).then((response) => {\n            setSimilarDoctors(response.data)\n        });\n        setSavedPosts(getSavedPosts())\n    }, []);\n\n    const ShowModal = (status, item) => {\n        dispatch(showModals({show: true, status, item}))\n    };\n\n    const getSavedPosts = () => {\n        const savedPosts = localStorage.getItem('doctor_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n\n    const handleSaveClick = (postId) => {\n        let updatedSavedPosts = [...savedPosts];\n\n        if (savedPosts.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('doctor_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPosts(updatedSavedPosts);\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    return <div className=\"about-doctor-box\">\n        <Navbar/>\n\n        {doctor &&\n        <div className=\"about-hospital\">\n            <div className=\"header\">\n                <div className=\"photo-doctor\">\n                    <img src={doctor.image} alt=\"\"/>\n                </div>\n\n                <div className=\"infotmation-doctor\">\n                    <div className=\"title\">\n                        {doctor.translations[i18next.language].first_name} &nbsp;\n                        {doctor.translations[i18next.language].last_name} &nbsp;\n                        {doctor.translations[i18next.language].middle_name}\n                    </div>\n\n                    <div className=\"social-medias-icons\">\n                        {doctor.doctor_socials.map((item, index) => {\n                            return <a key={index} href={item.url} target=\"_blank\">\n                                <img src={`./images/social-media/${item.key}.png`} alt=\"\"/>\n                            </a>\n                        })}\n                    </div>\n\n                    <div className=\"info\">\n                        <div className=\"items\">\n                            {doctor.specialty.translations[i18next.language].name}\n                        </div>\n                        <div className=\"items\">\n                            {doctor.experience} {t(\"experience\")}\n                        </div>\n                    </div>\n\n                    <div className=\"section-commit\">\n                        <div className=\"raiting\">\n                            {doctor.avg_rating}\n                        </div>\n                        <span></span>\n                        <div className=\"commit-count\">\n                            {doctor.comment_count} {t(\"comment\")}\n                        </div>\n                    </div>\n\n                    <div className=\"location\">\n                        {doctor.hospital ? doctor.hospital.translations[i18next.language].address :\n                            doctor.translations[i18next.language].address}\n                    </div>\n\n                    <div className=\"skills\">\n                        {doctor.sub_speciality.map((item, index) => {\n                            return <div key={index} className=\"skill\">\n                                {item.translations[i18next.language].name}\n                            </div>\n                        })}\n                    </div>\n\n                    <div onClick={() => handleSaveClick(doctor.id)} className=\"like\">\n                        <img src={savedPosts.includes(doctor.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                             alt=\"\"/>\n                        <div className=\"name\">{t(\"save\")}</div>\n                    </div>\n\n                    <div onClick={() => NavigateButton(doctor.location)}\n                         className=\"navigator\">\n                        {t(\"navigator\")}\n                        <img src=\"./images/compass.png\" alt=\"\"/>\n                    </div>\n                </div>\n\n                <div className=\"buttons\">\n                    <div className=\"title\">\n                        {t(\"working-time\")}\n                    </div>\n\n                    <div className=\"date\">\n                        <img src=\"./images/calendar.png\" alt=\"\"/>\n                        {doctor.working_days.map((itemWorking, index) => {\n                            return <p key={index}>\n                                &nbsp;\n                                {itemWorking.translations[i18next.language].day}\n                                {index !== doctor.working_days.length - 1 && \",\"}\n                            </p>\n                        })}\n                    </div>\n\n                    <div className=\"date\">\n                        <img src=\"./images/clock2.png\" alt=\"\"/>\n                        {doctor.start_time} {t(\"from\")}\n                        &nbsp;\n                        {doctor.end_time} {t(\"to\")}\n                    </div>\n\n                    <div className=\"line\"></div>\n\n                    <div className=\"title\">\n                        {t(\"price-service\")}\n                    </div>\n\n                    <div className=\"prices\">\n                        <div className=\"item-price\">\n                            <div className=\"title\">{t(\"first-consultation\")}</div>\n                            <div className=\"number\">\n                                {doctor.consultation_fee ? <>{doctor.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\n                            </div>\n                        </div>\n\n                        <div className=\"item-price\">\n                            <div className=\"title\">{t(\"second-consultation\")}</div>\n                            <div className=\"number\">\n                                {doctor.second_consultation_fee ?\n                                    <>{doctor.second_consultation_fee} {t(\"sum\")} </> :\n                                    t(\"agreement\")}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div onClick={() => ShowModal(\"sms\", doctor.user)}\n                         className=\"button-send\">\n                        {t(\"acceptance\")}\n                    </div>\n                    <div onClick={() => ShowModal(\"contact\", doctor)}\n                         className=\"button-call\">\n                        {t(\"call\")}\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"body\">\n                <div className=\"all-info-hospital\">\n                    <div className=\"title\">\n                        {t(\"doctor\")}\n                    </div>\n                    <div className=\"des\">\n                        {doctor.translations[i18next.language].bio}\n                    </div>\n                </div>\n\n                <div className=\"images-location\">\n                    <div className=\"title\">{t(\"address-doctor\")}</div>\n                    <div className=\"location\">\n                        <img src=\"./images/loaction.png\" alt=\"\"/>\n                        {doctor.hospital ? doctor.hospital.translations[i18next.language].address :\n                            doctor.translations[i18next.language].address}\n                    </div>\n                    <div className=\"location-box\">\n                        <MapAbout/>\n                    </div>\n                </div>\n\n                <div className=\"comments-box\">\n                    <div className=\"header-commet\">\n                        <div className=\"counts\">\n                            <div className=\"raiting\">\n                                {doctor.avg_rating}\n                            </div>\n                            <div className=\"commit-count\">\n                                {doctor.comment_count} {t(\"comment\")}\n                            </div>\n                        </div>\n\n                        <div onClick={() => ShowModal(\"commit\", doctor.user)} className=\"btn-commit\">\n                            <img src=\"./images/comit.png\" alt=\"\"/>\n                            {t(\"comment-btn\")}\n                        </div>\n                    </div>\n\n                    {comments.map((item, index) => {\n                        return <div key={index} className=\"commits\">\n                            <div className=\"header-commit\">\n                                <div className=\"left-circle\">\n                                    {item.name.slice(0, 1)}\n                                </div>\n                                <div className=\"right-names\">\n                                    <div className=\"name\">\n                                        {item.name}\n                                        <span>{item.time}</span>\n                                    </div>\n                                    <div className=\"stars\">\n                                        {Array.from({length: item.mark}).map((_, index) => (\n                                            <img key={index} src=\"./images/raiting1.png\" alt=\"Rating 1\"/>\n                                        ))}\n\n                                        {Array.from({length: 5 - item.mark}).map((_, index) => (\n                                            <img key={index} src=\"./images/raiting2.png\" alt=\"Rating 2\"/>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"text-commit\">\n                                {item.text}\n                            </div>\n                        </div>\n                    })}\n                </div>\n\n                <div className=\"doctors-warapper\">\n                    <div className=\"title\">\n                        {t(\"more-doctors\")}\n                    </div>\n                    {\n                        similarDoctors && similarDoctors.map((item, index) => {\n                            return <div key={index} className=\"doctor\">\n                                <div className=\"left-side\">\n                                    <img src={\"https://api.medos.uz/\" + item.image} alt=\"\"/>\n                                    <div className=\"like\">\n                                        <img onClick={() => handleSaveClick(item.id)}\n                                             src={savedPosts.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                                             alt=\"\"/>\n                                    </div>\n                                </div>\n\n                                <div className=\"right-side\">\n                                    <div className=\"header-clinic\">\n                                        <div className=\"name-clinic\">\n                                            {item.translations[i18next.language].first_name} &nbsp;\n                                            {item.translations[i18next.language].last_name} &nbsp;\n                                            {item.translations[i18next.language].middle_name}\n                                        </div>\n\n                                        <div className=\"section-commit\">\n                                            <div className=\"raiting\">\n                                                {item.avg_rating}\n                                            </div>\n                                            <span></span>\n                                            <div className=\"commit-count\">\n                                                {item.comment_count} {t(\"comment\")}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"section-location\">\n                                        <div className=\"location\">\n                                            <img src=\"./images/job.png\" alt=\"\"/>\n                                            {item.specialty.translations[i18next.language].name}\n                                        </div>\n                                        <span></span>\n                                        <div className=\"time-open\">\n                                            {item.experience} {t(\"experience\")}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"section-location\">\n                                        <div className=\"location\">\n                                            <img src=\"./images/icon.png\" alt=\"\"/>\n                                            {item.hospital ? item.hospital.translations[i18next.language].address :\n                                                item.translations[i18next.language].address}\n                                        </div>\n                                        {item.hospital ?\n                                            <>\n                                                <span></span>\n                                                <div className=\"time-open\">\n                                                    {item.hospital.translations[i18next.language].name}\n                                                </div>\n                                            </> : \"\"}\n                                    </div>\n\n                                    <div className=\"section-location\">\n                                        <div className=\"location-working\">\n                                            <img src=\"./images/time.png\" alt=\"\"/>\n                                            {item.working_days.map((itemWorking, index) => {\n                                                return <p key={index}>\n                                                    &nbsp;\n                                                    {itemWorking.translations[i18next.language].day}\n                                                    {index !== item.working_days.length - 1 && \",\"}\n                                                </p>\n                                            })}\n                                        </div>\n                                        <span></span>\n                                        <div className=\"time-open\">\n                                            {item.start_time} {t(\"from\")}\n                                            &nbsp;\n                                            {item.end_time} {t(\"to\")}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"services\">\n                                        {item.sub_speciality.map((item, index) => {\n                                            return <div key={index} className=\"service\">\n                                                {item.translations[i18next.language].name}\n                                            </div>\n                                        })}\n                                    </div>\n\n                                    <div className=\"prices\">\n                                        <div className=\"item-price\">\n                                            <div className=\"title\">{t(\"first-consultation\")}</div>\n                                            <div className=\"number\">\n                                                {item.consultation_fee ? <>{item.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"item-price\">\n                                            <div className=\"title\">{t(\"second-consultation\")}</div>\n                                            <div className=\"number\">\n\n                                                {item.second_consultation_fee ?\n                                                    <>{item.second_consultation_fee} {t(\"sum\")} </> :\n                                                    t(\"agreement\")}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"buttons\">\n                                        <div className=\"left-btn\">\n                                            <div onClick={() => ShowModal(\"sms\", item.user)}\n                                                 className=\"button-send\">\n                                                {t(\"acceptance\")}\n                                            </div>\n                                            <div onClick={() => ShowModal(\"contact\", item)}\n                                                 className=\"button-call\">\n                                                {t(\"call\")}\n                                            </div>\n                                        </div>\n                                        <div onClick={() => {\n                                            localStorage.setItem(\"doctorId\", item.id)\n                                            window.location.reload()\n                                        }} className=\"more-btn\">\n                                            {t(\"more\")}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        })\n                    }\n                </div>\n            </div>\n        </div>}\n\n        <div className=\"mobile-navbar-container\">\n            <MobileNavbar/>\n        </div>\n        <Footer/>\n    </div>\n};\n\nexport default AboutDoctor","import \"./style-pharma.scss\"\nimport {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Navbar from \"../navbar/Navbar\";\nimport Footer from \"../footer/Footer\";\nimport {showModals} from \"../../redux/ModalContent\";\nimport axios from \"axios\";\nimport {useTranslation} from \"react-i18next\";\nimport {getAboutMarker} from \"../../redux/markerAbout\";\nimport i18next from \"i18next\";\nimport MapAbout from \"../map/MapAbout\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\n\nconst AboutPharma = () => {\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [pharmacy, setPharmacy] = useState(\"\");\n    const [comments, setComments] = useState([]);\n    const [savedPosts, setSavedPosts] = useState([]);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        axios.get(`${baseUrl}pharmacy/${localStorage.getItem(\"pharmacyId\")}/`).then((response) => {\n            setPharmacy(response.data);\n            axios.get(`${baseUrl}comment/${response.data.user}/`).then((response) => {\n                setComments(response.data)\n            });\n            dispatch(getAboutMarker(response.data.location));\n        });\n        setSavedPosts(getSavedPosts())\n    }, []);\n\n    const isPlaceOpen = (startTime, endTime) => {\n        const startParts = startTime.split(':');\n        const endParts = endTime.split(':');\n\n        const startDate = new Date();\n        startDate.setHours(startParts[0], startParts[1], startParts[2]);\n\n        const endDate = new Date();\n        endDate.setHours(endParts[0], endParts[1], endParts[2]);\n\n        const now = new Date();\n\n        return now >= startDate && now <= endDate;\n    };\n\n    const ShowModal = (status, item) => {\n        dispatch(showModals({show: true, status, item}))\n    };\n\n    const getSavedPosts = () => {\n        const savedPosts = localStorage.getItem('pharmacy_saved');\n        return savedPosts ? JSON.parse(savedPosts) : [];\n    };\n\n    const handleSaveClick = (postId) => {\n        let updatedSavedPosts = [...savedPosts];\n\n        if (savedPosts.includes(postId)) {\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\n        } else {\n            updatedSavedPosts.push(postId);\n        }\n\n        localStorage.setItem('pharmacy_saved', JSON.stringify(updatedSavedPosts));\n        setSavedPosts(updatedSavedPosts);\n    };\n\n    const NavigateButton = (location) => {\n        let latitude = Number(location.split(\",\")[0]);\n        let longitude = Number(location.split(\",\")[1]);\n\n        const url = `https://www.google.com/maps?q=${latitude},${longitude}`;\n        window.open(url, '_blank');\n    };\n\n    return <div className=\"about-pharmacies\">\n        <Navbar/>\n        {pharmacy && <div className=\"pharmaci-box\">\n            <div className=\"header-wrapper\">\n                <div className=\"header\">\n                    <img src={pharmacy.image} alt=\"\"/>\n                </div>\n                <div className=\"left-header\">\n                    <div className=\"title-pahrma\">\n                        {pharmacy.translations[i18next.language].name}\n                    </div>\n                    <div onClick={() => handleSaveClick(pharmacy.id)} className=\"like\">\n                        <img\n                            src={savedPosts.includes(pharmacy.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\n                            alt=\"\"/>\n\n                        <div className=\"name\">{t(\"save\")}</div>\n                    </div>\n                    <div className=\"section-commit\">\n                        <div className=\"raiting\">\n                            {pharmacy.avg_rating}\n                        </div>\n                        <div className=\"commit-count\">\n                            {pharmacy.comment_count} {t(\"comment\")}\n                        </div>\n                        <span></span>\n                        <div className=\"name\">\n                            {t(\"pharmacy\")}\n                        </div>\n                    </div>\n                    <div className=\"section-commit\">\n                        {pharmacy.open_24 ? <div\n                            className=\"open\">{t(\"open\")}</div> : isPlaceOpen(pharmacy.start_time, pharmacy.end_time) ?\n                            <div className=\"open\">{t(\"open\")}</div> :\n                            <div className=\"close\">{t(\"close\")}</div>}\n                        <span></span>\n                        <div className=\"name\">\n                            {pharmacy.open_24 ? t(\"open24\") : <>\n                                {pharmacy.start_time} {t(\"from\")}\n                                &nbsp;\n                                {pharmacy.end_time} {t(\"to\")}\n                            </>}\n                        </div>\n                    </div>\n                    <div onClick={() => NavigateButton(pharmacy.location)}\n                         className=\"navigator\">\n                        {t(\"navigator\")}\n                        <img src=\"./images/compass.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"map-locations\">\n                <div className=\"map-side\">\n                    <MapAbout/>\n                </div>\n                <div className=\"information-location\">\n                    <div className=\"title\">\n                        <img src=\"./images/loaction-pharma.png\" alt=\"\"/>\n                        {t(\"address-pharmacy\")}\n                    </div>\n                    <div className=\"info\">\n                        {pharmacy.translations[i18next.language].address}\n                    </div>\n                    <div className=\"title\">\n                        <img src=\"./images/time-pharma.png\" alt=\"\"/>\n                        {t(\"working-time\")}\n                    </div>\n                    <div className=\"section-commit\">\n                        <div className=\"name\">\n                            {pharmacy.open_24 ? t(\"open24\") : <>\n                                {pharmacy.start_time} {t(\"from\")}\n                                &nbsp;\n                                {pharmacy.end_time} {t(\"to\")}\n                            </>}\n                        </div>\n                    </div>\n                    <div className=\"title\">\n                        <img src=\"./images/phone-pharma.png\" alt=\"\"/>\n                        {t(\"contact\")}\n                    </div>\n                    <div className=\"contact\">\n                        {pharmacy.phone1} <br/>\n                        {pharmacy.phone2}\n                    </div>\n                </div>\n            </div>\n            <div className=\"comments-box\">\n                <div className=\"header-commet\">\n                    <div className=\"counts\">\n                        <div className=\"raiting\">\n                            {pharmacy.avg_rating}\n                        </div>\n                        <div className=\"commit-count\">\n                            {pharmacy.comment_count}{t(\"comment\")}\n                        </div>\n                    </div>\n                    <div onClick={() => ShowModal(\"commit\", pharmacy.user)} className=\"btn-commit\">\n                        <img src=\"./images/comit.png\" alt=\"\"/>\n                        {t(\"comment-btn\")}\n                    </div>\n                </div>\n\n                {comments.map((item, index) => {\n                    return <div key={index} className=\"commits\">\n                        <div className=\"header-commit\">\n                            <div className=\"left-circle\">\n                                {item.name.slice(0, 1)}\n                            </div>\n                            <div className=\"right-names\">\n                                <div className=\"name\">\n                                    {item.name}\n                                    <span>{item.time}</span>\n                                </div>\n                                <div className=\"stars\">\n                                    {Array.from({length: item.mark}).map((_, index) => (\n                                        <img key={index} src=\"./images/raiting1.png\" alt=\"Rating 1\"/>\n                                    ))}\n\n                                    {Array.from({length: 5 - item.mark}).map((_, index) => (\n                                        <img key={index} src=\"./images/raiting2.png\" alt=\"Rating 2\"/>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-commit\">\n                            {item.text}\n                        </div>\n                    </div>\n                })}\n            </div>\n        </div>}\n        <div className=\"mobile-navbar-container\">\n            <MobileNavbar/>\n        </div>\n        <Footer/>\n    </div>\n};\n\nexport default AboutPharma","import \"./register-style.scss\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Register = () => {\n    const {t} = useTranslation();\n    const [direction, setDirection] = useState(\"\");\n    const navigate = useNavigate();\n\n    return <div className=\"register-container\">\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n\n        <div className=\"register-page-zero\">\n            <div className=\"xbtn\">\n                <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n            </div>\n            <div className=\"title\">\n                {t(\"reason-register\")}\n            </div>\n            <div className=\"des\">\n                {t(\"register-text\")}\n            </div>\n\n\n            <div onClick={() => setDirection(\"/register-doctor\")}\n                 className={`items ${direction === \"/register-doctor\" ? \"active\" : \"\"}`}>\n                <img src=\"./images/icons.png\" alt=\"\"/>\n                {t(\"add-doctor\")}\n            </div>\n\n            <div onClick={() => setDirection(\"/register-hospital\")}\n                 className={`items ${direction === \"/register-hospital\" ? \"active\" : \"\"}`}>\n                <img src=\"./images/pin-location.png\" alt=\"\"/>\n                {t(\"add-clinic\")}\n            </div>\n\n            <div onClick={() => setDirection(\"/register-pharmacies\")}\n                 className={`items ${direction === \"/register-pharmacies\" ? \"active\" : \"\"}`}>\n                <img src=\"./images/pill.png\" alt=\"\"/>\n                {t(\"add-pharmacy\")}\n            </div>\n\n            <div onClick={() => {\n                navigate(\"/register-step-one\");\n                sessionStorage.setItem(\"link-register\", direction)\n            }} className={`button-next ${!direction ? \"button-next-disabled\" : \"\"}`}>\n                {t(\"register-btn\")}\n            </div>\n        </div>\n    </div>\n};\n\nexport default Register","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import \"./style.scss\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useMemo, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {useFormik} from \"formik\";\nimport {\n    TextField, MenuItem, InputLabel, FormControl, Select, Checkbox, OutlinedInput,\n    ListItemText\n} from \"@mui/material\";\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport Loader from \"../../loader/Loader\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\nimport PhoneInput from \"react-phone-number-input\";\n\n\nconst libraries = [\"places\"];\n\n\nconst RegisterHospital = () => {\n    const navigate = useNavigate();\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [hospitalType, setHospitalType] = useState('');\n    const [hospital, setHospital] = useState('');\n    const [invalidService, setInvalidService] = useState(true);\n    const [workingTime24, setWorkingTime24] = useState(false);\n    const [selected, setSelected] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [center, setCenter] = useState(null);\n    const [socialMedias, setSocialMedias] = useState([{key: \"web\", url: \"\"}]);\n    const [service, setService] = useState([\n        {service: \"\", options: [], sub_services_list: [{sub_service: \"\", price: \"\"}]}\n    ]);\n    const [addressLocation, setAddressLocation] = useState(\"\");\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\n    const [address_validate, setAddress_validate] = useState(false);\n    const [weekend, setWeekend] = useState([]);\n    const [region, setRegion] = useState(\"\");\n    const [region_validate, setRegion_validate] = useState(false);\n    const [logoHospital, setLogoHospital] = useState(null);\n    const [daysList, setDaysList] = useState([]);\n    const [hospitalList, setHospitalList] = useState([]);\n    const [serviceList, setServiceList] = useState([])\n    const [logoValidate, setLogoValidate] = useState(false);\n    const ref2 = useRef(null);\n    const [tg, setTg] = useState(false)\n    const [ins, setIns] = useState(false)\n    const [face, setFace] = useState(false)\n    const [you, setYou] = useState(false)\n    const [tik, setTik] = useState(false)\n    const dispatch = useDispatch();\n    const [loader, setLoader] = useState(false);\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    const selectAddressIcon = {\n        url: \"./images/address.png\",\n        scaledSize: {width: 40, height: 50},\n    };\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false,\n        }),\n        []\n    );\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.hospital_type) {\n            errors.hospital_type = \"Required\";\n        }\n\n        if (!values.type) {\n            errors.type = \"Required\";\n        }\n\n        if (!values.nameUz) {\n            errors.nameUz = \"Required\";\n        }\n\n        if (!values.nameRu) {\n            errors.nameRu = \"Required\";\n        }\n\n        if (!values.phone1) {\n            errors.phone1 = \"Required\";\n        } else if (isNaN(Number(values.phone1))) {\n            errors.phone1 = \"Required\";\n        }\n\n        if (!values.phone2) {\n            errors.phone2 = \"Required\";\n        } else if (isNaN(Number(values.phone2))) {\n            errors.phone2 = \"Required\";\n        }\n\n        if (!values.working_days.length > 0) {\n            errors.working_days = \"Required\";\n        }\n\n        if (!workingTime24 && !values.start_time) {\n            errors.start_time = \"Required\";\n        }\n\n        if (!workingTime24 && !values.end_time) {\n            errors.end_time = \"Required\";\n        }\n\n        return errors;\n    };\n\n    const initialValues = JSON.parse(sessionStorage.getItem(\"formDataHospital\")) ||\n        {\n            nameUz: \"\",\n            nameRu: \"\",\n            hospital_type: \"\",\n            type: \"\",\n            phone1: \"\",\n            phone2: \"\",\n            emergency_number: \"\",\n            start_time: null,\n            end_time: null,\n            working_days: [],\n        };\n\n    const formOne = useFormik({\n        initialValues: initialValues,\n        validate,\n        onSubmit: (values) => {\n            if (logoHospital) {\n                axios.post(`${baseUrl}checkuser/`, {phone: values.phone1}).then((response) => {\n\n                }).catch((error) => {\n                    if (error.response.status === 302) {\n                        let idAlert = Date.now();\n                        let alert = {\n                            id: idAlert,\n                            text: \"Ushbu raqam ro'yxatdan o'tgan!\",\n                            img: \"./images/red.svg\",\n                            color: \"#ffefe7\",\n                        };\n                        dispatch(addAlert(alert));\n                        setTimeout(() => {\n                            dispatch(delAlert(idAlert));\n                        }, 5000);\n                    } else {\n                        setPageNumber(2);\n                    }\n                });\n            } else {\n                ref2.current?.scrollIntoView({\n                    behavior: \"smooth\",\n                });\n                setLogoValidate(true)\n            }\n        },\n    });\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            let locMy = {lat: latitude, lng: longitude};\n            setCenter(locMy);\n        });\n\n        axios.get(`${baseUrl}days/`).then((response) => {\n            setDaysList(response.data)\n        }).catch((error) => {\n        });\n\n        axios.get(`${baseUrl}hospital-type/`, {\n            headers: {\n                \"Accept-Language\": i18next.language\n            },\n        }).then((response) => {\n            setHospitalList(response.data)\n        }).catch((error) => {\n        });\n\n        axios.get(`${baseUrl}speciality/`, {\n            headers: {\n                \"Accept-Language\": i18next.language\n            },\n        }).then((response) => {\n            setServiceList(response.data)\n        }).catch((error) => {\n        });\n\n    }, []);\n\n    useEffect(() => {\n        sessionStorage.setItem(\"formDataHospital\", JSON.stringify(formOne.values))\n    }, [formOne.values]);\n\n    const handleChangeMore = (event) => {\n        const {\n            target: {value},\n        } = event;\n\n        setWeekend(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n\n        sessionStorage.setItem(\"weekendHospital\", typeof value === 'string' ?\n            JSON.stringify(value.split(',')) : JSON.stringify(value));\n\n        let new_list = daysList.filter(day => {\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\n        }).map(day => day.id);\n\n        formOne.values.working_days = new_list\n    };\n\n    const getInputPhoto = (event) => {\n        setLogoValidate(false);\n        const {target: {files}} = event;\n        const file = files[0];\n\n        function getBase64(file) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                setLogoHospital(reader.result);\n            };\n            reader.onerror = function () {\n                setLogoHospital(null);\n            };\n\n        }\n\n        getBase64(file);\n    };\n\n    const ClicklLocation = (e) => {\n        let latitude = e.latLng.lat();\n        let longitude = e.latLng.lng();\n\n        let locMy = {lat: latitude, lng: longitude};\n\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"uz\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setSelected(locMy);\n            setCenter({lat: latitude, lng: longitude});\n            setAddressLocation(fullAddress)\n            setAddress_validate(false)\n        });\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"ru\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setAddressLocationRu(fullAddress);\n        });\n    };\n\n    const PlacesAutocomplete = ({setSelected}) => {\n        const {\n            ready,\n            value,\n            setValue,\n            suggestions: {status, data},\n            clearSuggestions,\n        } = usePlacesAutocomplete({\n            requestOptions: {\n                language: i18next.language,\n            },\n        });\n\n        const handleSelect = async (address) => {\n            const results = await getGeocode({address});\n            const {lat, lng} = await getLatLng(results[0]);\n            let locMy = {lat, lng};\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\n\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n\n                setSelected(locMy);\n                setCenter({lat, lng});\n                setAddressLocation(fullAddress)\n                setAddress_validate(false)\n            });\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n                setAddressLocationRu(fullAddress);\n            });\n        };\n\n        return (\n            <Combobox onSelect={handleSelect}>\n                <ComboboxInput\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    disabled={!ready}\n                    className=\"combobox-input\"\n                    placeholder={t(\"address_input\")}\n                />\n\n                <div className=\"address-wrapper\">\n                    <div className=\"list-address\">\n                        {status === \"OK\" &&\n                        data.map(({place_id, description}) => (\n                            <ComboboxOption key={place_id} value={description}/>\n                        ))}\n                    </div>\n                </div>\n            </Combobox>\n        );\n    };\n\n    const addSocialMedia = (key) => {\n        if (key === \"telegram\") {\n            setTg(true)\n        }\n        if (key === \"instagram\") {\n            setIns(true)\n        }\n        if (key === \"facebook\") {\n            setFace(true)\n        }\n        if (key === \"tiktok\") {\n            setTik(true)\n        }\n        if (key === \"youtube\") {\n            setYou(true)\n        }\n        let newMedia = {key, url: \"\"};\n        let newArr = socialMedias.concat(newMedia);\n        setSocialMedias(newArr)\n    };\n\n    const delSocialMedia = (ind, key) => {\n        if (key === \"telegram\") {\n            setTg(false)\n        }\n        if (key === \"instagram\") {\n            setIns(false)\n        }\n        if (key === \"facebook\") {\n            setFace(false)\n        }\n        if (key === \"tiktok\") {\n            setTik(false)\n        }\n        if (key === \"youtube\") {\n            setYou(false)\n        }\n\n        let newArr = socialMedias.filter((item, index) => index !== ind);\n        setSocialMedias(newArr)\n    };\n\n    const addService = () => {\n        let newService = {service: \"\", options: [], sub_services_list: [{sub_service: \"\", price: \"\"}]}\n        let newArr = service.concat(newService);\n        setService(newArr)\n    };\n\n    const delService = (ind) => {\n        let newArr = service.filter((item, index) => index !== ind);\n        setService(newArr)\n    };\n\n    const sendAllInfo = () => {\n        let loc = `${center.lat},${center.lng}`;\n        let allInfoHospital = {\n            translations: {\n                uz: {\n                    name: formOne.values.nameUz,\n                    address: addressLocation\n                },\n                ru: {\n                    name: formOne.values.nameRu,\n                    address: addressLocationRu\n                }\n            },\n            base64_image: logoHospital,\n            disabled: invalidService,\n            hospital_type: formOne.values.hospital_type,\n            type: formOne.values.type,\n            phone1: formOne.values.phone1,\n            phone2: formOne.values.phone2,\n            emergency_number: formOne.values.emergency_number,\n            start_time: formOne.values.start_time,\n            end_time: formOne.values.end_time,\n            open_24: workingTime24,\n            location: loc,\n            working_days: formOne.values.working_days,\n            services: service,\n            socials: socialMedias,\n            region: region\n        }\n        setLoader(true);\n\n        axios.post(`${baseUrl}auth/register/hospital/`, allInfoHospital,\n            {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }\n        ).then((response) => {\n\n            sessionStorage.removeItem(\"formDataHospital\");\n            sessionStorage.removeItem(\"weekendHospital\");\n            sessionStorage.removeItem(\"hospital\");\n            sessionStorage.removeItem(\"hospitaltype\");\n\n            window.location.pathname = \"/profile-hospital\";\n            localStorage.setItem(\"profile\", true);\n            setTimeout(() => {\n                setLoader(false)\n            }, 500);\n        }).catch((error) => {\n            setLoader(false);\n        });\n    };\n\n    if (!isLoaded) return <Loader/>;\n    if (loader) return <Loader/>;\n\n    return <div className=\"register-hospital-container\">\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n        <div className=\"xbtn\">\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n        </div>\n\n        <div className=\"register-page\">\n            <div className=\"header-register\">\n                <div className=\"line-page-numbers\">\n                    <div\n                        className={`line ${pageNumber === 1 || pageNumber === 2 || pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\n                    <div\n                        className={`num ${pageNumber === 1 || pageNumber === 2 || pageNumber === 3 ? \"num-active\" : \"\"}`}>\n                        1\n                        <div className={`name ${pageNumber === 1 || pageNumber === 2 ? \"active-name\" : \"\"}`}>\n                            {t(\"about_clinic\")}\n                        </div>\n                    </div>\n\n                    <div className={`line ${pageNumber === 2 || pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\n                    <div className={`num ${pageNumber === 2 || pageNumber === 3 ? \"num-active\" : \"\"}`}>\n                        2\n                        <div className={`name ${pageNumber === 2 ? \"active-name\" : \"\"}`}>\n                            {t(\"address_clinic\")}\n                        </div>\n                    </div>\n\n                    <div className={`line ${pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\n                    <div className={`num ${pageNumber === 3 ? \"num-active\" : \"\"}`}>\n                        3\n                        <div className=\"name\">\n                            {t(\"nav4\")}\n                        </div>\n                    </div>\n\n                    <div className={`line ${pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\n                </div>\n                <div onClick={() => navigate(\"/register\")} className=\"prev-mobile\">\n                    <img src=\"./images/arrow.png\" alt=\"\"/>\n                </div>\n            </div>\n\n            {pageNumber === 1 &&\n            <div className=\"register-page-one\">\n\n                <div ref={ref2} className=\"title\">\n                    {t(\"clinic_des\")}\n                </div>\n                <div className=\"des\">\n                    {t(\"clinic_des2\")}\n                </div>\n\n                <div className=\"logo-hospital\">\n                    <div className={`logo-image ${logoValidate ? \"required-logo\" : \"\"}`}>\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\n                        }\n                    </div>\n\n                    {!logoHospital && <div className=\"label\">\n                        {t(\"addImage\")}\n                        <input onChange={getInputPhoto} type=\"file\"/>\n                    </div>}\n\n                    {logoHospital && <div onClick={() => setLogoHospital(null)} className=\"label\">\n                        {t(\"delImage\")}\n                        <img src=\"./images/cancel.png\" alt=\"\"/>\n                    </div>}\n                </div>\n\n                <div className=\"inputs-box\">\n                    <TextField error={formOne.errors.nameUz === \"Required\"}\n                               value={formOne.values.nameUz}\n                               onChange={formOne.handleChange}\n                               name=\"nameUz\"\n                               sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                               id=\"outlined-basic\"\n                               label=\"Shifoxona nomini kiriting (uz) \" variant=\"outlined\" className=\"textField\"/>\n                </div>\n\n                <div className=\"inputs-box\">\n                    <TextField error={formOne.errors.nameRu === \"Required\"} value={formOne.values.nameRu}\n                               onChange={formOne.handleChange}\n                               name=\"nameRu\" sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                               id=\"outlined-basic\"\n                               label=\"Введите название больницы (ru) \" variant=\"outlined\" className=\"textField\"/>\n                </div>\n\n                <div className=\"des-input\">\n                    {t(\"name_des\")}\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                     className=\"selectMui\">\n                            <InputLabel id=\"demo-select-large-label\">{t(\"clinic\")}</InputLabel>\n                            <Select\n                                error={formOne.errors.type === \"Required\"}\n                                name=\"type\"\n                                labelId=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={sessionStorage.getItem(\"hospital\") || hospital}\n                                label={t(\"clinic\")}\n                                onChange={(e) => {\n                                    formOne.handleChange(e);\n                                    sessionStorage.setItem(\"hospital\", e.target.value)\n                                    setHospital(e.target.value)\n                                }}\n                            >\n                                <MenuItem value={1}>\n                                    {t(\"hospital_type1\")}\n                                </MenuItem>\n                                <MenuItem value={2}>\n                                    {t(\"hospital_type2\")}\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n\n                    <div className=\"select-sides\">\n                    </div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\"></div>\n                    <div className=\"sides\">{t(\"disable\")}</div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                     className=\"selectMui\">\n                            <InputLabel id=\"demo-select-large-label\">{t(\"hospital_type\")}</InputLabel>\n                            <Select\n                                error={formOne.errors.hospital_type === \"Required\"}\n                                name=\"hospital_type\"\n                                labelId=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={sessionStorage.getItem(\"hospitaltype\") || hospitalType}\n                                label={t(\"hospital_type\")}\n                                onChange={(e) => {\n                                    formOne.handleChange(e);\n                                    sessionStorage.setItem(\"hospitaltype\", e.target.value);\n                                    setHospitalType(e.target.value)\n                                }}\n                            >\n                                {hospitalList.map((item) => {\n                                    return <MenuItem key={item.id} value={item.id}>\n                                        {item.translations[i18next.language].name}\n                                    </MenuItem>\n                                })}\n\n                            </Select>\n                        </FormControl>\n                    </div>\n\n                    <div className=\"select-sides\">\n                        <div className=\"on-of\">\n                            <div onClick={() => setInvalidService(true)}\n                                 className={`of ${invalidService ? \"on\" : \"\"}`}>\n                                {t(\"on\")}\n                            </div>\n                            <div onClick={() => setInvalidService(false)}\n                                 className={`of ${!invalidService ? \"on\" : \"\"}`}>\n                                {t(\"of\")}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        <div className=\"label-bold\">{t(\"working-time\")}</div>\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\n                            <InputLabel id=\"demo-multiple-checkbox-label\">{t(\"working_days\")}</InputLabel>\n                            <Select\n                                error={formOne.errors.working_days === \"Required\"}\n                                name=\"working_days\"\n                                labelId=\"demo-multiple-checkbox-label\"\n                                id=\"demo-multiple-checkbox\"\n                                multiple\n                                value={sessionStorage.getItem(\"weekendHospital\") &&\n                                JSON.parse(sessionStorage.getItem(\"weekendHospital\")) || weekend}\n                                onChange={handleChangeMore}\n                                input={<OutlinedInput label={t(\"working_days\")}/>}\n                                renderValue={(selected) => selected.join(', ')}\n                                MenuProps={MenuProps}\n                            >\n                                {daysList.map((item) => (\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\n                                        <Checkbox\n                                            checked={sessionStorage.getItem(\"weekendHospital\") && JSON.parse(sessionStorage.getItem(\"weekendHospital\")).indexOf(item.translations[i18next.language].day) > -1}/>\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"select-sides\">\n                        <div className=\"check-box\">\n                            <div className=\"checkbox-wrapper-13\">\n                                <input\n                                    onChange={(e) => {\n                                        setWorkingTime24((prevState) => !prevState);\n                                    }}\n                                    id=\"c1-13\"\n                                    type=\"checkbox\"\n                                />\n                            </div>\n                            <label htmlFor=\"c1-13\">\n                                {t(\"open24_register\")}\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                {workingTime24 ? \"\" :\n                    <div className=\"select-box-working-time\">\n                    <div className=\"select-sides\">\n                        <label htmlFor=\"\">{t(\"start_time\")}</label>\n                        <input\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.values.start_time}\n                            type=\"time\"/>\n                    </div>\n                    <div className=\"select-sides\">\n                        <label htmlFor=\"\">{t(\"end_time\")}</label>\n                        <input\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.values.end_time}\n                            type=\"time\"/>\n                    </div>\n                </div>}\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        <div className=\"label-bold\">{t(\"contact_des\")}</div>\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField\n                            error={formOne.errors.phone1 === \"Required\"}\n                            value={formOne.values.phone1}\n                            onChange={formOne.handleChange}\n                            name=\"phone1\"\n                            type=\"number\"\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                            label={t(\"phone1\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                    <div className=\"select-sides\">\n                        <TextField\n                            error={formOne.errors.phone2 === \"Required\"}\n                            value={formOne.values.phone2}\n                            onChange={formOne.handleChange}\n                            name=\"phone2\"\n                            type=\"number\"\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                            label={t(\"phone2\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField\n                            value={formOne.values.emergency_number}\n                            onChange={formOne.handleChange}\n                            name=\"emergency_number\"\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                            label={t(\"phone3\")} variant=\"outlined\" className=\"textField\"/>\n\n                    </div>\n                    <div className=\"select-sides\">\n                    </div>\n                </div>\n\n                <div className=\"des-input\">\n                    {t(\"phone3_des\")}\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        {t(\"social_media\")}\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"inputs-box-link\">\n                    {socialMedias.map((item, index) => {\n                        return <div key={index} className=\"inputs-social-media\">\n\n                            {item.key === \"telegram\" && <img src=\"./images/social-media/telegram.png\" alt=\"\"/>}\n                            {item.key === \"web\" && <img src=\"./images/social-media/web.png\" alt=\"\"/>}\n                            {item.key === \"instagram\" && <img src=\"./images/social-media/instagram.png\" alt=\"\"/>}\n                            {item.key === \"facebook\" && <img src=\"./images/social-media/facebook.png\" alt=\"\"/>}\n                            {item.key === \"youtube\" && <img src=\"./images/social-media/youtube.png\" alt=\"\"/>}\n                            {item.key === \"tiktok\" && <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>}\n\n                            <TextField onChange={(e) => item.url = e.target.value} sx={{m: 1, minWidth: \"43%\"}}\n                                       size=\"small\"\n                                       id=\"outlined-basic\"\n                                       label=\"https://\" variant=\"outlined\" className=\"textField\"/>\n\n                            {socialMedias.length > 1 && index !== 0 &&\n                            <div onClick={() => delSocialMedia(index, item.key)} className=\"del-icon\"><img\n                                src=\"./images/del-icon.png\" alt=\"\"/></div>}\n                        </div>\n                    })}\n                    <div className=\"des\">{t(\"social_des2\")}</div>\n                    <div className=\"add-social-media\">\n                        {!tg && <div onClick={() => addSocialMedia(\"telegram\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/telegram.png\" alt=\"\"/>\n                        </div>}\n\n                        {!ins && <div onClick={() => addSocialMedia(\"instagram\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/instagram.png\" alt=\"\"/>\n                        </div>}\n\n                        {!face && <div onClick={() => addSocialMedia(\"facebook\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/facebook.png\" alt=\"\"/>\n                        </div>}\n\n                        {!you && <div onClick={() => addSocialMedia(\"youtube\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/youtube.png\" alt=\"\"/>\n                        </div>}\n\n                        {!tik && <div onClick={() => addSocialMedia(\"tiktok\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>\n                        </div>}\n                    </div>\n                    <div className=\"des\">\n                        {t(\"social_des\")}\n                    </div>\n                </div>\n\n                <div className=\"btn-box\">\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\n                        {t(\"next_btn\")}\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>}\n\n            {pageNumber === 2 &&\n            <div className=\"register-page-two\">\n                <div className=\"title\">\n                    {t(\"clinic_loc\")}\n                </div>\n                <div className=\"des\">\n                    {t(\"clinic_loc_des\")}\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                            <InputLabel id=\"demo-select-large-label\">{t(\"region_register\")}</InputLabel>\n                            <Select\n                                error={region_validate}\n                                labelId=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={region}\n                                label={t(\"region_register\")}\n                                onChange={(e) => setRegion(e.target.value)}\n                            >\n\n                                {regions.map((item, index) => {\n                                    return <MenuItem key={index} onClick={() => {\n                                        setRegion_validate(false)\n                                        setCenter({lat: item.latitude, lng: item.longitude})\n                                    }} value={index + 1}>{item.name}</MenuItem>\n                                })}\n\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n\n                <div className=\"label-address\">{t(\"location\")}</div>\n                <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\n                    {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\n                    {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\n                    {!addressLocation && !addressLocationRu && <p>{t(\"map_des\")}</p>}\n                </div>\n                <div className=\"address-container\">\n                    <GoogleMap\n                        zoom={9}\n                        center={center}\n                        options={options}\n                        onClick={ClicklLocation}\n                        mapContainerClassName=\"map-box\"\n                    >\n                        {selected && (\n                            <Marker icon={selectAddressIcon} position={selected}/>\n                        )}\n\n                        <div className=\"search-address\">\n                            <div className=\"places-container\">\n                                <PlacesAutocomplete setSelected={setSelected}/>\n                                <img src=\"./images/search.png\" alt=\"\"/>\n                            </div>\n                        </div>\n                    </GoogleMap>\n                </div>\n\n                <div className=\"btn-box\">\n                    <div onClick={() => setPageNumber(1)} className=\"prev-btn\">\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\n                        {t(\"prev_btn\")}\n                    </div>\n                    <div onClick={() => {\n                        if (addressLocation && region) {\n                            setPageNumber(3)\n                        } else {\n                            if (!addressLocation) setAddress_validate(true);\n                            if (!region) setRegion_validate(true)\n                        }\n                    }} className=\"next-page-btn\">\n                        {t(\"next_btn\")}\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>}\n\n            {pageNumber === 3 &&\n            <div className=\"register-page-three\">\n                <div className=\"title\">\n                    {t(\"nav4\")}\n                </div>\n                <div className=\"des\">\n                    {t(\"service_des\")}\n                </div>\n\n                {service.map((item, index) => {\n                    return <div key={index} className=\"service\">\n                        <div className=\"select-box\">\n                            <div className=\"select-sides\">\n                                <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                                    <InputLabel id=\"demo-select-large-label\">{t(\"service_type\")}</InputLabel>\n                                    <Select\n                                        labelId=\"demo-select-small-label\"\n                                        id=\"demo-select-small\"\n                                        value={item.service}\n                                        label={t(\"service_type\")}\n                                        onChange={(e) => {\n                                            item.service = e.target.value\n                                            item.options = serviceList.filter((item) => item.id === e.target.value)[0].options;\n                                            let change = [...service];\n                                            setService(change);\n                                        }}\n                                    >\n                                        {serviceList.map((item, index) => {\n                                            return <MenuItem key={item.id} value={item.id}>\n                                                {item.translations[i18next.language].name}\n                                            </MenuItem>\n                                        })}\n\n                                    </Select>\n                                </FormControl>\n                            </div>\n                            <div className=\"select-sides\">\n                                {service.length > 1 && index !== 0 &&\n                                <img onClick={() => delService(index)} src=\"./images/del-icon.png\" alt=\"\"/>}\n                            </div>\n                        </div>\n\n                        {item.sub_services_list.map((itemService, indexService) => {\n                            return <div key={indexService} className=\"select-box\">\n                                <div className=\"select-sides\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"service_name\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={itemService.sub_service}\n                                            label={t(\"service_name\")}\n                                            onChange={(e) => {\n                                                let change = [...service];\n                                                setService(change);\n                                                itemService.sub_service = e.target.value\n                                            }}\n                                        >\n                                            {item.options.map((item) => {\n                                                return <MenuItem key={item.id} value={item.id}>\n                                                    {item.translations[i18next.language].name}\n                                                </MenuItem>\n                                            })}\n\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                                <div className=\"select-sides\">\n                                    <TextField onChange={(e) => itemService.price = e.target.value}\n                                               sx={{m: 1, minWidth: \"80%\"}}\n                                               size=\"small\" id=\"outlined-basic\"\n                                               label={t(\"service_price\")} variant=\"outlined\" className=\"textField\"/>\n\n                                    {item.sub_services_list.length > 1 && indexService !== 0 && <img onClick={() => {\n                                        item.sub_services_list = item.sub_services_list.filter((item, index) => index !== indexService);\n                                        let change = [...service];\n                                        setService(change);\n                                    }} src=\"./images/del-icon.png\" alt=\"\"/>}\n                                </div>\n                            </div>\n                        })}\n\n                        <div onClick={() => {\n                            item.sub_services_list = item.sub_services_list.concat({sub_service: \"\", price: \"\"});\n                            let change = [...service];\n                            setService(change);\n                        }} className=\"add-social-media\">\n                            {t(\"add_service\")}\n                        </div>\n                        <div className=\"des-btn\">\n                            {t(\"add_service_des\")}\n                        </div>\n                    </div>\n                })}\n\n                <div onClick={addService} className=\"add-social-media\">\n                    {t(\"create_service\")}\n                </div>\n                <div className=\"des-btn\">\n                    {t(\"create_service_des\")}\n                </div>\n\n                <div className=\"btn-box\">\n                    <div onClick={() => setPageNumber(2)} className=\"prev-btn\">\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\n                        {t(\"prev_btn\")}\n                    </div>\n\n                    <div onClick={sendAllInfo} className=\"next-page-btn\">\n                        {t(\"success_btn\")}\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>}\n\n        </div>\n    </div>\n};\n\nexport default RegisterHospital","import \"./style.scss\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useMemo, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    TextField,\n    MenuItem,\n    InputLabel,\n    FormControl,\n    Select,\n    Checkbox,\n    OutlinedInput,\n    ListItemText,\n    Autocomplete\n} from \"@mui/material\";\nimport {Unstable_NumberInput as NumberInput} from '@mui/base/Unstable_NumberInput';\n\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport Loader from \"../../loader/Loader\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\nimport {useFormik} from \"formik\";\nimport Textarea from '@mui/joy/Textarea';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\n\n\nconst libraries = [\"places\"];\n\n\nconst RegisterHospital = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const cyrillicToTranslit = new CyrillicToTranslit();\n    const [hospitalType, setHospitalType] = useState('');\n    const [invalidService, setInvalidService] = useState(true);\n    const [selected, setSelected] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [center, setCenter] = useState(null);\n    const [socialMedias, setSocialMedias] = useState([{key: \"web\", url: \"\"}]);\n    const [addressLocation, setAddressLocation] = useState(\"\");\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\n    const [address_validate, setAddress_validate] = useState(false);\n    const [weekend, setWeekend] = useState([]);\n    const [subSpecialty, setSubSpecialty] = useState([]);\n    const [daysList, setDaysList] = useState([])\n    const [region, setRegion] = useState(\"\");\n    const [region_validate, setRegion_validate] = useState(false);\n    const [logoHospital, setLogoHospital] = useState(null);\n    const [specialty, setSpecialty] = useState(\"\");\n    const [specialtyList, setSpecialtyList] = useState([]);\n    const [subSpecialtyList, setSubSpecialtyList] = useState([]);\n    const [hospitalList, setHospitalList] = useState([]);\n    const [logoValidate, setLogoValidate] = useState(false);\n    const [loader, setLoader] = useState(false);\n    const ref2 = useRef(null);\n    const [tg, setTg] = useState(false);\n    const [ins, setIns] = useState(false);\n    const [face, setFace] = useState(false);\n    const [you, setYou] = useState(false);\n    const [tik, setTik] = useState(false);\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false,\n        }),\n        []\n    );\n    const selectAddressIcon = {\n        url: \"./images/address.png\",\n        scaledSize: {width: 40, height: 50},\n    };\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.first_name) {\n            errors.first_name = \"Required\";\n        }\n\n        if (!values.last_name) {\n            errors.last_name = \"Required\";\n        }\n\n        if (!values.middle_name) {\n            errors.middle_name = \"Required\";\n        }\n\n        if (!values.bio_uz && pageNumber === 3) {\n            errors.bio_uz = \"Required\";\n        }\n\n        if (!values.bio_ru && pageNumber === 3) {\n            errors.bio_ru = \"Required\";\n        }\n\n        if (!values.start_time) {\n            errors.start_time = \"Required\";\n        }\n\n        if (!values.end_time) {\n            errors.end_time = \"Required\";\n        }\n\n        if (isNaN(Number(values.phone1))) {\n            errors.phone1 = \"Required\";\n        }\n\n        if (!values.specialty && pageNumber === 3) {\n            errors.specialty = \"Required\";\n        }\n\n        if (!values.experience && pageNumber === 3) {\n            errors.experience = \"Required\";\n        } else if (isNaN(Number(values.experience))) {\n            errors.experience = \"Required\";\n        }\n\n        if (!values.working_days.length > 0) {\n            errors.working_days = \"Required\";\n        }\n\n        return errors;\n    };\n\n    const initialValues = JSON.parse(sessionStorage.getItem(\"formData\")) ||\n        {\n            first_name: \"\",\n            last_name: \"\",\n            middle_name: \"\",\n            bio_uz: \"\",\n            bio_ru: \"\",\n            phone1: \"\",\n            start_time: null,\n            end_time: null,\n            working_days: [],\n            consultation_fee: null,\n            second_consultation_fee: null,\n            specialty: null,\n            hospital: \"\",\n            sub_speciality: [],\n            experience: \"\"\n        };\n\n    const formOne = useFormik({\n        initialValues: initialValues,\n        validate,\n        onSubmit: (values) => {\n            if (pageNumber === 1) {\n                if (logoHospital) {\n                    setPageNumber(2);\n                } else {\n                    ref2.current?.scrollIntoView({\n                        behavior: \"smooth\",\n                    });\n                    setLogoValidate(true)\n                }\n            }\n\n            if (pageNumber === 2) {\n                if (region && (addressLocation || values.hospital)) {\n                    setPageNumber(3)\n                } else {\n                    if (!addressLocation) setAddress_validate(true);\n                    if (!region) setRegion_validate(true)\n                }\n            }\n\n            if (pageNumber === 3) {\n                sendAllInfo()\n            }\n        },\n    });\n\n    useEffect(() => {\n        sessionStorage.setItem(\"formData\", JSON.stringify(formOne.values))\n    }, [formOne.values]);\n\n    useEffect(() => {\n        let initialValues = {\n            first_name: \"\",\n            last_name: \"\",\n            middle_name: \"\",\n            bio_uz: \"\",\n            bio_ru: \"\",\n            phone1: \"\",\n            start_time: null,\n            end_time: null,\n            working_days: [],\n            consultation_fee: null,\n            second_consultation_fee: null,\n            specialty: null,\n            hospital: \"\",\n            sub_speciality: [],\n            experience: \"\"\n        }\n\n        sessionStorage.setItem(\"values\", initialValues);\n\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            let locMy = {lat: latitude, lng: longitude};\n            setCenter(locMy);\n        });\n\n        axios.get(`${baseUrl}days/`).then((response) => {\n            setDaysList(response.data)\n        }).catch((error) => {\n        });\n\n        axios.get(`${baseUrl}speciality/`, {\n            headers: {\n                \"Accept-Language\": i18next.language\n            },\n        }).then((response) => {\n            setSpecialtyList(response.data)\n        }).catch((error) => {\n        });\n\n    }, []);\n\n    const getHospital = (e) => {\n        setRegion(e.target.value)\n        axios.get(`${baseUrl}hospital-short/?region=${e.target.value}`).then((response) => {\n            setHospitalList(response.data)\n        }).catch((error) => {\n        });\n    };\n\n    const getSubSpecialty = (id) => {\n        axios.get(`${baseUrl}speciality/${id}/`).then((response) => {\n            setSubSpecialtyList(response.data)\n        }).catch((error) => {\n        });\n    };\n\n    const handleChangeMore = (event) => {\n        const {\n            target: {value},\n        } = event;\n\n        setWeekend(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n\n        sessionStorage.setItem(\"weekend\", typeof value === 'string' ?\n            JSON.stringify(value.split(',')) : JSON.stringify(value));\n\n        let new_list = daysList.filter(day => {\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\n        }).map(day => day.id);\n\n        formOne.values.working_days = new_list\n    };\n\n    const handleChangeMoreSpeciality = (event) => {\n        const {\n            target: {value},\n        } = event;\n\n        setSubSpecialty(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n\n        let new_list = subSpecialtyList.filter(day => {\n            return day.translations[i18next.language].name && value.includes(day.translations[i18next.language].name);\n        }).map(day => day.id);\n\n        formOne.values.sub_speciality = new_list\n    };\n\n    const getInputPhoto = (event) => {\n        setLogoValidate(false);\n        const {target: {files}} = event;\n        const file = files[0];\n\n        function getBase64(file) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                setLogoHospital(reader.result);\n            };\n            reader.onerror = function () {\n                setLogoHospital(null);\n            };\n\n        }\n\n        getBase64(file);\n    };\n\n    const ClicklLocation = (e) => {\n        let latitude = e.latLng.lat();\n        let longitude = e.latLng.lng();\n\n        let locMy = {lat: latitude, lng: longitude};\n\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"uz\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setSelected(locMy);\n            setCenter({lat: latitude, lng: longitude});\n            setAddressLocation(fullAddress)\n            setAddress_validate(false)\n        });\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"ru\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setAddressLocationRu(fullAddress);\n        });\n    };\n\n    const PlacesAutocomplete = ({setSelected}) => {\n        const {\n            ready,\n            value,\n            setValue,\n            suggestions: {status, data},\n            clearSuggestions,\n        } = usePlacesAutocomplete({\n            requestOptions: {\n                language: i18next.language,\n            },\n        });\n\n        const handleSelect = async (address) => {\n            const results = await getGeocode({address});\n            const {lat, lng} = await getLatLng(results[0]);\n            let locMy = {lat, lng};\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\n\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n\n                setSelected(locMy);\n                setCenter({lat, lng});\n                setAddressLocation(fullAddress)\n                setAddress_validate(false)\n            });\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n                setAddressLocationRu(fullAddress);\n            });\n        };\n\n        return (\n            <Combobox onSelect={handleSelect}>\n                <ComboboxInput\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    disabled={!ready}\n                    className=\"combobox-input\"\n                    placeholder={t(\"address_input\")}\n                />\n\n                <div className=\"address-wrapper\">\n                    <div className=\"list-address\">\n                        {status === \"OK\" &&\n                        data.map(({place_id, description}) => (\n                            <ComboboxOption key={place_id} value={description}/>\n                        ))}\n                    </div>\n                </div>\n            </Combobox>\n        );\n    };\n\n    const addSocialMedia = (key) => {\n        if (key === \"telegram\") {\n            setTg(true)\n        }\n        if (key === \"instagram\") {\n            setIns(true)\n        }\n        if (key === \"facebook\") {\n            setFace(true)\n        }\n        if (key === \"tiktok\") {\n            setTik(true)\n        }\n        if (key === \"youtube\") {\n            setYou(true)\n        }\n        let newMedia = {key, url: \"\"};\n        let newArr = socialMedias.concat(newMedia);\n        setSocialMedias(newArr)\n    };\n\n    const delSocialMedia = (ind, key) => {\n        if (key === \"telegram\") {\n            setTg(false)\n        }\n        if (key === \"instagram\") {\n            setIns(false)\n        }\n        if (key === \"facebook\") {\n            setFace(false)\n        }\n        if (key === \"tiktok\") {\n            setTik(false)\n        }\n        if (key === \"youtube\") {\n            setYou(false)\n        }\n\n        let newArr = socialMedias.filter((item, index) => index !== ind);\n        setSocialMedias(newArr)\n    };\n\n    const sendAllInfo = () => {\n        let loc = `${center.lat},${center.lng}`;\n        let allInfoHospital = {\n            translations: {\n                uz: {\n                    first_name: cyrillicToTranslit.transform(formOne.values.first_name),\n                    last_name: cyrillicToTranslit.transform(formOne.values.last_name),\n                    middle_name: cyrillicToTranslit.transform(formOne.values.middle_name),\n                    bio: formOne.values.bio_uz,\n                    address: addressLocation\n                },\n                ru: {\n                    first_name: cyrillicToTranslit.reverse(formOne.values.first_name),\n                    last_name: cyrillicToTranslit.reverse(formOne.values.last_name),\n                    middle_name: cyrillicToTranslit.reverse(formOne.values.middle_name),\n                    bio: formOne.values.bio_ru,\n                    address: addressLocationRu\n                }\n            },\n            base64_image: logoHospital,\n            gender: invalidService,\n            phone: formOne.values.phone1,\n            start_time: formOne.values.start_time,\n            end_time: formOne.values.end_time,\n            location: loc,\n            working_days: formOne.values.working_days,\n            socials: socialMedias,\n            region: region,\n            consultation_fee: formOne.values.consultation_fee,\n            second_consultation_fee: formOne.values.second_consultation_fee,\n            specialty: formOne.values.specialty,\n            hospital: formOne.values.hospital,\n            sub_speciality: formOne.values.sub_speciality,\n            experience: formOne.values.experience\n        };\n        setLoader(true);\n        axios.post(`${baseUrl}auth/register/doctor/`, allInfoHospital,\n            {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n            sessionStorage.removeItem(\"formData\");\n            sessionStorage.removeItem(\"weekend\");\n            localStorage.setItem(\"profile\", true);\n            window.location.pathname = \"/profile-doctor\";\n\n            setTimeout(() => {\n                setLoader(false)\n            }, 500);\n        }).catch((error) => {\n            setLoader(false)\n        });\n    };\n\n    if (!isLoaded) return <Loader/>;\n    if (loader) return <Loader/>;\n\n    return <div className=\"register-doctor-container\">\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n        <div className=\"xbtn\">\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n        </div>\n        <div className=\"register-page\">\n            <div className=\"header-register\">\n                <div className=\"line-page-numbers\">\n                    <div\n                        className={`line ${pageNumber === 1 || pageNumber === 2 || pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\n                    <div\n                        className={`num ${pageNumber === 1 || pageNumber === 2 || pageNumber === 3 ? \"num-active\" : \"\"}`}>\n                        1\n                        <div className={`name ${pageNumber === 1 || pageNumber === 2 ? \"active-name\" : \"\"}`}>\n                            {t(\"doctor\")}\n                        </div>\n                    </div>\n\n                    <div className={`line ${pageNumber === 2 || pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\n                    <div className={`num ${pageNumber === 2 || pageNumber === 3 ? \"num-active\" : \"\"}`}>\n                        2\n                        <div className={`name ${pageNumber === 2 ? \"active-name\" : \"\"}`}>\n                            {t(\"doctor_location\")}\n                        </div>\n                    </div>\n\n                    <div className={`line ${pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\n                    <div className={`num ${pageNumber === 3 ? \"num-active\" : \"\"}`}>\n                        3\n                        <div className=\"name\">\n                            {t(\"specialty_doctor\")}\n                        </div>\n                    </div>\n\n                    <div className={`line ${pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\n                </div>\n                <div onClick={() => navigate(\"/register\")} className=\"prev-mobile\">\n                    <img src=\"./images/arrow.png\" alt=\"\"/>\n                </div>\n            </div>\n\n            {pageNumber === 1 &&\n            <div className=\"register-page-one\">\n                <div ref={ref2} className=\"title\">\n                    {t(\"aboutDoctor\")}\n                </div>\n\n                <div className=\"des\">\n                    {t(\"doctorDes\")}\n                </div>\n\n                <div className=\"logo-hospital\">\n                    <div className={`logo-image ${logoValidate ? \"required-logo\" : \"\"}`}>\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\n                        }\n                    </div>\n\n                    {!logoHospital && <div className=\"label\">\n                        {t(\"addImage\")}\n                        <input onChange={getInputPhoto} type=\"file\"/>\n                    </div>}\n\n                    {logoHospital && <div onClick={() => setLogoHospital(null)} className=\"label\">\n                        {t(\"delImage\")}\n                        <img src=\"./images/cancel.png\" alt=\"\"/>\n                    </div>}\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField error={formOne.errors.last_name === \"Required\"}\n                                   value={formOne.values.last_name}\n                                   onChange={formOne.handleChange}\n                                   name=\"last_name\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label={t(\"lastName\")} variant=\"outlined\" className=\"textField\"/>\n\n                    </div>\n                    <div className=\"select-sides\">\n                        <TextField error={formOne.errors.first_name === \"Required\"}\n                                   value={formOne.values.first_name}\n                                   onChange={formOne.handleChange}\n                                   name=\"first_name\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label={t(\"firstName\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField error={formOne.errors.middle_name === \"Required\"}\n                                   value={formOne.values.middle_name}\n                                   onChange={formOne.handleChange}\n                                   name=\"middle_name\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label={t(\"surname\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                    <div className=\"select-sides\">\n\n                    </div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">{t(\"gender2\")}</div>\n                    <div className=\"sides\">\n\n                    </div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <div className=\"on-of\">\n                            <div onClick={() => setInvalidService(true)} className={`of ${invalidService ? \"on\" : \"\"}`}>\n                                {t(\"men\")}\n                            </div>\n                            <div onClick={() => setInvalidService(false)}\n                                 className={`of ${!invalidService ? \"on\" : \"\"}`}>\n                                {t(\"women\")}\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"select-sides\">\n                        <TextField\n                            error={formOne.errors.phone1 === \"Required\"}\n                            value={formOne.values.phone1}\n                            onChange={formOne.handleChange}\n                            name=\"phone1\"\n                            type=\"number\"\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                            label={t(\"phone\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        <div className=\"label-bold\">{t(\"reception\")}</div>\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\n                            <InputLabel id=\"demo-multiple-checkbox-label\">{t(\"working_days\")}</InputLabel>\n                            <Select\n                                error={formOne.errors.working_days === \"Required\"}\n                                name=\"working_days\"\n                                labelid=\"demo-multiple-checkbox-label\"\n                                id=\"demo-multiple-checkbox\"\n                                multiple\n                                value={sessionStorage.getItem(\"weekend\") && JSON.parse(sessionStorage.getItem(\"weekend\")) || weekend}\n                                onChange={handleChangeMore}\n                                input={<OutlinedInput label={t(\"working_days\")}/>}\n                                renderValue={(selected) => selected.join(', ')}\n                                MenuProps={MenuProps}\n                            >\n                                {daysList.map((item, index) => (\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\n                                        <Checkbox\n                                            checked={sessionStorage.getItem(\"weekend\") && JSON.parse(sessionStorage.getItem(\"weekend\")).indexOf(item.translations[i18next.language].day) > -1}/>\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"select-sides\">\n                    </div>\n                </div>\n\n                <div className=\"select-box-working-time\">\n                    <div className=\"select-sides\">\n                        <label htmlFor=\"\">{t(\"start_time\")}</label>\n                        <input\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.values.start_time}\n                            type=\"time\"/>\n                    </div>\n                    <div className=\"select-sides\">\n                        <label htmlFor=\"\">{t(\"end_time\")}</label>\n                        <input\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.values.end_time}\n                            type=\"time\"/>\n                    </div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        <div className=\"label-bold\">{t(\"contact_label\")}</div>\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        {t(\"social_media\")}\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"inputs-box-link\">\n\n                    {socialMedias.map((item, index) => {\n                        return <div key={index} className=\"inputs-social-media\">\n\n                            {item.key === \"telegram\" && <img src=\"./images/social-media/telegram.png\" alt=\"\"/>}\n                            {item.key === \"web\" && <img src=\"./images/social-media/web.png\" alt=\"\"/>}\n                            {item.key === \"instagram\" && <img src=\"./images/social-media/instagram.png\" alt=\"\"/>}\n                            {item.key === \"facebook\" && <img src=\"./images/social-media/facebook.png\" alt=\"\"/>}\n                            {item.key === \"youtube\" && <img src=\"./images/social-media/youtube.png\" alt=\"\"/>}\n                            {item.key === \"tiktok\" && <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>}\n\n                            <TextField onChange={(e) => item.url = e.target.value} sx={{m: 1, minWidth: \"43%\"}}\n                                       size=\"small\"\n                                       id=\"outlined-basic\"\n                                       label=\"https://\" variant=\"outlined\" className=\"textField\"/>\n\n                            {socialMedias.length > 1 && index !== 0 &&\n                            <div onClick={() => delSocialMedia(index, item.key)} className=\"del-icon\"><img\n                                src=\"./images/del-icon.png\" alt=\"\"/></div>}\n                        </div>\n                    })}\n                    <div className=\"des\">{t(\"social_des2\")}</div>\n\n                    <div className=\"add-social-media\">\n                        {!tg && <div onClick={() => addSocialMedia(\"telegram\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/telegram.png\" alt=\"\"/>\n                        </div>}\n\n                        {!ins && <div onClick={() => addSocialMedia(\"instagram\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/instagram.png\" alt=\"\"/>\n                        </div>}\n\n                        {!face && <div onClick={() => addSocialMedia(\"facebook\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/facebook.png\" alt=\"\"/>\n                        </div>}\n\n                        {!you && <div onClick={() => addSocialMedia(\"youtube\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/youtube.png\" alt=\"\"/>\n                        </div>}\n\n                        {!tik && <div onClick={() => addSocialMedia(\"tiktok\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>\n                        </div>}\n                    </div>\n\n                    <div className=\"des\">\n                        {t(\"social_des\")}\n                    </div>\n                </div>\n\n                <div className=\"btn-box\">\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\n                        {t(\"next_btn\")}\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>}\n\n            {pageNumber === 2 &&\n            <div className=\"register-page-two\">\n                <div className=\"title\">\n                    {t(\"work_place\")}\n                </div>\n                <div className=\"des\">\n                    {t(\"work_des\")}\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                            <InputLabel id=\"demo-select-large-label\">{t(\"region_register\")}</InputLabel>\n                            <Select\n                                error={region_validate}\n                                labelid=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={region}\n                                label={t(\"region_register\")}\n                                onChange={getHospital}\n                            >\n\n                                {regions.map((item, index) => {\n                                    return <MenuItem key={index} onClick={() => {\n                                        setRegion_validate(false)\n                                        setCenter({lat: item.latitude, lng: item.longitude})\n                                    }} value={index + 1}>{item.name}</MenuItem>\n                                })}\n                            </Select>\n                        </FormControl>\n                    </div>\n\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                            <Autocomplete\n                                disablePortal\n                                error={formOne.errors.hospital === \"Required\"}\n                                name=\"hospital\"\n                                labelid=\"demo-select-small-label\"\n                                size=\"small\"\n                                value={hospitalType}\n                                onChange={(e, value) => {\n                                    formOne.values.hospital = value ? value[0] : null;\n                                    setHospitalType(value)\n                                }}\n                                id=\"combo-box-demo\"\n                                options={hospitalList.map((item) => [item.id, item.translations[i18next.language].name])}\n                                getOptionLabel={(option) => option ? option[1] : \"\"}\n                                isOptionEqualToValue={(option, value) => true}\n                                renderOption={(props, option) => (\n                                    <li {...props}>\n                                        {option[1]}\n                                    </li>\n                                )}\n\n                                renderInput={(params) => <TextField {...params} label={t(\"work_place2\")}/>}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n\n                {\n                    !formOne.values.hospital && <>\n                        <div className=\"label-address\">{t(\"location\")}</div>\n\n                        <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\n                            {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\n                            {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\n                            {!addressLocation && !addressLocationRu && <p>{t(\"map_des\")}</p>}\n                        </div>\n\n                        <div className=\"address-container\">\n                            <GoogleMap\n                                zoom={9}\n                                center={center}\n                                options={options}\n                                onClick={ClicklLocation}\n                                mapContainerClassName=\"map-box\"\n                            >\n                                {selected && (\n                                    <Marker icon={selectAddressIcon} position={selected}/>\n                                )}\n\n                                <div className=\"search-address\">\n                                    <div className=\"places-container\">\n                                        <PlacesAutocomplete setSelected={setSelected}/>\n                                        <img src=\"./images/search.png\" alt=\"\"/>\n                                    </div>\n                                </div>\n                            </GoogleMap>\n                        </div>\n                    </>\n                }\n\n                <div className=\"btn-box\">\n                    <div onClick={() => setPageNumber(1)} className=\"prev-btn\">\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\n                        {t(\"prev_btn\")}\n                    </div>\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\n                        {t(\"next_btn\")}\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>}\n\n            {pageNumber === 3 &&\n            <div className=\"register-page-three\">\n                <div className=\"title\">\n                    {t(\"speciality_des\")}\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                            <InputLabel id=\"demo-select-large-label\">{t(\"main_speciality\")}</InputLabel>\n                            <Select\n                                label={t(\"main_speciality\")}\n                                error={formOne.errors.specialty === \"Required\"}\n                                name=\"specialty\"\n                                labelid=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={specialty}\n                                onChange={(e) => {\n                                    formOne.handleChange(e)\n                                    setSpecialty(e.target.value)\n                                    setSubSpecialty([])\n                                    getSubSpecialty(e.target.value);\n                                }}\n                            >\n                                {specialtyList.map((item, index) => {\n                                    return <MenuItem key={item.id}\n                                                     value={item.id}>{item.translations[i18next.language].name}</MenuItem>\n                                })}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\n                            <InputLabel id=\"demo-multiple-checkbox-label\">{t(\"speciality\")}</InputLabel>\n                            <Select\n                                name=\"sub_speciality\"\n                                labelid=\"demo-multiple-checkbox-label\"\n                                id=\"demo-multiple-checkbox\"\n                                multiple\n                                value={subSpecialty}\n                                onChange={handleChangeMoreSpeciality}\n                                input={<OutlinedInput label={t(\"speciality\")}/>}\n                                renderValue={(selected) => selected.join(', ')}\n                                MenuProps={MenuProps}\n                            >\n                                {subSpecialtyList.map((item, index) => (\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].name}>\n                                        <Checkbox\n                                            checked={subSpecialty.indexOf(item.translations[i18next.language].name) > -1}/>\n                                        <ListItemText primary={item.translations[i18next.language].name}/>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField error={formOne.errors.experience === \"Required\"}\n                                   value={formOne.values.experience}\n                                   onChange={formOne.handleChange}\n                                   name=\"experience\"\n                                   type=\"number\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label={t(\"experience_register\")} variant=\"outlined\" className=\"textField\"/>\n\n                    </div>\n                    <div className=\"select-sides\">\n                    </div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField\n                            value={formOne.values.consultation_fee}\n                            onChange={formOne.handleChange}\n                            name=\"consultation_fee\"\n                            sx={{m: 1, minWidth: \"80%\"}} size=\"small\"\n                            id=\"outlined-basic\"\n                            type=\"number\"\n                            label={t(\"consultation_fee\")} variant=\"outlined\" className=\"textField\"/>\n                        <div className=\"price\">UZS</div>\n                    </div>\n                    <div className=\"select-sides\">\n                        <TextField\n                            value={formOne.values.second_consultation_fee}\n                            onChange={formOne.handleChange}\n                            name=\"second_consultation_fee\"\n                            sx={{m: 1, minWidth: \"80%\"}} size=\"small\"\n                            id=\"outlined-basic\"\n                            type=\"number\"\n                            label={t(\"second_consultation_fee\")} variant=\"outlined\" className=\"textField\"/>\n\n                        <div className=\"price\">UZS</div>\n                    </div>\n                </div>\n\n                <div className=\"bottom-validate\">\n                    <div className=\"select-sides\">\n                    </div>\n                    <div className=\"select-sides\">\n                        <div className=\"des-no-validate\">\n                            {t(\"des\")}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"input-for-more-info\">\n                    <div className=\"des-info\">\n                        {t(\"des_bio\")}\n                    </div>\n                    <label htmlFor=\"more-info\">O‘zingiz haqingizda batafsilroq yozing (uz)</label>\n                    <Textarea\n                        error={formOne.errors.bio_uz === \"Required\"}\n                        value={formOne.values.bio_uz}\n                        onChange={formOne.handleChange}\n                        name=\"bio_uz\"\n                        className=\"textarea_bio\"\n                        placeholder=\"Yutuqlaringiz, ta’lim olgan joylaringiz haqida va h.k. \"\n                        sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                    />\n\n                    <label htmlFor=\"more-info\">Напишите больше о себе (ru)</label>\n                    <Textarea\n                        error={formOne.errors.bio_ru === \"Required\"}\n                        value={formOne.values.bio_ru}\n                        onChange={formOne.handleChange}\n                        name=\"bio_ru\"\n                        className=\"textarea_bio\"\n                        placeholder=\"О ваших достижениях, местах обучения и т.д.\"\n                        sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                    />\n                </div>\n\n                <div className=\"btn-box\">\n                    <div onClick={() => setPageNumber(2)} className=\"prev-btn\">\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\n                        {t(\"prev_btn\")}\n                    </div>\n\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\n                        {t(\"success_btn\")}\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>}\n\n        </div>\n    </div>\n};\n\nexport default RegisterHospital","import \"./style.scss\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useMemo, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    TextField, MenuItem, InputLabel, FormControl, Select, Checkbox, OutlinedInput,\n    ListItemText\n} from \"@mui/material\";\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport Loader from \"../../loader/Loader\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {useFormik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\n\nconst libraries = [\"places\"];\n\n\nconst RegisterPharmacies = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [workingTime24, setWorkingTime24] = useState(false);\n    const [selected, setSelected] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [center, setCenter] = useState(null);\n    const [addressLocation, setAddressLocation] = useState(\"\");\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\n    const [address_validate, setAddress_validate] = useState(false);\n    const [region, setRegion] = useState(\"\");\n    const [region_validate, setRegion_validate] = useState(false);\n    const [logoHospital, setLogoHospital] = useState(null);\n    const [weekend, setWeekend] = useState([]);\n    const [logoValidate, setLogoValidate] = useState(false);\n    const ref2 = useRef(null);\n    const [daysList, setDaysList] = useState([]);\n    const dispatch = useDispatch();\n    const [loader, setLoader] = useState(false);\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    const selectAddressIcon = {\n        url: \"./images/address.png\",\n        scaledSize: {width: 40, height: 50},\n    };\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false,\n        }),\n        []\n    );\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.nameUz) {\n            errors.nameUz = \"Required\";\n        }\n\n        if (!values.nameRu) {\n            errors.nameRu = \"Required\";\n        }\n\n        if (!values.phone1) {\n            errors.phone1 = \"Required\";\n        } else if (isNaN(Number(values.phone1))) {\n            errors.phone1 = \"Required\";\n        }\n\n        if (!values.phone2) {\n            errors.phone2 = \"Required\";\n        } else if (isNaN(Number(values.phone2))) {\n            errors.phone2 = \"Required\";\n        }\n\n        if (!values.working_days.length > 0) {\n            errors.working_days = \"Required\";\n        }\n\n        if (!workingTime24 && !values.start_time) {\n            errors.start_time = \"Required\";\n        }\n\n        if (!workingTime24 && !values.end_time) {\n            errors.end_time = \"Required\";\n        }\n\n        return errors;\n    };\n\n    const formOne = useFormik({\n        initialValues: {\n            nameUz: \"\",\n            nameRu: \"\",\n            hospital_type: \"\",\n            phone1: \"\",\n            phone2: \"\",\n            start_time: null,\n            end_time: null,\n            working_days: [],\n        },\n        validate,\n        onSubmit: (values) => {\n            if (logoHospital) {\n                axios.post(`${baseUrl}checkuser/`, {phone: values.phone1}).then((response) => {\n\n                }).catch((error) => {\n                    if (error.response.status === 302) {\n                        let idAlert = Date.now();\n                        let alert = {\n                            id: idAlert,\n                            text: \"Ushbu raqam ro'yxatdan o'tgan!\",\n                            img: \"./images/red.svg\",\n                            color: \"#ffefe7\",\n                        };\n                        dispatch(addAlert(alert));\n                        setTimeout(() => {\n                            dispatch(delAlert(idAlert));\n                        }, 5000);\n                    } else {\n                        setPageNumber(2);\n                    }\n                });\n            } else {\n                ref2.current?.scrollIntoView({\n                    behavior: \"smooth\",\n                });\n                setLogoValidate(true)\n            }\n        },\n    });\n\n    const getInputPhoto = (event) => {\n        setLogoValidate(false);\n        const {target: {files}} = event;\n        const file = files[0];\n\n        function getBase64(file) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                setLogoHospital(reader.result);\n            };\n            reader.onerror = function () {\n                setLogoHospital(null);\n            };\n\n        }\n\n        getBase64(file);\n    };\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            let locMy = {lat: latitude, lng: longitude};\n            setCenter(locMy);\n        });\n\n        axios.get(`${baseUrl}days/`).then((response) => {\n            setDaysList(response.data)\n        }).catch((error) => {\n        });\n    }, []);\n\n    const handleChangeMore = (event) => {\n        const {\n            target: {value},\n        } = event;\n\n        setWeekend(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n\n        let new_list = daysList.filter(day => {\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\n        }).map(day => day.id);\n\n        formOne.values.working_days = new_list\n    };\n\n    const ClicklLocation = (e) => {\n        let latitude = e.latLng.lat();\n        let longitude = e.latLng.lng();\n\n        let locMy = {lat: latitude, lng: longitude};\n\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"uz\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setSelected(locMy);\n            setCenter({lat: latitude, lng: longitude});\n            setAddressLocation(fullAddress)\n            setAddress_validate(false)\n        });\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"ru\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setAddressLocationRu(fullAddress);\n        });\n    };\n\n    const PlacesAutocomplete = ({setSelected}) => {\n        const {\n            ready,\n            value,\n            setValue,\n            suggestions: {status, data},\n            clearSuggestions,\n        } = usePlacesAutocomplete({\n            requestOptions: {\n                language: i18next.language,\n            },\n        });\n\n        const handleSelect = async (address) => {\n            const results = await getGeocode({address});\n            const {lat, lng} = await getLatLng(results[0]);\n            let locMy = {lat, lng};\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\n\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n\n                setSelected(locMy);\n                setCenter({lat, lng});\n                setAddressLocation(fullAddress)\n                setAddress_validate(false)\n            });\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n                setAddressLocationRu(fullAddress);\n            });\n        };\n\n        return (\n            <Combobox onSelect={handleSelect}>\n                <ComboboxInput\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    disabled={!ready}\n                    className=\"combobox-input\"\n                    placeholder={t(\"address_input\")}\n                />\n\n                <div className=\"address-wrapper\">\n                    <div className=\"list-address\">\n                        {status === \"OK\" &&\n                        data.map(({place_id, description}) => (\n                            <ComboboxOption key={place_id} value={description}/>\n                        ))}\n                    </div>\n                </div>\n            </Combobox>\n        );\n    };\n\n    const sendAllInfo = () => {\n        let loc = `${center.lat},${center.lng}`;\n        let allInfoHospital = {\n            translations: {\n                uz: {\n                    name: formOne.values.nameUz,\n                    address: addressLocation\n                },\n                ru: {\n                    name: formOne.values.nameRu,\n                    address: addressLocationRu\n                }\n            },\n            base64_image: logoHospital,\n            phone1: formOne.values.phone1,\n            phone2: formOne.values.phone2,\n            start_time: formOne.values.start_time,\n            end_time: formOne.values.end_time,\n            open_24: workingTime24,\n            location: loc,\n            working_days: formOne.values.working_days,\n            region: region\n        };\n        setLoader(true);\n        axios.post(`${baseUrl}auth/register/pharmacy/`, allInfoHospital,\n            {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n            window.location.pathname = \"/profile-pharmacy\";\n            localStorage.setItem(\"profile\", true);\n            setTimeout(() => {\n                setLoader(false)\n            }, 500);\n        }).catch((error) => {\n            setLoader(false);\n        });\n    };\n\n    if (!isLoaded) return <Loader/>;\n    if (loader) return <Loader/>;\n    return <div className=\"register-pharmacies-container\">\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n        <div className=\"xbtn\">\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n        </div>\n        <div className=\"register-page\">\n            <div className=\"header-register\">\n                <div className=\"line-page-numbers\">\n                    <div\n                        className={`line ${pageNumber === 1 || pageNumber === 2  ? \"line-active\" : \"\"}`}></div>\n                    <div\n                        className={`num ${pageNumber === 1 || pageNumber === 2 ? \"num-active\" : \"\"}`}>\n                        1\n                        <div className={`name ${pageNumber === 1 || pageNumber === 2 ? \"active-name\" : \"\"}`}>\n                            {t(\"about_pharma\")}\n                        </div>\n                    </div>\n\n                    <div className={`line ${pageNumber === 2 ? \"line-active\" : \"\"}`}></div>\n                    <div className={`num ${pageNumber === 2 ? \"num-active\" : \"\"}`}>\n                        2\n                        <div className={`name ${pageNumber === 2 ? \"active-name\" : \"\"}`}>\n                            {t(\"location_pharma\")}\n                        </div>\n                    </div>\n                    <div className={`line ${pageNumber === 2 ? \"line-active\" : \"\"}`}></div>\n                </div>\n                <div onClick={() => navigate(\"/register\")} className=\"prev-mobile\">\n                    <img src=\"./images/arrow.png\" alt=\"\"/>\n                </div>\n            </div>\n\n            {pageNumber === 1 &&\n            <div className=\"register-page-one\">\n                <div ref={ref2} className=\"title\">\n                    {t(\"pharma_title\")}\n                </div>\n                <div className=\"des\">\n                    {t(\"pharma_des\")}\n                </div>\n                <div className=\"logo-hospital\">\n                    <div className={`logo-image ${logoValidate ? \"required-logo\" : \"\"}`}>\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\n                        }\n                    </div>\n\n                    {!logoHospital && <div className=\"label\">\n                        {t(\"addImage\")}\n                        <input onChange={getInputPhoto} type=\"file\"/>\n                    </div>}\n\n                    {logoHospital && <div onClick={() => setLogoHospital(null)} className=\"label\">\n                        {t(\"delImage\")}\n                        <img src=\"./images/cancel.png\" alt=\"\"/>\n                    </div>}\n                </div>\n\n                <div className=\"inputs-box\">\n                    <TextField error={formOne.errors.nameUz === \"Required\"}\n                               value={formOne.nameUz}\n                               onChange={formOne.handleChange}\n                               name=\"nameUz\"\n                               sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                               id=\"outlined-basic\"\n                               label=\"Dorixona nomini kiriting (uz) \" variant=\"outlined\" className=\"textField\"/>\n                </div>\n\n                <div className=\"inputs-box\">\n                    <TextField error={formOne.errors.nameRu === \"Required\"} value={formOne.nameRu}\n                               onChange={formOne.handleChange}\n                               name=\"nameRu\" sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                               id=\"outlined-basic\"\n                               label=\"Введите название аптеки (ru) \" variant=\"outlined\" className=\"textField\"/>\n                </div>\n\n                <div className=\"des-input\">\n                    {t(\"des_pharma\")}\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        <div className=\"label-bold\">{t(\"working-time\")}</div>\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\n                            <InputLabel id=\"demo-multiple-checkbox-label\">{t(\"working_days\")}</InputLabel>\n                            <Select\n                                error={formOne.errors.working_days === \"Required\"}\n                                name=\"working_days\"\n                                labelId=\"demo-multiple-checkbox-label\"\n                                id=\"demo-multiple-checkbox\"\n                                multiple\n                                value={weekend}\n                                onChange={handleChangeMore}\n                                input={<OutlinedInput label={t(\"working_days\")}/>}\n                                renderValue={(selected) => selected.join(', ')}\n                                MenuProps={MenuProps}\n                            >\n                                {daysList.map((item, index) => (\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\n                                        <Checkbox\n                                            checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"select-sides\">\n                        <div className=\"check-box\">\n                            <div className=\"checkbox-wrapper-13\">\n                                <input\n                                    onChange={(e) => {\n                                        setWorkingTime24((prevState) => !prevState);\n                                    }}\n                                    id=\"c1-13\"\n                                    type=\"checkbox\"\n                                />\n                            </div>\n                            <label htmlFor=\"c1-13\">\n                                {t(\"open24_register\")}\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                {workingTime24 ? \"\" : <div className=\"select-box-working-time\">\n                    <div className=\"select-sides\">\n                        <label htmlFor=\"\">{t(\"start_time\")}</label>\n                        <input\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.start_time}\n                            type=\"time\"/>\n                    </div>\n                    <div className=\"select-sides\">\n                        <label htmlFor=\"\">{t(\"end_time\")}</label>\n                        <input\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.end_time} type=\"time\"/>\n                    </div>\n                </div>}\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        <div className=\"label-bold\">{t(\"contact_pharma\")}</div>\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField\n                            error={formOne.errors.phone1 === \"Required\"}\n                            value={formOne.phone1}\n                            onChange={formOne.handleChange}\n                            name=\"phone1\"\n                            type=\"number\"\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                            label={t(\"phone1\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                    <div className=\"select-sides\">\n                        <TextField\n                            error={formOne.errors.phone2 === \"Required\"}\n                            value={formOne.phone2}\n                            onChange={formOne.handleChange}\n                            name=\"phone2\"\n                            type=\"number\"\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                            label={t(\"phone2\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                </div>\n\n                <div className=\"btn-box\">\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\n                        {t(\"next_btn\")}\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>}\n\n\n            {pageNumber === 2 &&\n            <div className=\"register-page-two\">\n                <div className=\"title\">\n                    {t(\"pharma_loc\")}\n                </div>\n                <div className=\"des\">\n                    {t(\"pharma_loc_des\")}\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                            <InputLabel id=\"demo-select-large-label\">{t(\"region_register\")}</InputLabel>\n                            <Select\n                                error={region_validate}\n                                labelId=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={region}\n                                label={t(\"region_register\")}\n                                onChange={(e) => setRegion(e.target.value)}\n                            >\n\n                                {regions.map((item, index) => {\n                                    return <MenuItem key={index} onClick={() => {\n                                        setRegion_validate(false)\n                                        setCenter({lat: item.latitude, lng: item.longitude})\n                                    }} value={index + 1}>{item.name}</MenuItem>\n                                })}\n\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n                <div className=\"label-address\">{t(\"location\")}</div>\n                <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\n                    {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\n                    {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\n                    {!addressLocation && !addressLocationRu && <p>{t(\"map_des\")}</p>}\n                </div>\n                <div className=\"address-container\">\n                    <GoogleMap\n                        zoom={9}\n                        center={center}\n                        options={options}\n                        onClick={ClicklLocation}\n                        mapContainerClassName=\"map-box\"\n                    >\n                        {selected && (\n                            <Marker icon={selectAddressIcon} position={selected}/>\n                        )}\n\n                        <div className=\"search-address\">\n                            <div className=\"places-container\">\n                                <PlacesAutocomplete setSelected={setSelected}/>\n                                <img src=\"./images/search.png\" alt=\"\"/>\n                            </div>\n                        </div>\n                    </GoogleMap>\n                </div>\n                <div className=\"btn-box\">\n                    <div onClick={() => setPageNumber(1)} className=\"prev-btn\">\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\n                        {t(\"prev_btn\")}\n                    </div>\n                    <div onClick={sendAllInfo} className=\"next-page-btn\">\n                        {t(\"success_btn\")}\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>}\n        </div>\n    </div>\n};\n\nexport default RegisterPharmacies","import Navbar from \"../navbar/Navbar\";\nimport Footer from \"../footer/Footer\";\nimport \"./style-services.scss\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {useTranslation} from \"react-i18next\";\nimport i18next from \"i18next\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\nimport {getClinics} from \"../../redux/clinics\";\nimport {changeMenu} from \"../../redux/menu\";\nimport {useNavigate} from \"react-router-dom\";\nimport AdvertBox from \"../adverts/AdvertBox\";\n\nconst Service = () => {\n    const dispatch = useDispatch();\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [services, setServices] = useState([]);\n\n    useEffect(() => {\n        axios.get(`${baseUrl}services/`).then((response) => {\n            setServices(response.data);\n        });\n    }, []);\n\n    const filterHospital = (id) => {\n        axios.post(`${baseUrl}filter-hospital/`, {sub_service: id}).then((response) => {\n            dispatch(getClinics(response.data));\n            dispatch(changeMenu(true));\n            navigate(\"/\")\n        });\n    };\n\n    return <div className=\"service-container\">\n        <AdvertBox/>\n        <Navbar/>\n        <div className=\"service-box\">\n            <div className=\"title\">\n                {t(\"nav4\")}\n            </div>\n\n            <div className=\"services-tab\">\n                {\n                    services.map((item, index) => {\n                        return <div key={index}>\n                            <div className=\"category-name\">\n                                {item.translations[i18next.language].name} <span></span> {item.hospital_count}\n                            </div>\n                        </div>\n                    })\n                }\n            </div>\n            {services.map((item, index) => {\n                return <div key={index} className=\"service-content\">\n                    <div className=\"title-service\">\n                        {item.translations[i18next.language].name} <span></span>\n                        <div className=\"num\">\n                            {console.log(item)}\n                            {item.hospital_count}\n                        </div>\n                    </div>\n\n                    <div className=\"services\">\n                        {item.sub_service_list.map((item, index) => {\n                            return <div onClick={() => filterHospital(item.id)} key={index} className=\"service\">\n                                {item.translations[i18next.language].name}\n                            </div>\n                        })}\n                    </div>\n                </div>\n            })}\n        </div>\n        <div className=\"mobile-navbar-container\">\n            <MobileNavbar/>\n        </div>\n        <Footer/>\n    </div>\n};\n\nexport default Service","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import \"./style.scss\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useMemo, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    TextField,\n    MenuItem,\n    InputLabel,\n    FormControl,\n    Select,\n    Checkbox,\n    OutlinedInput,\n    ListItemText,\n    Autocomplete\n} from \"@mui/material\";\nimport {GoogleMap, MarkerF, useLoadScript} from \"@react-google-maps/api\";\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport Loader from \"../../loader/Loader\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\nimport {useFormik} from \"formik\";\nimport Textarea from '@mui/joy/Textarea';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\n\nconst libraries = [\"places\"];\n\n\nconst ProfileDoctor = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const cyrillicToTranslit = new CyrillicToTranslit();\n    const [hospitalType, setHospitalType] = useState('');\n    const [invalidService, setInvalidService] = useState(true);\n    const [selected, setSelected] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [center, setCenter] = useState({lat: 41.295695, lng: 69.239730});\n    const [socialMedias, setSocialMedias] = useState([{key: \"web\", url: \"\"}]);\n    const [addressLocation, setAddressLocation] = useState(\"\");\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\n    const [address_validate, setAddress_validate] = useState(false);\n    const [weekend, setWeekend] = useState([]);\n    const [subSpecialty, setSubSpecialty] = useState([]);\n    const [daysList, setDaysList] = useState([])\n    const [region, setRegion] = useState(\"\");\n    const [region_validate, setRegion_validate] = useState(false);\n    const [logoHospital, setLogoHospital] = useState(null);\n    const [specialty, setSpecialty] = useState(\"\");\n    const [specialtyList, setSpecialtyList] = useState([]);\n    const [subSpecialtyList, setSubSpecialtyList] = useState([]);\n    const [hospitalList, setHospitalList] = useState([]);\n\n    const [tg, setTg] = useState(false);\n    const [ins, setIns] = useState(false);\n    const [face, setFace] = useState(false);\n    const [you, setYou] = useState(false);\n    const [tik, setTik] = useState(false);\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false,\n        }),\n        []\n    );\n    const selectAddressIcon = {\n        url: \"./images/address.png\",\n        scaledSize: {width: 40, height: 50},\n    };\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.first_name) {\n            errors.first_name = \"Required\";\n        }\n\n        if (!values.last_name) {\n            errors.last_name = \"Required\";\n        }\n\n        if (!values.middle_name) {\n            errors.middle_name = \"Required\";\n        }\n\n        if (!values.bio_uz && pageNumber === 3) {\n            errors.bio_uz = \"Required\";\n        }\n\n        if (!values.bio_ru && pageNumber === 3) {\n            errors.bio_ru = \"Required\";\n        }\n\n        if (!values.start_time) {\n            errors.start_time = \"Required\";\n        }\n\n        if (!values.end_time) {\n            errors.end_time = \"Required\";\n        }\n\n        if (!values.specialty) {\n            errors.specialty = \"Required\";\n        }\n\n        if (!values.experience && pageNumber === 3) {\n            errors.experience = \"Required\";\n        }\n\n        if (!values.working_days.length > 0) {\n            errors.working_days = \"Required\";\n        }\n\n        return errors;\n    };\n\n    const formOne = useFormik({\n        initialValues: {\n            first_name: \"\",\n            last_name: \"\",\n            middle_name: \"\",\n            bio_uz: \"\",\n            bio_ru: \"\",\n            phone1: \"\",\n            start_time: \"\",\n            end_time: \"\",\n            working_days: [],\n            consultation_fee: \"\",\n            second_consultation_fee: \"\",\n            specialty: \"\",\n            hospital: \"\",\n            sub_speciality: [],\n            experience: \"\"\n        },\n        validate,\n        onSubmit: (values) => {\n            sendAllInfo()\n        },\n    });\n\n    const getInformation = () => {\n        axios.get(`${baseUrl}doctor-profile/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }\n        ).then((response) => {\n\n            formOne.setValues({\n                first_name: response.data.translations[i18next.language].first_name,\n                last_name: response.data.translations[i18next.language].last_name,\n                middle_name: response.data.translations[i18next.language].middle_name,\n                bio_uz: response.data.translations[\"uz\"].bio,\n                bio_ru: response.data.translations[\"ru\"].bio,\n                phone1: response.data.phone,\n                start_time: response.data.start_time,\n                end_time: response.data.end_time,\n                working_days: response.data.working_days,\n                consultation_fee: response.data.consultation_fee,\n                second_consultation_fee: response.data.second_consultation_fee,\n                specialty: response.data.specialty,\n                hospital: response.data.hospital,\n                sub_speciality: response.data.sub_speciality,\n                experience: response.data.experience\n            });\n\n            localStorage.setItem(\"nameUz\", response.data.translations[\"uz\"].first_name + \" \"\n                + response.data.translations[\"uz\"].last_name)\n\n            localStorage.setItem(\"nameRu\", response.data.translations[\"ru\"].first_name + \" \"\n                + response.data.translations[\"ru\"].last_name)\n\n            setSocialMedias(response.data.doctor_socials)\n            response.data.doctor_socials.map((item, index) => {\n                if (item.key === \"telegram\") setTg(true)\n                if (item.key === \"instagram\") setIns(true)\n                if (item.key === \"facebook\") setFace(true)\n                if (item.key === \"youtube\") setYou(true)\n                if (item.key === \"tiktok\") setTik(true)\n            });\n\n            let week = response.data.working_days\n            axios.get(`${baseUrl}days/`).then((response) => {\n\n                let new_list = response.data.filter(day => {\n                    return day.id && week.includes(day.id);\n                }).map(day => day.translations[i18next.language].day);\n\n                setWeekend(new_list)\n            }).catch((error) => {\n            });\n\n            let newSubSpecialty = response.data.sub_speciality;\n            axios.get(`${baseUrl}speciality/${response.data.specialty}/`).then((response) => {\n                setSubSpecialtyList(response.data)\n                let new_list = response.data.filter(day => {\n                    return day && newSubSpecialty.includes(day.id);\n                }).map(day => day.translations[i18next.language].name);\n\n                setSubSpecialty(new_list)\n            });\n\n            setSpecialty(response.data.specialty)\n\n            setInvalidService(response.data.gender);\n\n            setLogoHospital(`https://api.medos.uz/` + response.data.image)\n\n            setRegion(response.data.region)\n\n            setHospitalType(response.data.hospital ? response.data.hospital : \"\")\n\n            setAddressLocation(response.data.translations[i18next.language].address)\n\n            let location = response.data.location.split(',');\n\n            let locMy = {lat: Number(location[0]), lng: Number(location[1])};\n            setCenter(locMy);\n            setSelected(locMy)\n\n        }).catch((error) => {\n            if (error.response.statusText == \"Unauthorized\") {\n                window.location.pathname = \"/\";\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"userId\");\n            }\n        });\n    }\n\n    useEffect(() => {\n        getInformation()\n        axios.get(`${baseUrl}days/`).then((response) => {\n            setDaysList(response.data)\n        }).catch((error) => {\n        });\n\n        axios.get(`${baseUrl}hospital-short/`).then((response) => {\n            setHospitalList(response.data)\n        }).catch((error) => {\n        });\n\n        axios.get(`${baseUrl}speciality/`).then((response) => {\n            setSpecialtyList(response.data)\n        }).catch((error) => {\n        });\n\n    }, []);\n\n    const getSubSpecialty = (id) => {\n        axios.get(`${baseUrl}speciality/${id}/`).then((response) => {\n            setSubSpecialtyList(response.data)\n        }).catch((error) => {\n        });\n    };\n\n    const handleChangeMore = (event) => {\n        const {\n            target: {value},\n        } = event;\n\n        setWeekend(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n\n        let new_list = daysList.filter(day => {\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\n        }).map(day => day.id);\n\n        formOne.values.working_days = new_list\n    };\n\n    const handleChangeMoreSpeciality = (event) => {\n        const {\n            target: {value},\n        } = event;\n\n        setSubSpecialty(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n\n        let new_list = subSpecialtyList.filter(day => {\n            return day.translations[i18next.language].name && value.includes(day.translations[i18next.language].name);\n        }).map(day => day.id);\n\n        formOne.values.sub_speciality = new_list\n    };\n\n    const getInputPhoto = (event) => {\n        const {target: {files}} = event;\n        const file = files[0];\n\n        function getBase64(file) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                setLogoHospital(reader.result);\n            };\n            reader.onerror = function () {\n                setLogoHospital(null);\n            };\n\n        }\n\n        getBase64(file);\n    };\n\n    const ClicklLocation = (e) => {\n        let latitude = e.latLng.lat();\n        let longitude = e.latLng.lng();\n\n        let locMy = {lat: latitude, lng: longitude};\n\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"uz\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setSelected(locMy);\n            setCenter({lat: latitude, lng: longitude});\n            setAddressLocation(fullAddress)\n            setAddress_validate(false)\n        });\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"ru\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setAddressLocationRu(fullAddress);\n        });\n    };\n\n    const PlacesAutocomplete = ({setSelected}) => {\n        const {\n            ready,\n            value,\n            setValue,\n            suggestions: {status, data},\n            clearSuggestions,\n        } = usePlacesAutocomplete({\n            requestOptions: {\n                language: i18next.language,\n            },\n        });\n\n        const handleSelect = async (address) => {\n            const results = await getGeocode({address});\n            const {lat, lng} = await getLatLng(results[0]);\n            let locMy = {lat, lng};\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\n\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n\n                setSelected(locMy);\n                setCenter({lat, lng});\n                setAddressLocation(fullAddress)\n                setAddress_validate(false)\n            });\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n                setAddressLocationRu(fullAddress);\n            });\n        };\n\n        return (\n            <Combobox onSelect={handleSelect}>\n                <ComboboxInput\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    disabled={!ready}\n                    className=\"combobox-input\"\n                    placeholder={t(\"address_input\")}\n                />\n\n                <div className=\"address-wrapper\">\n                    <div className=\"list-address\">\n                        {status === \"OK\" &&\n                        data.map(({place_id, description}) => (\n                            <ComboboxOption key={place_id} value={description}/>\n                        ))}\n                    </div>\n                </div>\n            </Combobox>\n        );\n    };\n\n    const addSocialMedia = (key) => {\n        if (key === \"telegram\") {\n            setTg(true)\n        }\n        if (key === \"instagram\") {\n            setIns(true)\n        }\n        if (key === \"facebook\") {\n            setFace(true)\n        }\n        if (key === \"tiktok\") {\n            setTik(true)\n        }\n        if (key === \"youtube\") {\n            setYou(true)\n        }\n        let newMedia = {key, url: \"\"};\n        let newArr = socialMedias.concat(newMedia);\n        setSocialMedias(newArr)\n    };\n\n    const delSocialMedia = (ind, key) => {\n        if (key === \"telegram\") {\n            setTg(false)\n        }\n        if (key === \"instagram\") {\n            setIns(false)\n        }\n        if (key === \"facebook\") {\n            setFace(false)\n        }\n        if (key === \"tiktok\") {\n            setTik(false)\n        }\n        if (key === \"youtube\") {\n            setYou(false)\n        }\n\n        let newArr = socialMedias.filter((item, index) => index !== ind);\n        setSocialMedias(newArr)\n    };\n\n    const getHospital = (e) => {\n        setRegion(e.target.value)\n        axios.get(`${baseUrl}hospital-short/?region=${e.target.value}`).then((response) => {\n            setHospitalList(response.data)\n        }).catch((error) => {\n        });\n    };\n\n    const sendAllInfo = () => {\n        let loc = `${center.lat},${center.lng}`;\n        let allInfoHospital = {\n            translations: {\n                uz: {\n                    first_name: cyrillicToTranslit.transform(formOne.values.first_name),\n                    last_name: cyrillicToTranslit.transform(formOne.values.last_name),\n                    middle_name: cyrillicToTranslit.transform(formOne.values.middle_name),\n                    bio: formOne.values.bio_uz,\n                    address: addressLocation\n                },\n                ru: {\n                    first_name: cyrillicToTranslit.reverse(formOne.values.first_name),\n                    last_name: cyrillicToTranslit.reverse(formOne.values.last_name),\n                    middle_name: cyrillicToTranslit.reverse(formOne.values.middle_name),\n                    bio: formOne.values.bio_ru,\n                    address: addressLocationRu\n                }\n            },\n            base64_image: logoHospital,\n            gender: invalidService,\n            phone: formOne.values.phone1,\n            start_time: formOne.values.start_time,\n            end_time: formOne.values.end_time,\n            location: loc,\n            working_days: formOne.values.working_days,\n            socials: socialMedias,\n            region: region,\n            consultation_fee: formOne.values.consultation_fee,\n            second_consultation_fee: formOne.values.second_consultation_fee,\n            specialty: formOne.values.specialty,\n            hospital: formOne.values.hospital,\n            sub_speciality: formOne.values.sub_speciality,\n            experience: formOne.values.experience\n        };\n        console.log(allInfoHospital)\n        axios.post(`${baseUrl}doctor-profile/`, allInfoHospital, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            let idAlert = Date.now();\n            let alert = {\n                id: idAlert,\n                text: t(\"alert_profile\"),\n                img: \"./images/green.svg\",\n                color: \"#EDFFFA\",\n            };\n            dispatch(addAlert(alert));\n            setTimeout(() => {\n                dispatch(delAlert(idAlert));\n            }, 5000);\n            getInformation()\n\n            localStorage.setItem(\"nameUz\", `${response.data.translations[\"uz\"].first_name} ${response.data.translations[\"uz\"].last_name}`);\n            localStorage.setItem(\"nameRu\", `${response.data.translations[\"ru\"].first_name} ${response.data.translations[\"ru\"].last_name}`);\n        }).catch((error) => {\n            console.log(error)\n        });\n    };\n\n    if (!isLoaded) return <Loader/>;\n\n    return <div className=\"profile-doctor-container\">\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n        <div className=\"xbtn\">\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n        </div>\n        <div className=\"register-page\">\n            <div className=\"register-page-one\">\n                <div className=\"title\">\n                    {t(\"profile_title\")}\n                </div>\n                <div className=\"des\">\n                    {t(\"profile_des\")}\n                </div>\n                <div className=\"logo-hospital\">\n                    <div className=\"logo-image\">\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\n                        }\n                    </div>\n                    <div className=\"label\">\n                        {t(\"change_image\")}\n                        <input onChange={getInputPhoto} type=\"file\"/>\n                    </div>\n                </div>\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField error={formOne.errors.last_name === \"Required\"}\n                                   value={formOne.values.last_name}\n                                   onChange={formOne.handleChange}\n                                   name=\"last_name\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label={t(\"lastName\")} variant=\"outlined\" className=\"textField\"/>\n\n                    </div>\n                    <div className=\"select-sides\">\n                        <TextField error={formOne.errors.first_name === \"Required\"}\n                                   value={formOne.values.first_name}\n                                   onChange={formOne.handleChange}\n                                   name=\"first_name\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label={t(\"firstName\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                </div>\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField error={formOne.errors.middle_name === \"Required\"}\n                                   value={formOne.values.middle_name}\n                                   onChange={formOne.handleChange}\n                                   name=\"middle_name\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label={t(\"surname\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                    <div className=\"select-sides\">\n\n                    </div>\n                </div>\n                <div className=\"label-text\">\n                    <div className=\"sides\">{t(\"gender2\")}</div>\n                    <div className=\"sides\">\n                    </div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <div className=\"on-of\">\n                            <div onClick={() => setInvalidService(true)} className={`of ${invalidService ? \"on\" : \"\"}`}>\n                                {t(\"men\")}\n                            </div>\n                            <div onClick={() => setInvalidService(false)}\n                                 className={`of ${!invalidService ? \"on\" : \"\"}`}>\n                                {t(\"women\")}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"select-sides\">\n                        <TextField\n                            error={formOne.errors.phone1 === \"Required\"}\n                            value={formOne.values.phone1}\n                            onChange={formOne.handleChange}\n                            name=\"phone1\"\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                            label={t(\"phone\")} variant=\"outlined\" className=\"textField\"/>\n                    </div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        <div className=\"label-bold\">{t(\"reception\")}</div>\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\n                            <InputLabel id=\"demo-multiple-checkbox-label\">{t(\"working_days\")}</InputLabel>\n                            <Select\n                                error={formOne.errors.working_days === \"Required\"}\n                                name=\"working_days\"\n                                labelId=\"demo-multiple-checkbox-label\"\n                                id=\"demo-multiple-checkbox\"\n                                multiple\n                                value={weekend}\n                                onChange={handleChangeMore}\n                                input={<OutlinedInput label={t(\"working_days\")}/>}\n                                renderValue={(selected) => selected.join(', ')}\n                                MenuProps={MenuProps}\n                            >\n                                {daysList.map((item, index) => (\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\n                                        <Checkbox\n                                            checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"select-sides\">\n                    </div>\n                </div>\n\n                <div className=\"select-box-working-time\">\n                    <div className=\"select-sides\">\n                        <label htmlFor=\"\">{t(\"start_time\")}</label>\n                        <input\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.values.start_time}\n                            type=\"time\"/>\n                    </div>\n                    <div className=\"select-sides\">\n                        <label htmlFor=\"\">{t(\"end_time\")}</label>\n                        <input\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.values.end_time}\n                            type=\"time\"/>\n                    </div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        <div className=\"label-bold\">{t(\"contact_label\")}</div>\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"label-text\">\n                    <div className=\"sides\">\n                        {t(\"social_media\")}\n                    </div>\n                    <div className=\"sides\"></div>\n                </div>\n\n                <div className=\"inputs-box-link\">\n                    {socialMedias.map((item, index) => {\n                        return <div key={index} className=\"inputs-social-media\">\n\n                            {item.key === \"telegram\" && <img src=\"./images/social-media/telegram.png\" alt=\"\"/>}\n                            {item.key === \"web\" && <img src=\"./images/social-media/web.png\" alt=\"\"/>}\n                            {item.key === \"instagram\" && <img src=\"./images/social-media/instagram.png\" alt=\"\"/>}\n                            {item.key === \"facebook\" && <img src=\"./images/social-media/facebook.png\" alt=\"\"/>}\n                            {item.key === \"youtube\" && <img src=\"./images/social-media/youtube.png\" alt=\"\"/>}\n                            {item.key === \"tiktok\" && <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>}\n\n                            <TextField onChange={(e) => {\n                                item.url = e.target.value\n                                let newSocial = [...socialMedias]\n                                setSocialMedias(newSocial)\n                            }} sx={{m: 1, minWidth: \"43%\"}}\n                                       value={item.url}\n                                       size=\"small\"\n                                       id=\"outlined-basic\"\n                                       label=\"https://\" variant=\"outlined\" className=\"textField\"/>\n\n                            {socialMedias.length > 1 && index !== 0 &&\n                            <div onClick={() => delSocialMedia(index, item.key)} className=\"del-icon\"><img\n                                src=\"./images/del-icon.png\" alt=\"\"/></div>}\n                        </div>\n                    })}\n                    <div className=\"des\">{t(\"social_des2\")}</div>\n                    <div className=\"add-social-media\">\n                        {!tg && <div onClick={() => addSocialMedia(\"telegram\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/telegram.png\" alt=\"\"/>\n                        </div>}\n\n                        {!ins && <div onClick={() => addSocialMedia(\"instagram\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/instagram.png\" alt=\"\"/>\n                        </div>}\n\n                        {!face && <div onClick={() => addSocialMedia(\"facebook\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/facebook.png\" alt=\"\"/>\n                        </div>}\n\n                        {!you && <div onClick={() => addSocialMedia(\"youtube\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/youtube.png\" alt=\"\"/>\n                        </div>}\n\n                        {!tik && <div onClick={() => addSocialMedia(\"tiktok\")} className=\"social-mdeia-icon\">\n                            <div className=\"sloy\">\n                                <img src=\"./images/add.png\" alt=\"\"/>\n                            </div>\n                            <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>\n                        </div>}\n                    </div>\n                    <div className=\"des\">\n                        {t(\"social_des\")}\n                    </div>\n                </div>\n            </div>\n            <div className=\"register-page-three\">\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                            <InputLabel id=\"demo-select-large-label\">{t(\"main_speciality\")}</InputLabel>\n                            <Select\n                                label={t(\"main_speciality\")}\n                                error={formOne.errors.specialty === \"Required\"}\n                                name=\"specialty\"\n                                labelId=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={specialty}\n                                onChange={(e) => {\n                                    formOne.handleChange(e)\n                                    setSpecialty(e.target.value)\n                                    setSubSpecialty([])\n                                    getSubSpecialty(e.target.value);\n                                }}\n                            >\n                                {specialtyList.map((item) => {\n                                    return <MenuItem key={item.id}\n                                                     value={item.id}>{item.translations[i18next.language].name}</MenuItem>\n                                })}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\n                            <InputLabel id=\"demo-multiple-checkbox-label\">{t(\"speciality\")}</InputLabel>\n                            <Select\n                                name=\"sub_speciality\"\n                                labelId=\"demo-multiple-checkbox-label\"\n                                id=\"demo-multiple-checkbox\"\n                                multiple\n                                value={subSpecialty}\n                                onChange={handleChangeMoreSpeciality}\n                                input={<OutlinedInput label={t(\"speciality\")}/>}\n                                renderValue={(selected) => selected.join(', ')}\n                                MenuProps={MenuProps}\n                            >\n                                {subSpecialtyList.map((item, index) => (\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].name}>\n                                        <Checkbox\n                                            checked={subSpecialty.indexOf(item.translations[i18next.language].name) > -1}/>\n                                        <ListItemText primary={item.translations[i18next.language].name}/>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField error={formOne.errors.experience === \"Required\"}\n                                   value={formOne.values.experience}\n                                   onChange={formOne.handleChange}\n                                   name=\"experience\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label={t(\"experience_register\")} variant=\"outlined\" className=\"textField\"/>\n\n                    </div>\n                    <div className=\"select-sides\">\n                    </div>\n                </div>\n\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <TextField\n                            value={formOne.values.consultation_fee}\n                            onChange={formOne.handleChange}\n                            name=\"consultation_fee\"\n                            sx={{m: 1, minWidth: \"80%\"}} size=\"small\"\n                            id=\"outlined-basic\"\n                            label={t(\"consultation_fee\")} variant=\"outlined\" className=\"textField\"/>\n\n                        <div className=\"price\">UZS</div>\n                    </div>\n                    <div className=\"select-sides\">\n                        <TextField\n                            value={formOne.values.second_consultation_fee}\n                            onChange={formOne.handleChange}\n                            name=\"second_consultation_fee\"\n                            sx={{m: 1, minWidth: \"80%\"}} size=\"small\"\n                            id=\"outlined-basic\"\n                            label={t(\"second_consultation_fee\")} variant=\"outlined\" className=\"textField\"/>\n\n                        <div className=\"price\">UZS</div>\n                    </div>\n                </div>\n                <div className=\"bottom-validate\">\n                    <div className=\"select-sides\">\n                    </div>\n                    <div className=\"select-sides\">\n                        <div className=\"des-no-validate\">\n                            {t(\"des\")}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"input-for-more-info\">\n                    <div className=\"des-info\">\n                        {t(\"des_bio\")}\n                    </div>\n                    <label htmlFor=\"more-info\">O‘zingiz haqingizda batafsilroq yozing (uz)</label>\n                    <Textarea\n                        error={formOne.errors.bio_uz === \"Required\"}\n                        value={formOne.values.bio_uz}\n                        onChange={formOne.handleChange}\n                        name=\"bio_uz\"\n                        className=\"textarea_bio\"\n                        placeholder=\"Yutuqlaringiz, ta’lim olgan joylaringiz haqida va h.k. \"\n                        sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                    />\n\n                    <label htmlFor=\"more-info\">Напишите больше о себе (ru)</label>\n                    <Textarea\n                        error={formOne.errors.bio_ru === \"Required\"}\n                        value={formOne.values.bio_ru}\n                        onChange={formOne.handleChange}\n                        name=\"bio_ru\"\n                        className=\"textarea_bio\"\n                        placeholder=\"О ваших достижениях, местах обучения и т.д.\"\n                        sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                    />\n                </div>\n            </div>\n            <div className=\"register-page-two\">\n                <div className=\"select-box\">\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                            <InputLabel id=\"demo-select-large-label\">{t(\"region_register\")}</InputLabel>\n                            <Select\n                                error={region_validate}\n                                labelId=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={region}\n                                label={t(\"region_register\")}\n                                onChange={getHospital}\n                            >\n                                {regions.map((item, index) => {\n                                    return <MenuItem key={index} onClick={() => {\n                                        setRegion_validate(false)\n                                        setCenter({lat: item.latitude, lng: item.longitude})\n                                    }} value={index + 1}>{item.name}</MenuItem>\n                                })}\n                            </Select>\n                        </FormControl>\n                    </div>\n\n                    <div className=\"select-sides\">\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                            <Autocomplete\n                                disablePortal\n                                error={formOne.errors.hospital === \"Required\"}\n                                name=\"hospital\"\n                                labelid=\"demo-select-small-label\"\n                                size=\"small\"\n                                value={hospitalType}\n                                onChange={(e, value) => {\n                                    formOne.values.hospital = value ? value[0] : null;\n                                    setHospitalType(value)\n                                }}\n                                id=\"combo-box-demo\"\n                                options={hospitalList.map((item) => [item.id, item.translations[i18next.language].name])}\n                                getOptionLabel={(option) => option ? option[1] : \"\"}\n                                isOptionEqualToValue={(option, value) => true}\n                                renderOption={(props, option) => (\n                                    <li {...props}>\n                                        {option[1]}\n                                    </li>\n                                )}\n\n                                renderInput={(params) => <TextField {...params} label={t(\"work_place2\")}/>}\n                            />\n                        </FormControl>\n                    </div>\n                </div>\n\n                {\n                    !formOne.values.hospital && <>\n                        <div className=\"label-address\">{t(\"location\")}</div>\n\n                        <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\n                            {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\n                            {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\n                            {!addressLocation && !addressLocationRu && <p>{t(\"map_des\")}</p>}\n                        </div>\n\n                        <div className=\"address-container\">\n                            <GoogleMap\n                                zoom={9}\n                                center={center}\n                                options={options}\n                                onClick={ClicklLocation}\n                                mapContainerClassName=\"map-box\"\n                            >\n                                {selected && (\n                                    <MarkerF icon={selectAddressIcon} position={selected}/>\n                                )}\n\n                                <div className=\"search-address\">\n                                    <div className=\"places-container\">\n                                        <PlacesAutocomplete setSelected={setSelected}/>\n                                        <img src=\"./images/search.png\" alt=\"\"/>\n                                    </div>\n                                </div>\n                            </GoogleMap>\n                        </div>\n                    </>\n                }\n                <div className=\"btn-box\">\n                    <div onClick={() => setPageNumber(2)} className=\"prev-btn\">\n                        {t(\"cancel\")}\n                    </div>\n\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\n                        {t(\"save_edit\")}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n};\n\nexport default ProfileDoctor","import \"./style.scss\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useMemo, useState} from \"react\";\nimport axios from \"axios\";\nimport {useFormik} from \"formik\";\nimport {\n    TextField, MenuItem, InputLabel, FormControl, Select, Checkbox, OutlinedInput,\n    ListItemText\n} from \"@mui/material\";\nimport {GoogleMap, MarkerF, useLoadScript} from \"@react-google-maps/api\";\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport Loader from \"../../loader/Loader\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {delAlert, addAlert} from \"../../../redux/AlertsBox\";\n\n\nconst libraries = [\"places\"];\n\n\nconst ProfileHospital = () => {\n    const navigate = useNavigate();\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n    const [hospital, setHospital] = useState('');\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [hospitalType, setHospitalType] = useState('');\n    const [invalidService, setInvalidService] = useState(true);\n    const [workingTime24, setWorkingTime24] = useState(false);\n    const [selected, setSelected] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [center, setCenter] = useState({lat: 41.295695, lng: 69.239730});\n    const [socialMedias, setSocialMedias] = useState([{key: \"web\", url: \"\"}]);\n    const [service, setService] = useState([\n        {service: \"\", options: [], sub_services_list: [{sub_service: \"\", price: \"\"}]}\n    ]);\n    const [addressLocation, setAddressLocation] = useState(\"\");\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\n    const [address_validate, setAddress_validate] = useState(false);\n    const [weekend, setWeekend] = useState([]);\n    const [region, setRegion] = useState(\"\");\n    const [region_validate, setRegion_validate] = useState(false);\n    const [logoHospital, setLogoHospital] = useState(null);\n    const [daysList, setDaysList] = useState([]);\n    const [hospitalList, setHospitalList] = useState([]);\n    const [serviceList, setServiceList] = useState([]);\n    const [tg, setTg] = useState(false)\n    const [ins, setIns] = useState(false)\n    const [face, setFace] = useState(false)\n    const [you, setYou] = useState(false)\n    const [tik, setTik] = useState(false)\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    const selectAddressIcon = {\n        url: \"./images/address.png\",\n        scaledSize: {width: 40, height: 50},\n    };\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false,\n        }),\n        []\n    );\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.hospital_type) {\n            errors.hospital_type = \"Required\";\n        }\n\n        if (!values.type) {\n            errors.type = \"Required\";\n        }\n\n        if (!values.nameUz) {\n            errors.nameUz = \"Required\";\n        }\n\n        if (!values.nameRu) {\n            errors.nameRu = \"Required\";\n        }\n\n        if (!values.phone1) {\n            errors.phone1 = \"Required\";\n        }\n\n        if (!values.phone2) {\n            errors.phone2 = \"Required\";\n        }\n\n        if (!values.working_days.length > 0) {\n            errors.working_days = \"Required\";\n        }\n\n        if (!workingTime24 && !values.start_time) {\n            errors.start_time = \"Required\";\n        }\n\n        if (!workingTime24 && !values.end_time) {\n            errors.end_time = \"Required\";\n        }\n\n\n        return errors;\n    };\n\n    const formOne = useFormik({\n        initialValues: {\n            nameUz: \"\",\n            nameRu: \"\",\n            type: \"\",\n            hospital_type: \"\",\n            phone1: \"\",\n            phone2: \"\",\n            emergency_number: \"\",\n            start_time: \"\",\n            end_time: \"\",\n            working_days: [],\n        },\n        validate,\n        onSubmit: (values) => {\n            setPageNumber(2);\n        },\n    });\n\n    const getInformation = () => {\n        axios.get(`${baseUrl}hospital-profile/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }\n        ).then((response) => {\n\n            formOne.setValues({\n                nameUz: response.data.translations[\"uz\"].name,\n                nameRu: response.data.translations[\"ru\"].name,\n                type: response.data.type,\n                hospital_type: response.data.hospital_type,\n                phone1: response.data.phone1,\n                phone2: response.data.phone2,\n                emergency_number: response.data.emergency_number,\n                start_time: response.data.start_time,\n                end_time: response.data.end_time,\n                working_days: response.data.working_days,\n            });\n\n            localStorage.setItem(\"nameUz\", response.data.translations[\"uz\"].name)\n            localStorage.setItem(\"nameRu\", response.data.translations[\"ru\"].name)\n\n            setSocialMedias(response.data.hospital_socials)\n            response.data.hospital_socials.map((item, index) => {\n                if (item.key === \"telegram\") setTg(true)\n                if (item.key === \"instagram\") setIns(true)\n                if (item.key === \"facebook\") setFace(true)\n                if (item.key === \"youtube\") setYou(true)\n                if (item.key === \"tiktok\") setTik(true)\n            });\n\n            let week = response.data.working_days\n            axios.get(`${baseUrl}days/`).then((response) => {\n\n                let new_list = response.data.filter(day => {\n                    return day.id && week.includes(day.id);\n                }).map(day => day.translations[i18next.language].day);\n\n                setWeekend(new_list)\n            }).catch((error) => {\n            });\n\n            setHospital(response.data.type)\n\n            setInvalidService(response.data.gender);\n\n            setLogoHospital(`https://api.medos.uz/` + response.data.image)\n\n            setRegion(response.data.region)\n\n            setHospitalType(response.data.hospital_type)\n\n            setAddressLocation(response.data.translations[i18next.language].address)\n\n            let location = response.data.location.split(',');\n\n            let locMy = {lat: Number(location[0]), lng: Number(location[1])};\n            setCenter(locMy);\n            setSelected(locMy)\n\n            setWorkingTime24(response.data.open_24)\n\n            setService(response.data.hospital_services)\n\n\n        }).catch((error) => {\n            if (error.response.statusText == \"Unauthorized\") {\n                window.location.pathname = \"/\";\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"userId\");\n            }\n        });\n    };\n\n    useEffect(() => {\n        getInformation()\n        axios.get(`${baseUrl}days/`).then((response) => {\n            setDaysList(response.data)\n        }).catch((error) => {\n        });\n\n        axios.get(`${baseUrl}hospital-type/`).then((response) => {\n            setHospitalList(response.data)\n        }).catch((error) => {\n        });\n\n        axios.get(`${baseUrl}speciality/`).then((response) => {\n            setServiceList(response.data)\n        }).catch((error) => {\n        });\n\n    }, []);\n\n    const handleChangeMore = (event) => {\n        const {\n            target: {value},\n        } = event;\n\n        setWeekend(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n\n        let new_list = daysList.filter(day => {\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\n        }).map(day => day.id);\n\n        formOne.values.working_days = new_list\n    };\n\n    const getInputPhoto = (event) => {\n        const {target: {files}} = event;\n        const file = files[0];\n\n        function getBase64(file) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                setLogoHospital(reader.result);\n            };\n            reader.onerror = function () {\n                setLogoHospital(null);\n            };\n\n        }\n\n        getBase64(file);\n    };\n\n    const ClicklLocation = (e) => {\n        let latitude = e.latLng.lat();\n        let longitude = e.latLng.lng();\n\n        let locMy = {lat: latitude, lng: longitude};\n\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"uz\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setSelected(locMy);\n            setCenter({lat: latitude, lng: longitude});\n            setAddressLocation(fullAddress)\n            setAddress_validate(false)\n        });\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"ru\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setAddressLocationRu(fullAddress);\n        });\n    };\n\n    const PlacesAutocomplete = ({setSelected}) => {\n        const {\n            ready,\n            value,\n            setValue,\n            suggestions: {status, data},\n            clearSuggestions,\n        } = usePlacesAutocomplete({\n            requestOptions: {\n                language: i18next.language,\n            },\n        });\n\n        const handleSelect = async (address) => {\n            const results = await getGeocode({address});\n            const {lat, lng} = await getLatLng(results[0]);\n            let locMy = {lat, lng};\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\n\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n\n                setSelected(locMy);\n                setCenter({lat, lng});\n                setAddressLocation(fullAddress)\n                setAddress_validate(false)\n            });\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n                setAddressLocationRu(fullAddress);\n            });\n        };\n\n        return (\n            <Combobox onSelect={handleSelect}>\n                <ComboboxInput\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    disabled={!ready}\n                    className=\"combobox-input\"\n                    placeholder={t(\"address_input\")}\n                />\n\n                <div className=\"address-wrapper\">\n                    <div className=\"list-address\">\n                        {status === \"OK\" &&\n                        data.map(({place_id, description}) => (\n                            <ComboboxOption key={place_id} value={description}/>\n                        ))}\n                    </div>\n                </div>\n            </Combobox>\n        );\n    };\n\n    const addSocialMedia = (key) => {\n        if (key === \"telegram\") {\n            setTg(true)\n        }\n        if (key === \"instagram\") {\n            setIns(true)\n        }\n        if (key === \"facebook\") {\n            setFace(true)\n        }\n        if (key === \"tiktok\") {\n            setTik(true)\n        }\n        if (key === \"youtube\") {\n            setYou(true)\n        }\n        let newMedia = {key, url: \"\"};\n        let newArr = socialMedias.concat(newMedia);\n        setSocialMedias(newArr)\n    };\n\n    const delSocialMedia = (ind, key) => {\n        if (key === \"telegram\") {\n            setTg(false)\n        }\n        if (key === \"instagram\") {\n            setIns(false)\n        }\n        if (key === \"facebook\") {\n            setFace(false)\n        }\n        if (key === \"tiktok\") {\n            setTik(false)\n        }\n        if (key === \"youtube\") {\n            setYou(false)\n        }\n\n        let newArr = socialMedias.filter((item, index) => index !== ind);\n        setSocialMedias(newArr)\n    };\n\n    const addService = () => {\n        let newService = {service: \"\", options: [], sub_services_list: [{sub_service: \"\", price: \"\"}]}\n        let newArr = service.concat(newService);\n        setService(newArr)\n    };\n    const delService = (ind) => {\n        let newArr = service.filter((item, index) => index !== ind);\n        setService(newArr)\n    };\n    const sendAllInfo = () => {\n        let loc = `${center.lat},${center.lng}`\n        let allInfoHospital = {\n            translations: {\n                uz: {\n                    name: formOne.values.nameUz,\n                    address: addressLocation\n                },\n                ru: {\n                    name: formOne.values.nameRu,\n                    address: addressLocationRu\n                }\n            },\n            base64_image: logoHospital,\n            disabled: invalidService,\n            type: formOne.values.type,\n            hospital_type: formOne.values.hospital_type,\n            phone1: formOne.values.phone1,\n            phone2: formOne.values.phone2,\n            emergency_number: formOne.values.emergency_number,\n            start_time: formOne.values.start_time,\n            end_time: formOne.values.end_time,\n            open_24: workingTime24,\n            location: loc,\n            working_days: formOne.values.working_days,\n            services: service,\n            socials: socialMedias,\n            region: region\n        }\n        axios.post(`${baseUrl}hospital-profile/`, allInfoHospital, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            let idAlert = Date.now();\n            let alert = {\n                id: idAlert,\n                text: t(\"alert_profile\"),\n                img: \"./images/green.svg\",\n                color: \"#EDFFFA\",\n            };\n            dispatch(addAlert(alert));\n            setTimeout(() => {\n                dispatch(delAlert(idAlert));\n            }, 5000);\n\n            getInformation()\n        }).catch((error) => {\n        });\n    };\n\n    if (!isLoaded) return <Loader/>;\n\n    return <div className=\"profile-hospital-container\">\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n        <div className=\"xbtn\">\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n        </div>\n        <div className=\"register-page\">\n\n            <div className=\"title\">\n                {t(\"profile_title\")}\n            </div>\n            <div className=\"des\">\n                {t(\"profile_des\")}\n            </div>\n            <div className=\"header\">\n                <div onClick={() => setPageNumber(1)} className={`item-menu ${pageNumber === 1 ? \"active\" : \"\"}`}>\n                    {t(\"all_info\")}\n                </div>\n                <div onClick={() => setPageNumber(2)}\n                     className={`item-menu ${pageNumber === 2 ? \"active\" : \"\"}`}>\n                    {t(\"nav4\")}\n                </div>\n            </div>\n\n            {pageNumber === 1 &&\n            <>\n                <div className=\"register-page-one\">\n                    <div className=\"logo-hospital\">\n                        <div className=\"logo-image\">\n                            {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\n                                <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\n                            }\n                        </div>\n                        <div className=\"label\">\n                            {t(\"change_image\")}\n                            <input onChange={getInputPhoto} type=\"file\"/>\n                        </div>\n                    </div>\n\n                    <div className=\"inputs-box\">\n                        <TextField error={formOne.errors.nameUz === \"Required\"}\n                                   value={formOne.values.nameUz}\n                                   onChange={formOne.handleChange}\n                                   name=\"nameUz\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label=\"Shifoxona nomini kiriting (uz) \" variant=\"outlined\" className=\"textField\"/>\n                    </div>\n\n                    <div className=\"inputs-box\">\n                        <TextField error={formOne.errors.nameRu === \"Required\"} value={formOne.values.nameRu}\n                                   onChange={formOne.handleChange}\n                                   name=\"nameRu\" sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label=\"Введите название больницы (ru) \" variant=\"outlined\" className=\"textField\"/>\n                    </div>\n\n                    <div className=\"des-input\">\n                        {t(\"name_des\")}\n                    </div>\n\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                         className=\"selectMui\">\n                                <InputLabel id=\"demo-select-large-label\">{t(\"clinic\")}</InputLabel>\n                                <Select\n                                    error={formOne.errors.type === \"Required\"}\n                                    name=\"type\"\n                                    labelId=\"demo-select-small-label\"\n                                    id=\"demo-select-small\"\n                                    value={hospital}\n                                    label={t(\"clinic\")}\n                                    onChange={(e) => {\n                                        formOne.handleChange(e);\n                                        setHospital(e.target.value)\n                                    }}\n                                >\n                                    <MenuItem value={1}>\n                                        {t(\"hospital_type1\")}\n                                    </MenuItem>\n                                    <MenuItem value={2}>\n                                        {t(\"hospital_type2\")}\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className=\"select-sides\">\n                        </div>\n                    </div>\n\n                    <div className=\"label-text\">\n                        <div className=\"sides\"></div>\n                        <div className=\"sides\">{t(\"disable\")}</div>\n                    </div>\n\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                         className=\"selectMui\">\n                                <InputLabel id=\"demo-select-large-label\">{t(\"hospital_type\")}</InputLabel>\n                                <Select\n                                    error={formOne.errors.hospital_type === \"Required\"}\n                                    name=\"hospital_type\"\n                                    labelId=\"demo-select-small-label\"\n                                    id=\"demo-select-small\"\n                                    value={hospitalType}\n                                    label={t(\"hospital_type\")}\n                                    onChange={(e) => {\n                                        formOne.handleChange(e);\n                                        setHospitalType(e.target.value)\n                                    }}\n                                >\n                                    {hospitalList.map((item) => {\n                                        return <MenuItem key={item.id} value={item.id}>\n                                            {item.translations[i18next.language].name}\n                                        </MenuItem>\n                                    })}\n\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className=\"select-sides\">\n                            <div className=\"on-of\">\n                                <div onClick={() => setInvalidService(true)}\n                                     className={`of ${invalidService ? \"on\" : \"\"}`}>\n                                    Mavjud\n                                </div>\n                                <div onClick={() => setInvalidService(false)}\n                                     className={`of ${!invalidService ? \"on\" : \"\"}`}>\n                                    Mavjud emas\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"label-text\">\n                        <div className=\"sides\">\n                            <div className=\"label-bold\">{t(\"working-time\")}</div>\n                        </div>\n                        <div className=\"sides\"></div>\n                    </div>\n\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\n                                <InputLabel id=\"demo-multiple-checkbox-label\">{t(\"working_days\")}</InputLabel>\n                                <Select\n                                    error={formOne.errors.working_days === \"Required\"}\n                                    name=\"working_days\"\n                                    labelId=\"demo-multiple-checkbox-label\"\n                                    id=\"demo-multiple-checkbox\"\n                                    multiple\n                                    value={weekend}\n                                    onChange={handleChangeMore}\n                                    input={<OutlinedInput label={t(\"working_days\")}/>}\n                                    renderValue={(selected) => selected.join(', ')}\n                                    MenuProps={MenuProps}\n                                >\n                                    {daysList.map((item) => (\n                                        <MenuItem key={item.id} value={item.translations[i18next.language].day}>\n                                            <Checkbox\n                                                checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\n                                            <ListItemText primary={item.translations[i18next.language].day}/>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div className=\"select-sides\">\n                            <div className=\"check-box\">\n                                <div className=\"checkbox-wrapper-13\">\n                                    <input\n                                        onChange={(e) => {\n                                            setWorkingTime24((prevState) => !prevState);\n                                        }}\n                                        checked={workingTime24}\n                                        id=\"c1-13\"\n                                        type=\"checkbox\"\n                                    />\n                                </div>\n                                <label htmlFor=\"c1-13\">\n                                    {t(\"open24_register\")}\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n                    {workingTime24 ? \"\" : <div className=\"select-box-working-time\">\n                        <div className=\"select-sides\">\n                            <label htmlFor=\"\">{t(\"start_time\")}</label>\n                            <input\n                                className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                                name=\"start_time\" onChange={formOne.handleChange} value={formOne.values.start_time}\n                                type=\"time\"/>\n                        </div>\n                        <div className=\"select-sides\">\n                            <label htmlFor=\"\">{t(\"end_time\")}</label>\n                            <input\n                                className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                                name=\"end_time\" onChange={formOne.handleChange} value={formOne.values.end_time}\n                                type=\"time\"/>\n                        </div>\n                    </div>}\n\n                    <div className=\"label-text\">\n                        <div className=\"sides\">\n                            <div className=\"label-bold\">{t(\"contact_des\")}</div>\n                        </div>\n                        <div className=\"sides\"></div>\n                    </div>\n\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <TextField\n                                error={formOne.errors.phone1 === \"Required\"}\n                                value={formOne.values.phone1}\n                                onChange={formOne.handleChange}\n                                name=\"phone1\"\n                                sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                                label={t(\"phone1\")} variant=\"outlined\" className=\"textField\"/>\n                        </div>\n                        <div className=\"select-sides\">\n                            <TextField\n                                error={formOne.errors.phone2 === \"Required\"}\n                                value={formOne.values.phone2}\n                                onChange={formOne.handleChange}\n                                name={t(\"phone2\")}\n                                sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                                label=\"Telefon raqam 2\" variant=\"outlined\" className=\"textField\"/>\n                        </div>\n                    </div>\n\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <TextField\n                                value={formOne.values.emergency_number}\n                                onChange={formOne.handleChange}\n                                name=\"emergency_number\"\n                                sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                                label={t(\"phone3\")} variant=\"outlined\" className=\"textField\"/>\n                        </div>\n                        <div className=\"select-sides\">\n                        </div>\n                    </div>\n                    <div className=\"des-input\">\n                        {t(\"phone3_des\")}\n                    </div>\n\n                    <div className=\"label-text\">\n                        <div className=\"sides\">\n                            {t(\"social_media\")}\n                        </div>\n                        <div className=\"sides\"></div>\n                    </div>\n\n                    <div className=\"inputs-box-link\">\n                        {socialMedias.map((item, index) => {\n                            return <div key={index} className=\"inputs-social-media\">\n\n                                {item.key === \"telegram\" && <img src=\"./images/social-media/telegram.png\" alt=\"\"/>}\n                                {item.key === \"web\" && <img src=\"./images/social-media/web.png\" alt=\"\"/>}\n                                {item.key === \"instagram\" && <img src=\"./images/social-media/instagram.png\" alt=\"\"/>}\n                                {item.key === \"facebook\" && <img src=\"./images/social-media/facebook.png\" alt=\"\"/>}\n                                {item.key === \"youtube\" && <img src=\"./images/social-media/youtube.png\" alt=\"\"/>}\n                                {item.key === \"tiktok\" && <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>}\n\n                                <TextField onChange={(e) => {\n                                    item.url = e.target.value\n                                    let newSocial = [...socialMedias]\n                                    setSocialMedias(newSocial)\n                                }} sx={{m: 1, minWidth: \"43%\"}}\n                                           value={item.url}\n                                           size=\"small\"\n                                           id=\"outlined-basic\"\n                                           label=\"https://\" variant=\"outlined\" className=\"textField\"/>\n\n                                {socialMedias.length > 1 && index !== 0 &&\n                                <div onClick={() => delSocialMedia(index, item.key)} className=\"del-icon\"><img\n                                    src=\"./images/del-icon.png\" alt=\"\"/></div>}\n                            </div>\n                        })}\n                        <div className=\"des\">{t(\"social_des\")}</div>\n                        <div className=\"add-social-media\">\n                            {!tg && <div onClick={() => addSocialMedia(\"telegram\")} className=\"social-mdeia-icon\">\n                                <div className=\"sloy\">\n                                    <img src=\"./images/add.png\" alt=\"\"/>\n                                </div>\n                                <img src=\"./images/social-media/telegram.png\" alt=\"\"/>\n                            </div>}\n\n                            {!ins && <div onClick={() => addSocialMedia(\"instagram\")} className=\"social-mdeia-icon\">\n                                <div className=\"sloy\">\n                                    <img src=\"./images/add.png\" alt=\"\"/>\n                                </div>\n                                <img src=\"./images/social-media/instagram.png\" alt=\"\"/>\n                            </div>}\n\n                            {!face && <div onClick={() => addSocialMedia(\"facebook\")} className=\"social-mdeia-icon\">\n                                <div className=\"sloy\">\n                                    <img src=\"./images/add.png\" alt=\"\"/>\n                                </div>\n                                <img src=\"./images/social-media/facebook.png\" alt=\"\"/>\n                            </div>}\n\n                            {!you && <div onClick={() => addSocialMedia(\"youtube\")} className=\"social-mdeia-icon\">\n                                <div className=\"sloy\">\n                                    <img src=\"./images/add.png\" alt=\"\"/>\n                                </div>\n                                <img src=\"./images/social-media/youtube.png\" alt=\"\"/>\n                            </div>}\n\n                            {!tik && <div onClick={() => addSocialMedia(\"tiktok\")} className=\"social-mdeia-icon\">\n                                <div className=\"sloy\">\n                                    <img src=\"./images/add.png\" alt=\"\"/>\n                                </div>\n                                <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>\n                            </div>}\n                        </div>\n                        <div className=\"des\">\n                            {t(\"social_des\")}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"register-page-two\">\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                                <InputLabel id=\"demo-select-large-label\">{t(\"region_register\")}</InputLabel>\n                                <Select\n                                    error={region_validate}\n                                    labelId=\"demo-select-small-label\"\n                                    id=\"demo-select-small\"\n                                    value={region}\n                                    label={t(\"region_register\")}\n                                    onChange={(e) => setRegion(e.target.value)}\n                                >\n\n                                    {regions.map((item, index) => {\n                                        return <MenuItem key={index} onClick={() => {\n                                            setRegion_validate(false)\n                                            setCenter({lat: item.latitude, lng: item.longitude})\n                                        }} value={index + 1}>{item.name}</MenuItem>\n                                    })}\n\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className=\"label-address\">{t(\"location\")}</div>\n                    <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\n                        {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\n                        {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\n                        {!addressLocation && !addressLocationRu && <p>{t(\"map_des\")}</p>}\n                    </div>\n                    <div className=\"address-container\">\n                        <GoogleMap\n                            zoom={9}\n                            center={center}\n                            options={options}\n                            onClick={ClicklLocation}\n                            mapContainerClassName=\"map-box\"\n                        >\n                            {selected && (\n                                <MarkerF icon={selectAddressIcon} position={selected}/>\n                            )}\n\n                            <div className=\"search-address\">\n                                <div className=\"places-container\">\n                                    <PlacesAutocomplete setSelected={setSelected}/>\n                                    <img src=\"./images/search.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </GoogleMap>\n                    </div>\n                </div>\n            </>}\n\n            {pageNumber === 2 &&\n            <div className=\"register-page-three\">\n                {service.map((item, index) => {\n                    return <div key={index} className=\"service\">\n                        <div className=\"select-box\">\n                            <div className=\"select-sides\">\n                                <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                                    <InputLabel id=\"demo-select-large-label\">{t(\"service_type\")}</InputLabel>\n                                    <Select\n                                        labelId=\"demo-select-small-label\"\n                                        id=\"demo-select-small\"\n                                        value={item.service}\n                                        label={t(\"service_type\")}\n                                        onChange={(e) => {\n                                            item.service = e.target.value;\n                                            item.options = serviceList.filter((item) => item.id === e.target.value)[0].options;\n                                            let change = [...service];\n                                            setService(change);\n                                        }}\n                                    >\n                                        {serviceList.map((item, index) => {\n                                            return <MenuItem key={item.id} value={item.id}>\n                                                {item.translations[i18next.language].name}\n                                            </MenuItem>\n                                        })}\n\n                                    </Select>\n                                </FormControl>\n                            </div>\n                            <div className=\"select-sides\">\n                                {service.length > 1 && index !== 0 &&\n                                <img onClick={() => delService(index)} src=\"./images/del-icon.png\" alt=\"\"/>}\n                            </div>\n                        </div>\n\n                        {item.sub_services_list.map((itemService, indexService) => {\n                            return <div key={indexService} className=\"select-box\">\n                                <div className=\"select-sides\">\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"service_name\")}</InputLabel>\n                                        <Select\n                                            labelId=\"demo-select-small-label\"\n                                            id=\"demo-select-small\"\n                                            value={itemService.sub_service}\n                                            label={t(\"service_name\")}\n                                            onChange={(e) => {\n                                                let change = [...service];\n                                                setService(change);\n                                                itemService.sub_service = e.target.value\n                                            }}\n                                        >\n                                            {item.options.map((item) => {\n                                                return <MenuItem key={item.id} value={item.id}>\n                                                    {item.translations[i18next.language].name}\n                                                </MenuItem>\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                                <div className=\"select-sides\">\n                                    <TextField onChange={(e) => {\n                                        itemService.price = e.target.value;\n                                        let change = [...service];\n                                        setService(change);\n                                    }}\n                                               sx={{m: 1, minWidth: \"80%\"}}\n                                               size=\"small\" id=\"outlined-basic\"\n                                               value={itemService.price}\n                                               label={t(\"service_price\")} variant=\"outlined\" className=\"textField\"/>\n\n                                    {item.sub_services_list.length > 1 && indexService !== 0 && <img onClick={() => {\n                                        item.sub_services_list = item.sub_services_list.filter((item, index) => index !== indexService);\n                                        let change = [...service];\n                                        setService(change);\n                                    }} src=\"./images/del-icon.png\" alt=\"\"/>}\n                                </div>\n                            </div>\n                        })}\n\n                        <div onClick={() => {\n                            item.sub_services_list = item.sub_services_list.concat({sub_service: \"\", price: \"\"});\n                            let change = [...service];\n                            setService(change);\n                        }} className=\"add-social-media\">\n                            {t(\"add_service\")}\n                        </div>\n                        <div className=\"des-btn\">\n                            {t(\"add_service_des\")}\n                        </div>\n                    </div>\n                })}\n                <div onClick={addService} className=\"add-social-media\">\n                    {t(\"create_service\")}\n                </div>\n                <div className=\"des-btn\">\n                    {t(\"create_service_des\")}\n                </div>\n            </div>}\n\n            <div className=\"btn-box\">\n                <div onClick={() => navigate(\"/\")} className=\"prev-btn\">\n                    {t(\"cancel\")}\n                </div>\n\n                <div onClick={sendAllInfo} className=\"next-page-btn\">\n                    {t(\"save_edit\")}\n                </div>\n            </div>\n\n        </div>\n    </div>\n};\n\nexport default ProfileHospital","import \"./style.scss\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useEffect, useMemo, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    TextField, MenuItem, InputLabel, FormControl, Select, Checkbox, OutlinedInput,\n    ListItemText\n} from \"@mui/material\";\nimport {GoogleMap, MarkerF, useLoadScript} from \"@react-google-maps/api\";\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport Loader from \"../../loader/Loader\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {useFormik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\nimport {CSSTransition} from \"react-transition-group\";\n\n\nconst libraries = [\"places\"];\n\n\nconst PharmacyProfile = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [workingTime24, setWorkingTime24] = useState(false);\n    const [selected, setSelected] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [center, setCenter] = useState({lat: 41.295695, lng: 69.239730});\n    const [addressLocation, setAddressLocation] = useState(\"\");\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\n    const [address_validate, setAddress_validate] = useState(false);\n    const [region, setRegion] = useState(\"\");\n    const [region_validate, setRegion_validate] = useState(false);\n    const [logoHospital, setLogoHospital] = useState(null);\n    const [weekend, setWeekend] = useState([]);\n    const [daysList, setDaysList] = useState([]);\n    const [pharmaName, setPharmaName] = useState(\"\");\n    const [pharmaPrice, setPharmaPrice] = useState(\"\");\n    const [Pharmalist, setPharmalist] = useState([]);\n    const [pharmaFile, setPharmaFile] = useState(null);\n    const nodeRef = useRef(null);\n    const [modalContent, setModalContent] = useState({status: \"\", show: false});\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [editValue, setEditValue] = useState(\"\");\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    const selectAddressIcon = {\n        url: \"./images/address.png\",\n        scaledSize: {width: 40, height: 50},\n    };\n\n    const {isLoaded} = useLoadScript({\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n        libraries: libraries,\n        language: i18next.language,\n    });\n\n    const options = useMemo(\n        () => ({\n            disableDefaultUI: false,\n            clickableIcons: false,\n        }),\n        []\n    );\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.nameUz) {\n            errors.nameUz = \"Required\";\n        }\n\n        if (!values.nameRu) {\n            errors.nameRu = \"Required\";\n        }\n\n        if (!values.phone1) {\n            errors.phone1 = \"Required\";\n        }\n\n        if (!values.phone2) {\n            errors.phone2 = \"Required\";\n        }\n\n        if (!values.working_days.length > 0) {\n            errors.working_days = \"Required\";\n        }\n\n        if (!workingTime24 && !values.start_time) {\n            errors.start_time = \"Required\";\n        }\n\n        if (!workingTime24 && !values.end_time) {\n            errors.end_time = \"Required\";\n        }\n\n        return errors;\n    };\n\n    const formOne = useFormik({\n        initialValues: {\n            nameUz: \"\",\n            nameRu: \"\",\n            phone1: \"\",\n            phone2: \"\",\n            start_time: \"\",\n            end_time: \"\",\n            working_days: [],\n        },\n        validate,\n        onSubmit: (values) => {\n            setPageNumber(2)\n            console.log(values)\n        },\n    });\n\n    const getInputPhoto = (event) => {\n        const {target: {files}} = event;\n        const file = files[0];\n\n        function getBase64(file) {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                setLogoHospital(reader.result);\n            };\n            reader.onerror = function () {\n                setLogoHospital(null);\n            };\n\n        }\n\n        getBase64(file);\n    };\n\n    const getInformation = () => {\n        axios.get(`${baseUrl}pharmacy-profile/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }\n        ).then((response) => {\n\n            formOne.setValues({\n                nameUz: response.data.translations[\"uz\"].name,\n                nameRu: response.data.translations[\"ru\"].name,\n                phone1: response.data.phone1,\n                phone2: response.data.phone2,\n                start_time: response.data.start_time,\n                end_time: response.data.end_time,\n                working_days: response.data.working_days,\n            });\n\n            localStorage.setItem(\"nameUz\", response.data.translations[\"uz\"].name)\n            localStorage.setItem(\"nameRu\", response.data.translations[\"ru\"].name)\n\n            let week = response.data.working_days\n            axios.get(`${baseUrl}days/`).then((response) => {\n\n                let new_list = response.data.filter(day => {\n                    return day.id && week.includes(day.id);\n                }).map(day => day.translations[i18next.language].day);\n\n                setWeekend(new_list)\n            }).catch((error) => {\n            });\n\n            setLogoHospital(`https://api.medos.uz/` + response.data.image)\n\n            setRegion(response.data.region)\n\n            setAddressLocation(response.data.translations[i18next.language].address)\n\n            let location = response.data.location.split(',');\n\n            let locMy = {lat: Number(location[0]), lng: Number(location[1])};\n            setCenter(locMy);\n            setSelected(locMy)\n\n            setWorkingTime24(response.data.open_24)\n        }).catch((error) => {\n            if (error.response.statusText == \"Unauthorized\") {\n                window.location.pathname = \"/\";\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"userId\");\n            }\n        });\n\n    }\n\n    const getPharma = () => {\n        axios.get(`${baseUrl}medicine/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }\n        ).then((response) => {\n            setPharmalist(response.data)\n        }).catch((error) => {\n            if (error.response.statusText == \"Unauthorized\") {\n                window.location.pathname = \"/\";\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"userId\");\n            }\n        });\n    };\n\n    useEffect(() => {\n        getInformation()\n\n        getPharma()\n        axios.get(`${baseUrl}days/`).then((response) => {\n            setDaysList(response.data)\n        }).catch((error) => {\n        });\n    }, []);\n\n    const handleChangeMore = (event) => {\n        const {\n            target: {value},\n        } = event;\n\n        setWeekend(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n\n        let new_list = daysList.filter(day => {\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\n        }).map(day => day.id);\n\n        formOne.values.working_days = new_list\n    };\n\n    const ClicklLocation = (e) => {\n        let latitude = e.latLng.lat();\n        let longitude = e.latLng.lng();\n\n        let locMy = {lat: latitude, lng: longitude};\n\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"uz\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setSelected(locMy);\n            setCenter({lat: latitude, lng: longitude});\n            setAddressLocation(fullAddress)\n            setAddress_validate(false)\n        });\n\n        axios.get(`${url}`, {\n            headers: {\n                \"Accept-Language\": \"ru\",\n            },\n        }).then((res) => {\n            let city = res.data.address.city;\n            let country = res.data.address.country;\n            let suburb = res.data.address.suburb;\n            let neighbourhood = res.data.address.neighbourhood;\n            let county = res.data.address.county;\n            let road = res.data.address.road;\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\n            } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                county ? county + \",\" : \"\"\n            } ${road ? road : \"\"}`;\n\n            setAddressLocationRu(fullAddress);\n        });\n    };\n\n    const PlacesAutocomplete = ({setSelected}) => {\n        const {\n            ready,\n            value,\n            setValue,\n            suggestions: {status, data},\n            clearSuggestions,\n        } = usePlacesAutocomplete({\n            requestOptions: {\n                language: i18next.language,\n            },\n        });\n\n        const handleSelect = async (address) => {\n            const results = await getGeocode({address});\n            const {lat, lng} = await getLatLng(results[0]);\n            let locMy = {lat, lng};\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\n\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n\n                setSelected(locMy);\n                setCenter({lat, lng});\n                setAddressLocation(fullAddress)\n                setAddress_validate(false)\n            });\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\n                let city = res.data.address.city;\n                let country = res.data.address.country;\n                let suburb = res.data.address.suburb;\n                let neighbourhood = res.data.address.neighbourhood;\n                let county = res.data.address.county;\n                let road = res.data.address.road;\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\n                    city ? city + \",\" : \"\"\n                } ${suburb ? suburb + \",\" : \"\"} \n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\n                    county ? county + \",\" : \"\"\n                } ${road ? road : \"\"}`;\n                setAddressLocationRu(fullAddress);\n            });\n        };\n\n        return (\n            <Combobox onSelect={handleSelect}>\n                <ComboboxInput\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    disabled={!ready}\n                    className=\"combobox-input\"\n                    placeholder={t(\"address_input\")}\n                />\n\n                <div className=\"address-wrapper\">\n                    <div className=\"list-address\">\n                        {status === \"OK\" &&\n                        data.map(({place_id, description}) => (\n                            <ComboboxOption key={place_id} value={description}/>\n                        ))}\n                    </div>\n                </div>\n            </Combobox>\n        );\n    };\n\n    const sendAllInfo = () => {\n        let loc = `${center.lat},${center.lng}`;\n        let allInfoHospital = {\n            translations: {\n                uz: {\n                    name: formOne.values.nameUz,\n                    address: addressLocation\n                },\n                ru: {\n                    name: formOne.values.nameRu,\n                    address: addressLocationRu\n                }\n            },\n            base64_image: logoHospital,\n            phone1: formOne.values.phone1,\n            phone2: formOne.values.phone2,\n            start_time: formOne.values.start_time,\n            end_time: formOne.values.end_time,\n            open_24: workingTime24,\n            location: loc,\n            working_days: formOne.values.working_days,\n            region: region,\n            file: pharmaFile\n        };\n\n        axios.post(`${baseUrl}pharmacy-profile/`, allInfoHospital, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then(() => {\n\n            let idAlert = Date.now();\n            let alert = {\n                id: idAlert,\n                text: t(\"alert_profile\"),\n                img: \"./images/green.svg\",\n                color: \"#EDFFFA\",\n            };\n            dispatch(addAlert(alert));\n            setTimeout(() => {\n                dispatch(delAlert(idAlert));\n            }, 5000);\n\n            getInformation()\n        }).catch((error) => {\n        });\n\n    };\n\n    const addPharma = () => {\n\n        if (pharmaFile) {\n            const formData = new FormData();\n            formData.append('file', pharmaFile);\n\n            axios.post(`${baseUrl}medicine/add_medicine/`, formData, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then(() => {\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: \"Dorilar saqlandi!\",\n                    img: \"./images/green.svg\",\n                    color: \"#EDFFFA\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n                getPharma()\n                setPharmaFile(\"\")\n\n                modalContent.show = false\n                let newArr = {...modalContent}\n                setModalContent(newArr)\n            }).catch((error) => {\n            });\n        }\n\n        if (pharmaName.trim().length > 0 && pharmaPrice.trim().length > 0) {\n            let medicines = {\n                medicine_name: pharmaName,\n                cost: pharmaPrice\n            };\n\n            axios.post(`${baseUrl}medicine/`, {medicines: [medicines]}, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then(() => {\n\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: \"Dori qo'shildi!\",\n                    img: \"./images/green.svg\",\n                    color: \"#EDFFFA\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n                getPharma()\n                setPharmaName(\"\");\n                setPharmaPrice(\"\")\n\n                modalContent.show = false\n                let newArr = {...modalContent}\n                setModalContent(newArr)\n            }).catch((error) => {\n            });\n        }\n    };\n\n    const getPages = (url) => {\n        axios.get(url, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }\n        ).then((response) => {\n            setPharmalist(response.data)\n        }).catch((error) => {\n            if (error.response.statusText == \"Unauthorized\") {\n                window.location.pathname = \"/\";\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"userId\");\n            }\n        });\n    };\n\n    const Clearlist = () => {\n        let result = window.confirm(t(\"confirm_pharma\"))\n        if (result) {\n            axios.post(`${baseUrl}medicine/clear_medicine/`, {}, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then(() => {\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: t(\"alert_pharma\"),\n                    img: \"./images/green.svg\",\n                    color: \"#EDFFFA\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n                getPharma()\n            })\n        }\n    };\n\n    const editPharma = () => {\n        if (pharmaName && pharmaPrice) {\n            axios.patch(`${baseUrl}medicine/${editValue}/`, {\n                medicine_name: pharmaName,\n                cost: pharmaPrice\n            }, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then(() => {\n\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: t(\"alert_pharma2\"),\n                    img: \"./images/green.svg\",\n                    color: \"#EDFFFA\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n                getPharma()\n\n                modalContent.show = false\n                let newArr = {...modalContent}\n                setModalContent(newArr)\n            }).catch((error) => {\n            });\n        }\n    }\n\n    const delPharma = (id) => {\n        let result = window.confirm(t(\"confirm_pharma2\"));\n        if (result) {\n            axios.delete(`${baseUrl}medicine/${id}/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then(() => {\n\n                let idAlert = Date.now();\n                let alert = {\n                    id: idAlert,\n                    text: t(\"alert_pharma3\"),\n                    img: \"./images/green.svg\",\n                    color: \"#EDFFFA\",\n                };\n                dispatch(addAlert(alert));\n                setTimeout(() => {\n                    dispatch(delAlert(idAlert));\n                }, 5000);\n                getPharma()\n\n            }).catch((error) => {\n            });\n        }\n    };\n\n    if (!isLoaded) return <Loader/>;\n\n    return <div className=\"profile-pharmacies-container\">\n        <CSSTransition\n            in={modalContent.show}\n            nodeRef={nodeRef}\n            timeout={300}\n            classNames=\"alert\"\n            unmountOnExit\n        >\n            <div className=\"modal-sloy\">\n                <div ref={nodeRef} className=\"modal-card\">\n\n                    {modalContent.status === \"enter\" && <div className=\"enter\">\n                        <div className=\"modal-header\">\n                            <div className=\"xbtn-modal\">\n                                <img onClick={() => {\n                                    modalContent.show = false\n                                    let newArr = {...modalContent}\n                                    setModalContent(newArr)\n                                }} src=\"./images/cancel.png\"\n                                     alt=\"\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"title\">\n                            {t(\"add_med\")}\n                        </div>\n                        <div className=\"description\">\n                            {t(\"add_med_des\")}\n                        </div>\n\n                        <div className=\"select-box\">\n                            <div className=\"select-sides\">\n                                <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                                    <TextField onChange={(e) => setPharmaName(e.target.value)}\n                                               sx={{m: 1, minWidth: \"80%\"}}\n                                               size=\"small\" id=\"outlined-basic\"\n                                               label={t(\"med_name\")} variant=\"outlined\" className=\"textField\"/>\n                                </FormControl>\n                            </div>\n                            <div className=\"select-sides\">\n                                <TextField onChange={(e) => setPharmaPrice(e.target.value)}\n                                           sx={{m: 1, minWidth: \"80%\"}}\n                                           size=\"small\" id=\"outlined-basic\"\n                                           label={t(\"med_price\")} variant=\"outlined\" className=\"textField\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"buttons-box\">\n                            <button onClick={addPharma} type=\"button\" className=\"send-btn\">\n                                {t(\"add_med_btn\")}\n                            </button>\n                        </div>\n                    </div>}\n\n                    {modalContent.status === \"edit\" && <div className=\"enter\">\n                        <div className=\"modal-header\">\n                            <div className=\"xbtn-modal\">\n                                <img onClick={() => {\n                                    modalContent.show = false\n                                    let newArr = {...modalContent}\n                                    setModalContent(newArr)\n                                }} src=\"./images/cancel.png\"\n                                     alt=\"\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"title\">\n                            {t(\"edit_med\")}\n                        </div>\n\n                        <div className=\"select-box\">\n                            <div className=\"select-sides\">\n                                <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                                    <TextField value={pharmaName} onChange={(e) => setPharmaName(e.target.value)}\n                                               sx={{m: 1, minWidth: \"80%\"}}\n                                               size=\"small\" id=\"outlined-basic\"\n                                               label={t(\"med_name\")} variant=\"outlined\" className=\"textField\"/>\n                                </FormControl>\n                            </div>\n                            <div className=\"select-sides\">\n                                <TextField value={pharmaPrice} onChange={(e) => setPharmaPrice(e.target.value)}\n                                           sx={{m: 1, minWidth: \"80%\"}}\n                                           size=\"small\" id=\"outlined-basic\"\n                                           label={t(\"med_price\")} variant=\"outlined\" className=\"textField\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"buttons-box\">\n                            <button onClick={editPharma} type=\"button\" className=\"send-btn\">\n                                {t(\"save_edit\")}\n                            </button>\n                        </div>\n                    </div>}\n\n                    {modalContent.status === \"file\" && <div className=\"file\">\n                        <div className=\"modal-header\">\n                            <div className=\"xbtn-modal\">\n                                <img onClick={() => {\n                                    modalContent.show = false\n                                    let newArr = {...modalContent}\n                                    setModalContent(newArr)\n                                }} src=\"./images/cancel.png\"\n                                     alt=\"\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"title\">\n                            {t(\"med_file\")}\n                        </div>\n                        <div className=\"description\">\n                            {t(\"med_file_des\")}\n                        </div>\n\n                        <div className=\"des-pharma\">\n                            <div className=\"icon\">\n                                <img src=\"./images/des.png\" alt=\"\"/>\n                            </div>\n                            <div className=\"text\">\n                                {t(\"med_file_des2\")}\n                            </div>\n                        </div>\n                        <div className=\"pharma-image\">\n                            <img src=\"./images/pharrmalist.jpg\" alt=\"\"/>\n                        </div>\n\n                        <div className=\"file-input\">\n                            {\n                                pharmaFile ? <div className=\"text-file-val\">\n                                    {pharmaFile && pharmaFile.name}\n                                </div> : <div className=\"text-file\">\n                                    <img src=\"./images/File.png\" alt=\"\"/>\n                                    {t(\"med_file2\")}\n                                </div>\n                            }\n\n                            <input onChange={(e) => setPharmaFile(e.target.files[0])} type=\"file\"/>\n                        </div>\n\n                        <div className=\"buttons-box\">\n                            <button onClick={addPharma} type=\"button\" className=\"send-btn\">\n                                {t(\"send_file\")}\n                            </button>\n                        </div>\n                    </div>}\n                </div>\n            </div>\n        </CSSTransition>\n\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n        <div className=\"xbtn\">\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n        </div>\n        <div className=\"register-page\">\n            <div className=\"title\">\n                {t(\"profile_title\")}\n            </div>\n            <div className=\"des\">\n                {t(\"profile_des\")}\n            </div>\n\n            <div className=\"header\">\n                <div onClick={() => setPageNumber(1)} className={`item-menu ${pageNumber === 1 ? \"active\" : \"\"}`}>\n                    {t(\"all_info\")}\n                </div>\n                <div onClick={() => setPageNumber(2)}\n                     className={`item-menu ${pageNumber === 2 ? \"active\" : \"\"}`}>\n                    {t(\"med\")}\n                </div>\n            </div>\n\n            {pageNumber === 1 &&\n            <>\n                <div className=\"register-page-one\">\n\n                    <div className=\"logo-hospital\">\n                        <div className=\"logo-image\">\n                            {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\n                                <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\n                            }\n                        </div>\n\n                        <div className=\"label\">\n                            {t(\"change_image\")}\n                            <input onChange={getInputPhoto} type=\"file\"/>\n                        </div>\n                    </div>\n\n                    <div className=\"inputs-box\">\n                        <TextField error={formOne.errors.nameUz === \"Required\"}\n                                   value={formOne.values.nameUz}\n                                   onChange={formOne.handleChange}\n                                   name=\"nameUz\"\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label=\"Dorixona nomini kiriting (uz) \" variant=\"outlined\" className=\"textField\"/>\n                    </div>\n\n                    <div className=\"inputs-box\">\n                        <TextField error={formOne.errors.nameRu === \"Required\"} value={formOne.values.nameRu}\n                                   onChange={formOne.handleChange}\n                                   name=\"nameRu\" sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\n                                   id=\"outlined-basic\"\n                                   label=\"Введите название аптеки (ru) \" variant=\"outlined\" className=\"textField\"/>\n                    </div>\n\n                    <div className=\"des-input\">\n                        {t(\"des_pharma\")}\n                    </div>\n\n                    <div className=\"label-text\">\n                        <div className=\"sides\">\n                            <div className=\"label-bold\">{t(\"working-time\")}</div>\n                        </div>\n                        <div className=\"sides\"></div>\n                    </div>\n\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\n                                <InputLabel id=\"demo-multiple-checkbox-label\">{t(\"working_days\")}</InputLabel>\n                                <Select\n                                    error={formOne.errors.working_days === \"Required\"}\n                                    name=\"working_days\"\n                                    labelId=\"demo-multiple-checkbox-label\"\n                                    id=\"demo-multiple-checkbox\"\n                                    multiple\n                                    value={weekend}\n                                    onChange={handleChangeMore}\n                                    input={<OutlinedInput label={t(\"working_days\")}/>}\n                                    renderValue={(selected) => selected.join(', ')}\n                                    MenuProps={MenuProps}\n                                >\n                                    {daysList.map((item, index) => (\n                                        <MenuItem key={item.id} value={item.translations[i18next.language].day}>\n                                            <Checkbox\n                                                checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\n                                            <ListItemText primary={item.translations[i18next.language].day}/>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div className=\"select-sides\">\n                            <div className=\"check-box\">\n                                <div className=\"checkbox-wrapper-13\">\n                                    <input\n                                        onChange={(e) => {\n                                            setWorkingTime24((prevState) => !prevState);\n                                        }}\n                                        checked={workingTime24}\n                                        id=\"c1-13\"\n                                        type=\"checkbox\"\n                                    />\n                                </div>\n                                <label htmlFor=\"c1-13\">\n                                    {t(\"open24_register\")}\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n\n                    {workingTime24 ? \"\" : <div className=\"select-box-working-time\">\n                        <div className=\"select-sides\">\n                            <label htmlFor=\"\">{t(\"start_time\")}</label>\n                            <input\n                                className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                                name=\"start_time\" onChange={formOne.handleChange} value={formOne.values.start_time}\n                                type=\"time\"/>\n                        </div>\n                        <div className=\"select-sides\">\n                            <label htmlFor=\"\">{t(\"end_time\")}</label>\n                            <input\n                                className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\n                                name=\"end_time\" onChange={formOne.handleChange} value={formOne.values.end_time}\n                                type=\"time\"/>\n                        </div>\n                    </div>}\n\n                    <div className=\"label-text\">\n                        <div className=\"sides\">\n                            <div className=\"label-bold\">{t(\"contact_pharma\")}</div>\n                        </div>\n                        <div className=\"sides\"></div>\n                    </div>\n\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <TextField\n                                error={formOne.errors.phone1 === \"Required\"}\n                                value={formOne.values.phone1}\n                                onChange={formOne.handleChange}\n                                name=\"phone1\"\n                                sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                                label={t(\"phone1\")} variant=\"outlined\" className=\"textField\"/>\n                        </div>\n                        <div className=\"select-sides\">\n                            <TextField\n                                error={formOne.errors.phone2 === \"Required\"}\n                                value={formOne.values.phone2}\n                                onChange={formOne.handleChange}\n                                name=\"phone2\"\n                                sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                                label={t(\"phone2\")} variant=\"outlined\" className=\"textField\"/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"register-page-two\">\n                    <div className=\"select-box\">\n                        <div className=\"select-sides\">\n                            <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\n                                <InputLabel id=\"demo-select-large-label\">{t(\"region_register\")}</InputLabel>\n                                <Select\n                                    error={region_validate}\n                                    labelId=\"demo-select-small-label\"\n                                    id=\"demo-select-small\"\n                                    value={region}\n                                    label={t(\"region_register\")}\n                                    onChange={(e) => setRegion(e.target.value)}\n                                >\n\n                                    {regions.map((item, index) => {\n                                        return <MenuItem key={index} onClick={() => {\n                                            setRegion_validate(false)\n                                            setCenter({lat: item.latitude, lng: item.longitude})\n                                        }} value={index + 1}>{item.name}</MenuItem>\n                                    })}\n\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className=\"label-address\">{t(\"location\")}</div>\n                    <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\n                        {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\n                        {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\n                        {!addressLocation && !addressLocationRu && <p>{t(\"map_des\")}</p>}\n                    </div>\n                    <div className=\"address-container\">\n                        <GoogleMap\n                            zoom={9}\n                            center={center}\n                            options={options}\n                            onClick={ClicklLocation}\n                            mapContainerClassName=\"map-box\"\n                        >\n                            {selected && (\n                                <MarkerF icon={selectAddressIcon} position={selected}/>\n                            )}\n\n                            <div className=\"search-address\">\n                                <div className=\"places-container\">\n                                    <PlacesAutocomplete setSelected={setSelected}/>\n                                    <img src=\"./images/search.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </GoogleMap>\n                    </div>\n\n                    <div className=\"btn-box\">\n                        <div onClick={() => navigate(\"/\")} className=\"prev-btn\">\n                            {t(\"cancel\")}\n                        </div>\n                        <div onClick={() => {\n                            if (addressLocation && region) {\n                                sendAllInfo()\n                            } else {\n                                if (!addressLocation) setAddress_validate(true);\n                                if (!region) setRegion_validate(true)\n                            }\n                        }} className=\"next-page-btn\">\n                            {t(\"save_edit\")}\n                        </div>\n                    </div>\n                </div>\n            </>}\n\n            {pageNumber === 2 &&\n            <div className=\"register-page-three\">\n                <div className=\"title\">\n                    {t(\"add_med_btn\")}\n                </div>\n\n                <div className=\"btn-box\">\n                    <div onClick={() => {\n                        modalContent.status = \"enter\"\n                        modalContent.show = true\n                        let newContent = {...modalContent}\n                        setModalContent(newContent)\n                    }} className=\"add-social-media\">\n                        {t(\"add_med\")}\n                    </div>\n                    <div onClick={() => {\n                        modalContent.status = \"file\"\n                        modalContent.show = true\n                        let newContent = {...modalContent}\n                        setModalContent(newContent)\n                    }} className=\"add-social-media\">\n                        {t(\"med_file2\")}\n                    </div>\n\n\n                </div>\n\n                <div className=\"title\">\n                    {t(\"med_list\")}\n                </div>\n\n                <div onClick={Clearlist} className=\"clear-btns\">\n                    {t(\"del_all_med\")}\n                    <img src=\"./images/del-icon.png\" alt=\"\"/>\n                </div>\n\n                <div className=\"table-box\">\n                    <div className=\"dropdown-filter-search\">\n                        <input onChange={(e) => setSearchValue(e.target.value)} placeholder=\"Dori nomini kiriting\"\n                               type=\"text\"/>\n\n                        <div onClick={() => searchValue && getPages(`${baseUrl}search-medicine/?name=${searchValue}`)}\n                             className=\"btn-search\">\n                            {t(\"search_med\")}\n                        </div>\n                    </div>\n\n                    {\n                        Pharmalist.results && Pharmalist.results.length > 0 ?\n                            <table>\n                                <thead>\n                                <tr>\n                                    <th>{t(\"med_name\")}</th>\n                                    <th>{t(\"med_price\")}</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n\n                                {Pharmalist.results.map((item, index) => {\n                                    return <tr key={index}>\n                                        <td>{item.medicine_name}</td>\n                                        <td>\n                                            {item.cost}\n                                            <div className=\"del-edit-btns\">\n                                                <div className=\"sides\">\n                                                    <img onClick={() => {\n                                                        setPharmaName(item.medicine_name)\n                                                        setPharmaPrice(item.cost)\n                                                        setEditValue(item.id);\n                                                        modalContent.status = \"edit\"\n                                                        modalContent.show = true\n                                                        let newContent = {...modalContent}\n                                                        setModalContent(newContent)\n                                                    }} src=\"./images/comit.png\" alt=\"\"/>\n                                                </div>\n                                                <div className=\"sides\">\n                                                    <img onClick={() => delPharma(item.id)} src=\"./images/del-icon.png\"\n                                                         alt=\"\"/>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                })}\n\n                                </tbody>\n                            </table> : searchValue && <div className=\"validate\">{t(\"search_text_med\")}</div>\n                    }\n\n\n                    {Pharmalist.results && Pharmalist.results.length > 0 &&\n                    <div className=\"pagination-box\">\n                        <div onClick={() => {\n                            if (Pharmalist.links.previous) {\n                                getPages(Pharmalist.links.previous)\n                            }\n                        }} className=\"nav\">\n                            <img src=\"./images/arrow-prev.png\" alt=\"\"/>\n                        </div>\n\n                        <div className=\"pages\">\n                            {Pharmalist.links.pages.map((item, index) => {\n                                return <div onClick={() => getPages(item[index + 1])} key={index}\n                                            className={`page ${Pharmalist.links.current_page === item[index + 1] ? \"active\" : \"\"}`}>{index + 1}</div>\n                            })}\n                        </div>\n\n                        <div onClick={() => {\n                            if (Pharmalist.links.next) {\n                                getPages(Pharmalist.links.next)\n                            }\n                        }} className=\"nav\">\n                            <img src=\"./images/arrow-next.png\" alt=\"\"/>\n                        </div>\n                    </div>}\n\n                </div>\n\n            </div>}\n        </div>\n    </div>\n};\n\nexport default PharmacyProfile","import \"./style.scss\"\nimport Navbar from \"../navbar/Navbar\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {useSelector} from \"react-redux\";\nimport {useTranslation} from \"react-i18next\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\n\n\nconst Messages = () => {\n    const {t} = useTranslation();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [messages, setMessages] = useState([]);\n    useEffect(() => {\n        axios.get(`${baseUrl}patient/`, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            setMessages(response.data);\n        });\n    }, []);\n\n    const delMessage = (id) => {\n        axios.delete(`${baseUrl}patient/${id}/`).then((response) => {\n            axios.get(`${baseUrl}patient/${localStorage.getItem(\"userId\")}/`).then((response) => {\n                setMessages(response.data);\n            });\n        });\n    };\n\n\n    return <div className=\"messages-wrapper\">\n        <Navbar/>\n        <div className=\"bottom-contents\">\n            <div className=\"left-side\">\n                <div className=\"title\">\n                    {t(\"message_title\")}\n                </div>\n                <div className=\"messages\">\n                    {messages.map((item, index) => {\n                        return <div key={index} className=\"message-box\">\n                            <div className=\"icon-message\">\n                                <img src=\"./images/mail.png\" alt=\"\"/>\n                            </div>\n                            <div onClick={() => delMessage(item.id)} className=\"del-icon\">\n                                <img src=\"./images/del-icon.png\" alt=\"\"/>\n                            </div>\n                            <div className=\"name\">\n                                {item.name}\n                            </div>\n                            <div className=\"number\">\n                                {item.phone}\n                            </div>\n                            <div className=\"des\">\n                                {item.text}\n                            </div>\n                            <div className=\"time\">\n                                <span>{t(\"message_time\")}</span>\n                                {item.utime}\n                            </div>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n        <div className=\"mobile-navbar-container\">\n            <MobileNavbar/>\n        </div>\n    </div>\n};\n\nexport default Messages","import \"./style.scss\"\nimport Navbar from \"../navbar/Navbar\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {useSelector} from \"react-redux\";\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\nimport Footer from \"../footer/Footer\";\n\n\nconst Balance = () => {\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [messages, setMessages] = useState([]);\n    useEffect(() => {\n        axios.get(`${baseUrl}patient/${localStorage.getItem(\"userId\")}/`).then((response) => {\n            setMessages(response.data);\n        });\n    }, []);\n    const delMessage = (id) => {\n        axios.delete(`${baseUrl}patient/${id}/`).then((response) => {\n            axios.get(`${baseUrl}patient/${localStorage.getItem(\"userId\")}/`).then((response) => {\n                setMessages(response.data);\n            });\n        });\n    };\n    return <div className=\"messages-wrapper\">\n        <Navbar/>\n        <div className=\"bottom-contents\">\n            <div className=\"left-side\">\n                <div className=\"title\">\n                   Mening hisobim\n                </div>\n                <div className=\"my-info\">\n                    <div className=\"left-side\">\n                        <div className=\"info\">\n                            <div className=\"text\">FISH:</div>\n                            <div className=\"value\">Malikov Murodxon</div>\n                        </div>\n\n                        <div className=\"info\">\n                            <div className=\"text\">Telefon raqam:</div>\n                            <div className=\"value\">+998 99 999 99 99</div>\n                            <div className=\"value\">+998 90 888 88 88</div>\n                        </div>\n                    </div>\n\n                    <div className=\"right-side\">\n                        <div className=\"type\">\n                            Faol\n                        </div>\n\n                        <div className=\"time\">\n                            <div className=\"info\">Tarif tugashi uchun qolgan vaqt:</div>\n                            <div className=\"text\">12 kun 6 soat</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"tarifs\">\n                    <div className=\"tarif\">\n                        <div className=\"price\">\n                            100 000 so'm\n                        </div>\n\n                        <div className=\"des\">\n                            1 oylik tarif\n                        </div>\n\n                        <div className=\"button-buy\">\n                            <img src=\"./images/shopping-cart.png\" alt=\"\"/>\n                            Tarifni olish\n                        </div>\n                    </div>\n\n                    <div className=\"tarif\">\n                        <div className=\"price\">\n                            240 000 so'm\n                        </div>\n\n                        <div className=\"des\">\n                            3 oylik tarif\n                        </div>\n\n                        <div className=\"button-buy\">\n                            <img src=\"./images/shopping-cart.png\" alt=\"\"/>\n                            Tarifni olish\n                        </div>\n                    </div>\n\n                    <div className=\"tarif\">\n                        <div className=\"price\">\n                            480 000 so'm\n                        </div>\n\n                        <div className=\"des\">\n                            6 oylik tarif\n                        </div>\n\n                        <div className=\"button-buy\">\n                            <img src=\"./images/shopping-cart.png\" alt=\"\"/>\n                            Tarifni olish\n                        </div>\n                    </div>\n\n                    <div className=\"tarif\">\n                        <div className=\"price\">\n                            840 000 so'm\n                        </div>\n\n                        <div className=\"des\">\n                            1 yillik tarif\n                        </div>\n\n                        <div className=\"button-buy\">\n                            <img src=\"./images/shopping-cart.png\" alt=\"\"/>\n                            Tarifni olish\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <div className=\"mobile-navbar-container\">\n            <MobileNavbar/>\n        </div>\n        <Footer/>\n    </div>\n};\n\nexport default Balance","import \"./Style.scss\"\nimport {useOnKeyPress} from \"./useOnKeyPress\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\nimport {TextField} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\nimport {useFormik} from \"formik\";\n\nconst RegisterLogin = () => {\n    const {t} = useTranslation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n\n    const HandleLogin = (values) => {\n        let user= {\n            username:values.username,\n            password:values.password,\n            password2:values.password2,\n            user_type:values.user_type\n        };\n        axios\n            .post(`${baseUrl}auth/register/register-user/`, user)\n            .then((response) => {\n                localStorage.setItem(\"userType\",response.data.user_type);\n                localStorage.setItem(\"profile\", response.data.profile);\n                localStorage.setItem(\"token\", response.data.token)\n                navigate(sessionStorage.getItem(\"link-register\"))\n            })\n            .catch((error) => {\n                if (\"password2\" in error.response.data){\n                    let idAlert = Date.now();\n                    let alert = {\n                        id: idAlert,\n                        text: t(\"error2\"),\n                        img: \"./images/red.svg\",\n                        color: \"#ffefe7\",\n                    };\n                    dispatch(addAlert(alert));\n                    setTimeout(() => {\n                        dispatch(delAlert(idAlert));\n                    }, 5000);\n                }\n                else{\n                    let idAlert = Date.now();\n                    let alert = {\n                        id: idAlert,\n                        text: t(\"error3\"),\n                        img: \"./images/red.svg\",\n                        color: \"#ffefe7\",\n                    };\n                    dispatch(addAlert(alert));\n                    setTimeout(() => {\n                        dispatch(delAlert(idAlert));\n                    }, 5000);\n                }\n\n            });\n    };\n\n    const validate = (values) => {\n        const errors = {};\n\n        if (!values.username) {\n            errors.username = \"Required\";\n        }\n\n        if (!values.password) {\n            errors.password = \"Required\";\n        }\n\n        if (!values.password2 && (values.password !== values.password2)) {\n            errors.password2 = \"Required\";\n        }\n\n        return errors;\n    };\n\n    const formOne = useFormik({\n        initialValues: {\n            username: \"\",\n            password: \"\",\n            password2:\"\",\n            user_type: sessionStorage.getItem(\"link-register\")=== \"/register-doctor\" ? \"Doctor\" :\n                sessionStorage.getItem(\"link-register\")=== \"/register-hospital\" ? \"Hospital\" : \"Pharmacy\"\n        },\n        validate,\n        onSubmit: (values) => {\n            HandleLogin(values)\n        },\n    });\n\n    useOnKeyPress(formOne.handleSubmit, \"Enter\");\n\n    return <div className=\"login-container\">\n        <div className=\"logo\">\n            <img src=\"./images/logo.png\" alt=\"\"/>\n        </div>\n\n        <div  className=\"login-card\">\n            <div className=\"xbtn\">\n                <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\n            </div>\n            <div className=\"title-login\">\n                {t(\"register\")}\n            </div>\n            <div className=\"des-login\">\n                {t(\"register_des\")}\n            </div>\n\n            <div className=\"inputs\">\n                <TextField\n                    error={formOne.errors.username === \"Required\"}\n                    value={formOne.username}\n                    onChange={formOne.handleChange}\n                    name=\"username\"\n                    sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                    label={t(\"user_name\")} variant=\"outlined\" className=\"textField\"/>\n\n                <TextField\n                    error={formOne.errors.password === \"Required\"}\n                    value={formOne.password}\n                    onChange={formOne.handleChange}\n                    name=\"password\"\n                    sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                    label={t(\"password\")} variant=\"outlined\" className=\"textField\"/>\n\n                <TextField\n                    error={formOne.errors.password2 === \"Required\"}\n                    value={formOne.password2}\n                    onChange={formOne.handleChange}\n                    name=\"password2\"\n                    sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\n                    label={t(\"password2\")} variant=\"outlined\" className=\"textField\"/>\n            </div>\n\n            <div onClick={() => formOne.handleSubmit()} className=\"login-btn\">\n                {t(\"register\")}\n            </div>\n        </div>\n\n    </div>\n};\n\nexport default RegisterLogin","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import React from \"react\";\nimport Clinics from \"../components/clinics/Clinics\";\nimport Doctors from \"../components/doctors/Doctors\";\nimport Saved from \"../components/saved/Saved\";\nimport AboutClinic from \"../components/about-clinic/About-clinic\";\nimport Pharmacies from \"../components/Pharmacies/Pharmacies\";\nimport Login from \"../components/login/login\";\nimport AboutDoctor from \"../components/about-doctor/About-doctor\";\nimport AboutPharma from \"../components/about-pharma/AboutPharma\";\nimport Register from \"../components/register/Register\";\nimport RegisterHospital from \"../components/register/register-hospital/RegisterHospital\";\nimport RegisterDoctor from \"../components/register/register-doctor/RegisterDoctor\";\nimport RegisterPharmacies from \"../components/register/register-pharmacies/RegisterPharmacies\";\nimport Service from \"../components/services/Services\";\nimport ProfileDoctor from \"../components/profile/profile-doctor/ProfileDoctor\";\nimport ProfileHospital from \"../components/profile/hospital-profile/HospitalProfile\";\nimport PharmacyProfile from \"../components/profile/pharmacy-profile/PharmacyProfile\";\nimport Messages from \"../components/messages/Messages\";\nimport Balance from \"../components/my-balance/Balance\";\nimport RegisterLogin from \"../components/register-login/RegisterLogin\";\n\n\nexport const publicRoutes = [\n    {\n        path: \"/\",\n        element: <Clinics/>\n    },\n    {\n        path: \"/doctors\",\n        element: <Doctors/>\n    },\n    {\n        path: \"/pharmacies\",\n        element: <Pharmacies/>\n    },\n    {\n        path: \"/saved\",\n        element: <Saved/>\n    },\n    {\n        path: \"/about-clinic\",\n        element: <AboutClinic/>\n    },\n    {\n        path: \"/about-doctor\",\n        element: <AboutDoctor/>\n    },\n    {\n        path: \"/about-pharmacies\",\n        element: <AboutPharma/>\n    },\n    {\n        path: \"/login\",\n        element: <Login/>\n    },\n    {\n        path: \"/register\",\n        element: <Register/>\n    },\n    {\n        path: \"/register-hospital\",\n        element: <RegisterHospital/>\n    },\n    {\n        path: \"/register-doctor\",\n        element: <RegisterDoctor/>\n    },\n    {\n        path: \"/register-pharmacies\",\n        element: <RegisterPharmacies/>\n    },\n    {\n        path: \"/services\",\n        element: <Service/>\n    },\n    {\n        path: \"/messages\",\n        element: <Messages/>\n    },\n    {\n        path: \"/register-step-one\",\n        element: <RegisterLogin/>\n    },\n];\n\nexport const allRoutes = [\n    ...publicRoutes,\n    {\n        path: \"/profile-doctor\",\n        element: <ProfileDoctor/>\n    },\n    {\n        path: \"/profile-hospital\",\n        element: <ProfileHospital/>\n    },\n    {\n        path: \"/profile-pharmacy\",\n        element: <PharmacyProfile/>\n    },\n    {\n        path: \"/balance\",\n        element: <Balance/>\n    },\n];\n\n\n","import {useRef, useState, useContext, useEffect} from \"react\";\nimport {CSSTransition} from \"react-transition-group\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport ReactStars from \"react-stars\";\nimport {hideModal, showModals} from \"../../redux/ModalContent\";\nimport \"./style.scss\";\nimport {useFormik} from \"formik\";\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\nimport i18next from \"i18next\";\nimport axios from \"axios\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Modal = () => {\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n    const nodeRef = useRef(null);\n    const modalContent = useSelector((store) => store.ModalContent.data);\n    const baseUrl = useSelector((store) => store.baseUrl.data);\n    const [raidCount, setRaidCount] = useState();\n\n\n    const validate = (values) => {\n        const errors = {};\n        if (!values.phone) {\n            errors.phone = \"Required\";\n        }\n\n        if (!values.name) {\n            errors.name = \"Required\";\n        }\n        if (!values.text) {\n            errors.text = \"Required\";\n        }\n        if (!values.utime && modalContent.status === \"sms\") {\n            errors.utime = \"Required\";\n        }\n        return errors;\n    };\n\n    const formReception = useFormik({\n        initialValues: {\n            name: \"\",\n            phone: \"\",\n            text: \"\",\n            utime:\"\"\n        },\n        validate,\n        onSubmit: (values) => {\n            let reception = {\n                ...values,\n                user: modalContent.item\n            };\n\n            let rate = {\n                ...values,\n                user: modalContent.item,\n                mark: raidCount\n            };\n\n            if (modalContent.status === \"sms\") {\n                axios.post(`${baseUrl}patient/`, reception).then((response) => {\n                    let idAlert = Date.now();\n                    let alert = {\n                        id: idAlert,\n                        text: t(\"alert_register\"),\n                        img: \"./images/green.svg\",\n                        color: \"#EDFFFA\",\n                    };\n                    dispatch(addAlert(alert));\n                    setTimeout(() => {\n                        dispatch(delAlert(idAlert));\n                    }, 5000);\n                    dispatch(hideModal({show: false}));\n                    formReception.resetForm();\n                });\n            }\n\n            if (modalContent.status === \"commit\") {\n                axios.post(`${baseUrl}comment/`, rate).then((response) => {\n                    let idAlert = Date.now();\n                    let alert = {\n                        id: idAlert,\n                        text: \"Baxolandi!\",\n                        img: \"./images/green.svg\",\n                        color: \"#EDFFFA\",\n                    };\n                    dispatch(addAlert(alert));\n                    setTimeout(() => {\n                        dispatch(delAlert(idAlert));\n                    }, 5000);\n                    dispatch(hideModal({show: false}))\n                    formReception.resetForm()\n                });\n            }\n        },\n    });\n\n    return (\n        <CSSTransition\n            in={modalContent.show}\n            nodeRef={nodeRef}\n            timeout={300}\n            classNames=\"alert\"\n            unmountOnExit\n        >\n            <div className=\"modal-sloy\">\n                <div ref={nodeRef} className=\"modal-card\">\n\n                    {modalContent.status === \"sms\" &&\n                    <form onSubmit={formReception.handleSubmit} className=\"send-sms\">\n                        <div className=\"header\">\n                            <div className=\"xbtn\">\n                                <img onClick={() => dispatch(hideModal({show: false}))} src=\"./images/cancel.png\"\n                                     alt=\"\"/>\n                            </div>\n                        </div>\n\n                        <div className=\"title\">\n                            {t(\"acceptance\")}\n                        </div>\n                        <div className=\"description\">\n                            {t(\"sms_des\")}\n                        </div>\n                        <div className=\"inputs-box\">\n                            <input\n                                className={formReception.errors.name === \"Required\" ? \"Required\" : \"\"}\n                                onChange={formReception.handleChange}\n                                value={formReception.values.name}\n                                name=\"name\"\n                                placeholder={t(\"sms_name\")} type=\"text\"/>\n                            <input\n                                className={formReception.errors.phone === \"Required\" ? \"Required\" : \"\"}\n                                onChange={formReception.handleChange}\n                                value={formReception.values.phone}\n                                name=\"phone\"\n                                placeholder={t(\"phone\")} type=\"text\"/>\n                            <label htmlFor=\"utime\">{t(\"sms_date\")}</label>\n                            <input\n                                className={formReception.errors.utime === \"Required\" ? \"Required\" : \"\"}\n                                onChange={formReception.handleChange}\n                                value={formReception.values.utime}\n                                name=\"utime\"\n                                type=\"datetime-local\"\n                                id=\"utime\"/>\n                            <textarea\n                                className={formReception.errors.text === \"Required\" ? \"Required\" : \"\"}\n                                onChange={formReception.handleChange}\n                                value={formReception.values.text}\n                                name=\"text\"\n                                placeholder={t(\"sms_text\")}\n                                cols=\"30\" rows=\"10\"></textarea>\n                        </div>\n                        <div className=\"buttons-box\">\n                            <button type=\"submit\" className=\"send-btn\">{t(\"send_sms\")}</button>\n                        </div>\n                    </form>}\n\n                    {modalContent.status === \"contact\" &&\n                    <div className=\"contact\">\n                        <div className=\"header\">\n                            <div className=\"title\">\n                                {modalContent.item.translations[i18next.language].name ?\n                                    modalContent.item.translations[i18next.language].name :\n                                    <>\n                                        {modalContent.item.translations[i18next.language].first_name} &nbsp;\n                                        {modalContent.item.translations[i18next.language].last_name} &nbsp;\n                                        {modalContent.item.translations[i18next.language].middle_name}\n                                    </>\n                                }\n                            </div>\n                            <div className=\"xbtn\">\n                                <img onClick={() => dispatch(hideModal({show: false}))} src=\"./images/cancel.png\"\n                                     alt=\"\"/>\n                            </div>\n                        </div>\n                        <div className=\"title-contact\">{t(\"working-time\")}</div>\n                        <div className=\"content\">\n                            {modalContent.item.open_24 ? t(\"open24\") : <>\n                                {modalContent.item.start_time} {t(\"from\")}\n                                &nbsp;\n                                {modalContent.item.end_time} {t(\"to\")}\n                            </>}\n                        </div>\n\n                        <div className=\"title-contact\">{t(\"contacts\")}</div>\n                        <div className=\"content\">\n                            <div className=\"phone\">\n                                {modalContent.item.phone1 ? modalContent.item.phone1 : modalContent.item.phone}\n                            </div>\n                            <div className=\"phone\">\n                                {modalContent.item.phone2}\n                            </div>\n                        </div>\n                    </div>}\n\n                    {modalContent.status === \"commit\" &&\n                    <form onSubmit={formReception.handleSubmit} className=\"send-commit\">\n                        <div className=\"header\">\n                            <div className=\"xbtn\">\n                                <img onClick={() => dispatch(hideModal({show: false}))} src=\"./images/cancel.png\"\n                                     alt=\"\"/>\n                            </div>\n                        </div>\n                        <div className=\"title\">\n                            {t(\"commit_title\")}\n                        </div>\n                        <div className=\"stars\">\n                            <ReactStars\n                                count={5}\n                                onChange={(e) => {\n                                    setRaidCount(e);\n                                }}\n                                size={35}\n                                color2={\"rgba(255, 194, 50, 1)\"}\n                                half={false}\n                            />\n                        </div>\n                        <div className=\"inputs-box\">\n                            <input\n                                className={formReception.errors.name === \"Required\" ? \"Required\" : \"\"}\n                                onChange={formReception.handleChange}\n                                value={formReception.values.name}\n                                name=\"name\"\n                                placeholder={t(\"sms_name\")} type=\"text\"/>\n                            <input\n                                className={formReception.errors.phone === \"Required\" ? \"Required\" : \"\"}\n                                onChange={formReception.handleChange}\n                                value={formReception.values.phone}\n                                name=\"phone\"\n                                placeholder={t(\"phone\")} type=\"text\"/>\n                            <div className=\"description\">\n                                {t(\"commit_des\")}\n                            </div>\n                            <textarea\n                                className={formReception.errors.text === \"Required\" ? \"Required\" : \"\"}\n                                onChange={formReception.handleChange}\n                                value={formReception.values.text}\n                                name=\"text\"\n                                placeholder={t(\"commit\")}\n                                cols=\"30\" rows=\"10\"></textarea>\n                        </div>\n                        <div className=\"description\">\n                            {t(\"commit_des2\")}\n                        </div>\n                        <button type=\"submit\" className=\"send-btn\">{t(\"send_sms\")}</button>\n                    </form>}\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\nexport default Modal;\n","import \"./style.scss\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {delAlert} from \"../../redux/AlertsBox\"\n\nconst Alerts = () => {\n    const dispatch = useDispatch()\n    const Alerts = useSelector((store) => store.Alerts.data)\n    const delAlerts = (id) => {\n        dispatch(delAlert(id))\n    };\n\n    return <div className=\"alerts-container\">\n\n        {\n            Alerts.length > 0 && <div className={`alerts-box ${Alerts.length > 3 ? \"alerts-box-hide\" : \"\"}`}>\n                {Alerts.map((item, index) => {\n                    return <div key={index} className=\"alert\">\n                        <div style={{background:item.color}} className=\"left-side\">\n                            <img src={item.img} alt=\"\"/>\n                        </div>\n                        <div className=\"right-side\">\n                            {item.text}\n                        </div>\n                        <div className=\"xbtn\">\n                            <img onClick={() => delAlerts(item.id)} src=\"./images/x-button.png\" alt=\"\"/>\n                        </div>\n                    </div>\n                })}\n            </div>\n        }\n\n    </div>\n}\n\nexport default Alerts","import React, {useMemo, useState, useEffect, createContext} from \"react\";\nimport {Routes, Route} from \"react-router-dom\";\nimport NotFound from \"../notFound/NotFound\";\nimport {allRoutes, publicRoutes} from \"../../routes/Routes\";\nimport axios from \"axios\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\nimport {useDispatch} from \"react-redux\";\nimport {getLocation} from \"../../redux/locationUser\";\nimport Modal from \"../modal/Modal\";\nimport Alerts from \"../alerts/Alerts\";\n\n\nexport const MainContext = createContext();\n\nconst App = () => {\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n\n    const user = useMemo(() => localStorage.getItem('token'), []);\n\n    const routes = useMemo(() => {\n        if (user) return allRoutes;\n        return publicRoutes\n    }, [user]);\n\n    const regions = [\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\n    ];\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const {latitude, longitude} = position.coords;\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\n            axios.get(`${url}`, {headers: {\"Accept-Language\": i18next.language}}).then((res) => {\n                const location = {\n                    key: regions.findIndex(region => region.name === res.data.address.city),\n                    \"city\": res.data.address.city, \"latitude\": Number(latitude), \"longitude\": Number(longitude)\n                };\n                dispatch(getLocation(location))\n            });\n        });\n    }, []);\n\n    return <>\n        <Routes>\n            {routes.map((route, index) => (<Route key={index} {...route} />))}\n            <Route path={'*'} element={<NotFound/>}/>\n        </Routes>\n        <Modal/>\n        <Alerts/>\n    </>\n};\n\nexport default App;"],"names":["NotFound","_jsx","className","children","_jsxs","Navbar","baseUrl","useSelector","store","data","t","useTranslation","dispatch","useDispatch","profile","setProfile","useState","searchList","setSearchList","navigate","useNavigate","location","setLocation","locationRu","setLocationRu","searchBox","setSearchBox","inputVal","setInputVal","filterResult","setFilterResult","useEffect","axios","get","concat","then","response","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","url","headers","res","address","city","Menus","name","window","onclick","event","target","matches","getInformation","status","item","translations","getClinics","changeMenu","first_name","last_name","getDoctor","getPharmacies","post","sub_service","id","_Fragment","onClick","src","alt","i18next","language","code","country_code","map","_ref","localStorage","setItem","reload","changeLanguage","index","NavLink","to","_ref2","isActive","img","onChange","e","value","filteredResults","filterData","searchValue","lowerCaseSearchValue","toLowerCase","find1","hospitals","filter","hospital","Object","values","some","translation","includes","find2","doctors","doctor","middle_name","filterDoctors","find3","pharmacies","pharmacy","filterPharmacies","find4","services","service","found","length","placeholder","type","getItem","pathname","removeItem","Footer","links","link","href","GOOGLE_MAPS_API_KEY","LoaderMap","ClinicMarkers","clinics","Clinics","selectedLocation","setSelectedLocation","clinicActiveId","setClinicActiveId","icon","scaledSize","width","height","icon2","MarkerClustererF","gridSize","clusterer","MarkerF","lat","Number","split","lng","InfoWindow","onCloseClick","image","open","NavigateButton","avg_rating","comment_count","open_24","start_time","end_time","getAboutMarker","DoctorMarkers","Doctors","specialty","experience","working_days","day","PharmaciesMarkers","Pharmacies","isPlaceOpen","startTime","endTime","startParts","endParts","startDate","Date","setHours","endDate","now","AboutMarker","aboutMarker","MarkerAbout","libraries","Map","onloadMap","setOnloadMap","LocationUser","showMap","ShowMap","center","setCenter","isLoaded","useLoadScript","googleMapsApiKey","regions","options","useMemo","disableDefaultUI","clickableIcons","locMy","GoogleMap","zoom","mapContainerClassName","onLoad","myLocation","key","findIndex","region","getLocation","show","MobileNavbar","props","adverts","setAdverts","Slider","lazyLoad","slidesToShow","dots","infinite","fade","speed","autoplay","navs","slidesToScroll","initialSlide","responsive","breakpoint","settings","filterService","Menu","serviceList","setServiceList","regionSelect","setRegionSelect","hospitalList","setHospitalList","hospitalType","setHospitalType","setRegion","setType","speciality","setSpeciality","working24","setWorking24","disable","setDisable","emergency_number","setEmergency_number","savedPosts","setSavedPosts","catch","error","getSavedPosts","filterHospital","ShowModal","showModals","hospital_type_key","region_key","type_key","speciality_key","open_24_key","disabled_key","emergency_number_key","filterBox","hospital_type","disabled","queryString","entries","encodeURIComponent","join","JSON","parse","AdvertBox","FormControl","sx","m","minWidth","size","InputLabel","Select","labelId","label","MenuItem","changeRegion","postId","updatedSavedPosts","push","stringify","handleSaveClick","user","hospital_services","gender","setGender","cost","setCost","gender_key","cost_key","itemWorkingdays","sub_speciality","consultation_fee","second_consultation_fee","searchText","setSearchText","filterPharmacy","idAlert","alert","text","color","addAlert","setTimeout","delAlert","i","hasOwnProperty","temp_list","sort","a","b","medicine_cost","sortPharmacies","medicine_name","Saved","tabActive","setTabActive","like","setLike","setClinics","setDoctors","setPharmacies","savedPostsClinic","setSavedPostsClinic","getSavedPostsClinic","savedPostsDoctor","setSavedPostsDoctor","getSavedPostsDoctor","savedPostsPharmacy","setSavedPostsPharmacy","getSavedPostsPharmacy","Tabs","handleSaveClickClinic","handleSaveClickDoctor","handleSaveClickPharmacy","MapAbout","locationAbout","AboutClinic","clinic","setClinic","comments","setComments","setServices","tabs","hospital_socials","slice","time","Array","from","mark","_","doctor_count","services_count","service_count","sub_services_list","price","Login","formOne","useFormik","initialValues","username","password","validate","errors","login","onSubmit","token","user_type","HandleLogin","useOnKeyPress","callback","targetKey","handleSubmit","keyPressHandler","addEventListener","removeEventListener","TextField","handleChange","variant","AboutDoctor","setDoctor","similarDoctors","setSimilarDoctors","doctor_socials","itemWorking","bio","AboutPharma","setPharmacy","phone1","phone2","Register","direction","setDirection","sessionStorage","RegisterHospital","setHospital","invalidService","setInvalidService","workingTime24","setWorkingTime24","selected","setSelected","pageNumber","setPageNumber","socialMedias","setSocialMedias","setService","addressLocation","setAddressLocation","addressLocationRu","setAddressLocationRu","address_validate","setAddress_validate","weekend","setWeekend","region_validate","setRegion_validate","logoHospital","setLogoHospital","daysList","setDaysList","logoValidate","setLogoValidate","ref2","useRef","tg","setTg","ins","setIns","face","setFace","you","setYou","tik","setTik","loader","setLoader","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","nameUz","nameRu","isNaN","_ref2$current","phone","current","scrollIntoView","behavior","PlacesAutocomplete","ready","setValue","suggestions","clearSuggestions","usePlacesAutocomplete","requestOptions","Combobox","onSelect","async","results","getGeocode","getLatLng","country","suburb","neighbourhood","county","road","fullAddress","ComboboxInput","place_id","description","ComboboxOption","addSocialMedia","newMedia","newArr","Loader","ref","files","file","reader","FileReader","readAsDataURL","onload","result","onerror","getBase64","multiple","new_list","input","OutlinedInput","renderValue","Checkbox","checked","indexOf","ListItemText","primary","prevState","htmlFor","delSocialMedia","ind","latLng","Marker","change","delService","itemService","indexService","addService","sendAllInfo","loc","allInfoHospital","uz","ru","base64_image","socials","cyrillicToTranslit","CyrillicToTranslit","subSpecialty","setSubSpecialty","setSpecialty","specialtyList","setSpecialtyList","subSpecialtyList","setSubSpecialtyList","bio_uz","bio_ru","transform","reverse","labelid","Autocomplete","disablePortal","getOptionLabel","option","isOptionEqualToValue","renderOption","renderInput","params","Textarea","RegisterPharmacies","Service","hospital_count","console","log","sub_service_list","ProfileDoctor","setValues","week","newSubSpecialty","statusText","newSocial","ProfileHospital","PharmacyProfile","pharmaName","setPharmaName","pharmaPrice","setPharmaPrice","Pharmalist","setPharmalist","pharmaFile","setPharmaFile","nodeRef","modalContent","setModalContent","setSearchValue","editValue","setEditValue","getPharma","addPharma","formData","FormData","append","trim","medicines","getPages","CSSTransition","in","timeout","classNames","unmountOnExit","editPharma","patch","newContent","Clearlist","confirm","delPharma","delete","previous","pages","current_page","next","Messages","messages","setMessages","delMessage","utime","Balance","RegisterLogin","password2","publicRoutes","path","element","RegisterDoctor","allRoutes","Modal","ModalContent","raidCount","setRaidCount","formReception","reception","rate","hideModal","resetForm","cols","rows","ReactStars","count","color2","half","Alerts","background","delAlerts","MainContext","createContext","App","routes","Routes","route","Route"],"sourceRoot":""}