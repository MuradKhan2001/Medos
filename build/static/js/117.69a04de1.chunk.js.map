{"version":3,"file":"static/js/117.69a04de1.chunk.js","mappings":"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","sources":["components/notFound/NotFound.jsx","components/navbar/Navbar.jsx","components/footer/Footer.jsx","components/map/googleMapsApi.js","components/map/loader-map/LoaderMap.jsx","components/map/ClinicMarkers.jsx","components/map/DoctorMarkers.jsx","components/map/PharmaciesMarkers.jsx","components/map/AboutMarker.jsx","components/map/Map.jsx","components/mobile-navbar/MobileNavbar.jsx","components/clinics/Clinics.jsx","components/doctors/Doctors.jsx","components/Pharmacies/Pharmacies.jsx","components/saved/Saved.jsx","components/map/MapAbout.jsx","components/about-clinic/About-clinic.jsx","components/login/login.jsx","components/login/useOnKeyPress.js","components/about-doctor/About-doctor.jsx","components/about-pharma/AboutPharma.jsx","components/register/Register.jsx","components/register/googleMapsApi.js","components/register/register-hospital/RegisterHospital.jsx","components/register/register-doctor/RegisterDoctor.jsx","components/register/register-pharmacies/RegisterPharmacies.jsx","components/services/Services.jsx","components/profile/googleMapsApi.js","components/profile/profile-doctor/ProfileDoctor.jsx","components/profile/hospital-profile/HospitalProfile.jsx","components/profile/pharmacy-profile/PharmacyProfile.jsx","components/messages/Messages.jsx","routes/Routes.jsx","components/modal/Modal.jsx","components/alerts/Alerts.jsx","components/app/App.js"],"sourcesContent":["import \"./not-found.scss\"\r\n\r\nconst NotFound = () => {\r\n    return <div className=\"not-found-wrapper\">\r\n        <div className=\"sloy\">\r\n            <div className=\"text1\">\r\n                <div className=\"error\">\r\n                    error 404\r\n                </div>\r\n                <div className=\"text\">\r\n                    Page not found\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default NotFound","import {useNavigate, NavLink} from \"react-router-dom\";\r\nimport \"./style-navbar.scss\"\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeMenu} from \"../../redux/menu\";\r\nimport axios from \"axios\";\r\nimport {getClinics} from \"../../redux/clinics\";\r\nimport {getDoctor} from \"../../redux/doctors\";\r\nimport {getPharmacies} from \"../../redux/pharmacies\";\r\n\r\nconst Navbar = () => {\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const {t} = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [profile, setProfile] = useState(false);\r\n    const [searchList, setSearchList] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [location, setLocation] = useState();\r\n    const [locationRu, setLocationRu] = useState();\r\n    const [searchBox, setSearchBox] = useState([]);\r\n    const [inputVal, setInputVal] = useState(\"\");\r\n    const [filterResult, setFilterResult] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}search-options/`).then((response) => {\r\n            setSearchBox(response.data);\r\n        });\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"}}).then((res) => {\r\n                setLocation(res.data.address.city)\r\n            });\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"}}).then((res) => {\r\n                setLocationRu(res.data.address.city)\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const Menus = [\r\n        {\r\n            name: t('nav1'),\r\n            url: \"/\",\r\n        },\r\n        {\r\n            name: t('nav2'),\r\n            url: \"/doctors\",\r\n        },\r\n        {\r\n            name: t('nav3'),\r\n            url: \"/pharmacies\",\r\n        }, {\r\n            name: t('nav4'),\r\n            url: \"/services\",\r\n        }\r\n    ];\r\n\r\n    const language = [\r\n        {\r\n            code: \"uz\",\r\n            name: \"UZ\",\r\n            country_code: \"uz\",\r\n        },\r\n        // {\r\n        //     code: \"en\",\r\n        //     name: \"EN\",\r\n        //     country_code: \"en\",\r\n        // },\r\n        {\r\n            code: \"ru\",\r\n            name: \"RU\",\r\n            country_code: \"ru\",\r\n        },\r\n    ];\r\n\r\n    const changeLanguage = (code) => {\r\n        localStorage.setItem(\"lng\", code);\r\n        i18next.changeLanguage(code);\r\n    };\r\n\r\n    window.onclick = function (event) {\r\n        if (!event.target.matches('.click-profile')) {\r\n            setProfile(false)\r\n        }\r\n    };\r\n\r\n    const filterData = (searchBox, searchValue) => {\r\n        const lowerCaseSearchValue = searchValue.toLowerCase();\r\n\r\n        const filterHospitals = (hospitals) => {\r\n            return hospitals.filter(hospital =>\r\n                Object.values(hospital.translations).some(translation =>\r\n                    translation.name.toLowerCase().includes(lowerCaseSearchValue)\r\n                )\r\n            );\r\n        };\r\n\r\n        const filterDoctors = (doctors) => {\r\n            return doctors.filter(doctor =>\r\n                Object.values(doctor.translations).some(translation => {\r\n                    const fullName = `${translation.first_name} ${translation.middle_name} ${translation.last_name}`.toLowerCase();\r\n                    return fullName.includes(lowerCaseSearchValue);\r\n                })\r\n            );\r\n        };\r\n\r\n        const filterPharmacies = (pharmacies) => {\r\n            return pharmacies.filter(pharmacy =>\r\n                Object.values(pharmacy.translations).some(translation =>\r\n                    translation.name.toLowerCase().includes(lowerCaseSearchValue)\r\n                )\r\n            );\r\n        };\r\n\r\n        const filterServices = (services) => {\r\n            return services.filter(service =>\r\n                Object.values(service.translations).some(translation =>\r\n                    translation.name.toLowerCase().includes(lowerCaseSearchValue)\r\n                )\r\n            );\r\n        };\r\n\r\n        let find1 = filterHospitals(searchBox.hospitals);\r\n        let find2 = filterDoctors(searchBox.doctors);\r\n        let find3 = filterPharmacies(searchBox.pharmacy);\r\n        let find4 = filterServices(searchBox.services);\r\n\r\n        return {\r\n            hospitals: find1,\r\n            doctors: find2,\r\n            pharmacy: find3,\r\n            services: find4,\r\n            found: (find1.length > 0 || find2.length > 0 || find3.length > 0 || find4.length > 0)\r\n        };\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        setInputVal(e.target.value);\r\n        const filteredResults = filterData(searchBox, e.target.value);\r\n        setFilterResult(filteredResults);\r\n    };\r\n\r\n    const getInformation = (status, item) => {\r\n\r\n        if (status === \"hospital\") {\r\n            axios.get(`${baseUrl}hospital/?name=${item.translations[\"uz\"].name}`).then((response) => {\r\n                dispatch(getClinics(response.data));\r\n                dispatch(changeMenu(true));\r\n                navigate(\"/\")\r\n                setSearchList(false)\r\n            })\r\n        }\r\n\r\n        if (status === \"doctor\") {\r\n            axios.get(`${baseUrl}doctor/?first_name=${item.translations[\"uz\"].first_name}&last_name=${item.translations[\"uz\"].last_name}`).then((response) => {\r\n                dispatch(getDoctor(response.data));\r\n                dispatch(changeMenu(true));\r\n                navigate(\"/doctors\");\r\n                setSearchList(false)\r\n            })\r\n        }\r\n\r\n        if (status === \"pharmacy\") {\r\n            axios.get(`${baseUrl}pharmacy/?name=${item.translations[\"uz\"].name}`).then((response) => {\r\n                dispatch(getPharmacies(response.data));\r\n                dispatch(changeMenu(true));\r\n                navigate(\"/pharmacies\");\r\n                setSearchList(false)\r\n            })\r\n        }\r\n\r\n        if (status === \"service\") {\r\n            axios.post(`${baseUrl}filter-hospital/`, {sub_service: item.id}).then((response) => {\r\n                dispatch(getClinics(response.data));\r\n                dispatch(changeMenu(true));\r\n                navigate(\"/\")\r\n                setSearchList(false)\r\n            });\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <div className=\"navbar-wrapper\">\r\n            {\r\n                searchList && <div onClick={() => setSearchList(false)} className=\"search-sloy\"></div>\r\n            }\r\n            <div className=\"section-header\">\r\n                <div className=\"location-user\">\r\n                    <div><img src=\"./images/address.png\" alt=\"\"/></div>\r\n                    <div className=\"title\">\r\n                        {i18next.language === \"uz\" && location}\r\n                        {i18next.language === \"ru\" && locationRu}\r\n                    </div>\r\n                </div>\r\n                <div className=\"languages-wrapper\">\r\n                    <div className=\"items mr\">\r\n                        <div><img src=\"./images/globe.png\" alt=\"\"/></div>\r\n                        {language.map(({code, name, country_code}) => (\r\n                            <div\r\n                                key={country_code}\r\n                                onClick={() => changeLanguage(code)}\r\n                                className={`title ${i18next.language === code ? \"title-active\" : \"\"}`}\r\n                            >\r\n                                {name}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"items\">\r\n                        <div><img src=\"./images/hear.png\" alt=\"\"/></div>\r\n                        <div onClick={() => navigate(\"/saved\")} className=\"title\">\r\n                            {t(\"saved\")}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"section-menu\">\r\n                <div className=\"left-side\">\r\n                    <div className=\"logo\">\r\n                        <img onClick={() => navigate(\"/\")} src=\"./images/logo2.png\" alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"menu-wrapper\">\r\n                        {\r\n                            Menus.map((item, index) => {\r\n                                return <NavLink to={item.url} key={index}\r\n                                                className={`menu-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\r\n                                    <img src={item.img} alt=\"\"/>\r\n                                    <span> {item.name}</span>\r\n                                </NavLink>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={`search-box ${searchList ? \"active-search\" : \"\"}`}>\r\n                        <div className=\"icon-search\">\r\n                            <img src=\"./images/search.png\" alt=\"search\"/>\r\n                        </div>\r\n\r\n                        <input onChange={handleSearch} onClick={() => setSearchList(true)}\r\n                               placeholder={t(\"search-placeholder\")}\r\n                               type=\"text\"/>\r\n\r\n                        {searchList && <div\r\n                            className={`search-list`}>\r\n\r\n                            {inputVal && <div>\r\n                                {filterResult.services.length > 0 && <div className=\"search-title\">{t(\"nav4\")}</div>}\r\n                                {filterResult.services && filterResult.services.map((item, index) => {\r\n                                    return <div onClick={() => getInformation(\"service\", item)} key={index}\r\n                                                className=\"search-result\">\r\n                                        <div className=\"icon\">\r\n                                            <img src=\"./images/searchicon2.png\" alt=\"\"/>\r\n                                        </div>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </div>\r\n                                })}\r\n\r\n                                {filterResult.hospitals.length > 0 && <div className=\"search-title\">{t(\"nav1\")}</div>}\r\n                                {filterResult.hospitals && filterResult.hospitals.map((item, index) => {\r\n                                    return <div onClick={() => getInformation(\"hospital\", item)} key={index}\r\n                                                className=\"search-result\">\r\n                                        <div className=\"icon\">\r\n                                            <img src=\"./images/searchicon3.png\" alt=\"\"/>\r\n                                        </div>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </div>\r\n                                })}\r\n\r\n                                {filterResult.doctors.length > 0 && <div className=\"search-title\">{t(\"nav2\")}</div>}\r\n                                {filterResult.doctors && filterResult.doctors.map((item, index) => {\r\n                                    return <div onClick={() => getInformation(\"doctor\", item)} key={index}\r\n                                                className=\"search-result\">\r\n                                        <div className=\"icon\">\r\n                                            <img src=\"./images/searchicon1.png\" alt=\"\"/>\r\n                                        </div>\r\n                                        {item.translations[i18next.language].first_name} &nbsp;\r\n                                        {item.translations[i18next.language].last_name}\r\n                                    </div>\r\n                                })}\r\n\r\n                                {filterResult.pharmacy.length > 0 && <div className=\"search-title\">{t(\"nav3\")}</div>}\r\n                                {filterResult.pharmacy && filterResult.pharmacy.map((item, index) => {\r\n                                    return <div onClick={() => getInformation(\"pharmacy\", item)} key={index}\r\n                                                className=\"search-result\">\r\n                                        <div className=\"icon\">\r\n                                            <img src=\"./images/pill.png\" alt=\"\"/>\r\n                                        </div>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </div>\r\n                                })}\r\n\r\n                                {!filterResult.found && <div className=\"search-none\">\r\n                                    <div className=\"title\">{t(\"norFoundText1\")}</div>\r\n                                    <div className=\"des\">{t(\"norFoundText2\")}</div>\r\n                                </div>}\r\n                            </div>}\r\n                        </div>}\r\n\r\n                        {searchList && <div onClick={() => setSearchList(false)} className=\"xbtn\">\r\n                            <img src=\"./images/cancel.png\" alt=\"\"/>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={`profile ${profile ? \"active-profile\" : \"\"}`}>\r\n                    <div onClick={() => setProfile(!profile)} className=\"click-profile\"></div>\r\n                    <div className=\"user\">\r\n                        <img src=\"./images/user.png\" alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"menu-icon\">\r\n                        <img src=\"./images/menu.png\" alt=\"\"/>\r\n                    </div>\r\n\r\n                    {\r\n                        profile && <div className=\"profile-card\">\r\n                            <div className=\"content\">\r\n                                {localStorage.getItem(\"token\") ? <div className=\"user-profile\">\r\n                                        <div className=\"header-side\">\r\n                                            <div className=\"name\">\r\n                                                {i18next.language === \"uz\" && localStorage.getItem(\"nameUz\")}\r\n                                                {i18next.language === \"ru\" && localStorage.getItem(\"nameRu\")}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div onClick={() => {\r\n                                            localStorage.getItem(\"userType\") === \"Doctor\" && navigate(\"/profile-doctor\");\r\n                                            localStorage.getItem(\"userType\") === \"Hospital\" && navigate(\"/profile-hospital\");\r\n                                            localStorage.getItem(\"userType\") === \"Pharmacy\" && navigate(\"/profile-pharmacy\");\r\n                                        }} className=\"btns\">\r\n                                            <img src=\"./images/settings.png\" alt=\"\"/>\r\n                                            {t(\"settings\")}\r\n                                        </div>\r\n\r\n                                        {(localStorage.getItem(\"userType\") === \"Doctor\" ||\r\n                                            localStorage.getItem(\"userType\") === \"Hospital\") &&\r\n                                        <div onClick={() => {\r\n                                            navigate(\"/messages\");\r\n                                        }} className=\"btns\">\r\n                                            <img src=\"./images/email.png\" alt=\"\"/>\r\n                                            {t(\"messages\")}\r\n                                        </div>}\r\n\r\n                                        <div onClick={() => {\r\n                                            localStorage.removeItem(\"token\")\r\n                                            localStorage.removeItem(\"userId\")\r\n                                            localStorage.removeItem(\"nameUz\")\r\n                                            localStorage.removeItem(\"nameRu\")\r\n                                            window.location.reload()\r\n                                        }} className=\"btns\">\r\n                                            <img src=\"./images/log-out.png\" alt=\"\"/>\r\n                                            {t(\"log-out\")}\r\n                                        </div>\r\n\r\n                                    </div> :\r\n                                    <div className=\"register-card\">\r\n                                        <div onClick={() => navigate(\"/register\")} className=\"register-btn\">\r\n                                            {t(\"register\")}\r\n                                        </div>\r\n                                        <div onClick={() => navigate(\"/login\")} className=\"login-btn\">\r\n                                            {t(\"login\")}\r\n                                        </div>\r\n                                        <div className=\"des\">\r\n                                            {t(\"login-des\")}\r\n                                        </div>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Navbar","import \"./footer-style.scss\"\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const links = [\r\n        {name: t('nav1'), link: \"/\"},\r\n        {name: t(\"nav2\"), link: \"/doctors\"},\r\n        {name: t(\"nav4\"), link: \"/services\"},\r\n        {name: t(\"nav3\"), link: \"/pharmacies\"},\r\n        {name: t(\"saved\"), link: \"/saved\"},\r\n        {name: t(\"add-doctor\"), link: \"/register-doctor\"},\r\n        {name: t(\"add-clinic\"), link: \"/register-hospital\"},\r\n        {name: t(\"add-pharmacy\"), link: \"/register-pharmacies\"}\r\n    ];\r\n\r\n    return <>\r\n        <div className=\"footer-container\">\r\n            <div className=\"top-content\">\r\n                <div className=\"contents-footer\">\r\n                    {\r\n                        links.map((item, index) => {\r\n                            return <div onClick={()=>navigate(item.link)} key={index} className=\"links\">\r\n                                {item.name}\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"call\">\r\n                    <div className=\"title-call\">1060</div>\r\n                    <div className=\"des-call\">\r\n                        {t(\"des-footer\")}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"social-medias\">\r\n                    <div className=\"title-bot\">medos.uz</div>\r\n                    <div className=\"des-bot\">\r\n                        {t(\"des-footer2\")}\r\n                    </div>\r\n\r\n                    <div className=\"icon-social-media\">\r\n                        <a href=\"#\">\r\n                            <img src=\"./images/instagram.png\" alt=\"\"/>\r\n                        </a>\r\n                        <a href=\"#\">\r\n                            <img src=\"./images/facebook.png\" alt=\"\"/>\r\n                        </a>\r\n                        <a href=\"#\">\r\n                            <img src=\"./images/telegram.png\" alt=\"\"/>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"bottom-content-footer\">\r\n                <div className=\"text\">\r\n                    © 2024 medos.uz · {t(\"footer-text\")}\r\n                </div>\r\n                <div className=\"uzb\">\r\n                    <img src=\"./images/globe-pahrma.png\" alt=\"\"/>\r\n                    {t(\"uzb\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Footer","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import \"./loader-map.scss\";\r\nconst LoaderMap = () => {\r\n\r\n\r\n    return <>\r\n        <div className=\"spinner-container\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default LoaderMap;","import {InfoWindow, MarkerF, MarkerClustererF} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport i18next from \"i18next\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst ClinicMarkers = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const clinics = useSelector((store) => store.Clinics.data);\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n    const [clinicActiveId, setClinicActiveId] = useState(null);\r\n    const icon = {url: './images/Location-Pin.png', scaledSize: {width: 50, height: 55}};\r\n    const icon2 = {url: './images/Location-active.png', scaledSize: {width: 50, height: 55}};\r\n\r\n    const onMarkerClick = (location) => {\r\n        setSelectedLocation(location);\r\n    };\r\n\r\n    const onCloseClick = () => {\r\n        setSelectedLocation(null);\r\n        setClinicActiveId(null)\r\n    };\r\n\r\n    return <>\r\n\r\n        <MarkerClustererF gridSize={60}>\r\n            {(clusterer) =>\r\n                clinics.map((item, index) => {\r\n                    return <MarkerF\r\n                        key={index}\r\n                        position={{lat: Number(item.location.split(\",\")[0]), lng: Number(item.location.split(\",\")[1])}}\r\n                        icon={clinicActiveId === item.id ? icon2 : icon}\r\n                        onClick={() => {\r\n                            onMarkerClick(item);\r\n                            setClinicActiveId(item.id)\r\n                        }}\r\n                        clusterer={clusterer}\r\n                    />\r\n                })\r\n            }\r\n        </MarkerClustererF>\r\n\r\n\r\n        {selectedLocation && (<InfoWindow\r\n            position={{\r\n                lat: Number(selectedLocation.location.split(\",\")[0]),\r\n                lng: Number(selectedLocation.location.split(\",\")[1])\r\n            }}\r\n            onCloseClick={onCloseClick}\r\n        >\r\n            <div className=\"info-box-clinic\">\r\n                <div className=\"info-text\">\r\n                    <div className=\"photo-clinic\">\r\n                        <img src={selectedLocation.image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"title\">\r\n                            {selectedLocation.translations[i18next.language].name}\r\n                        </div>\r\n                        <div className=\"section-commit\">\r\n                            <div className=\"raiting\">\r\n                                {selectedLocation.avg_rating}\r\n                            </div>\r\n                            <div className=\"commit-count\">\r\n                                {selectedLocation.comment_count} ta izoh\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"section-location\">\r\n                            <div className=\"time-open\">\r\n                                <img src=\"./images/clock.png\" alt=\"\"/>\r\n                                {selectedLocation.open_24 ? \"24 soat ochiq\" : <>\r\n                                    {selectedLocation.start_time} dan\r\n                                    &nbsp;\r\n                                    {selectedLocation.end_time} gacha\r\n                                </>}\r\n                            </div>\r\n                        </div>\r\n                        <div onClick={() => {\r\n                            navigate(\"/about-clinic\");\r\n                            localStorage.setItem(\"clinicId\", selectedLocation.id);\r\n                            dispatch(getAboutMarker(selectedLocation.location))\r\n                        }} className=\"more-btn\">\r\n                            Ko'proq ko'rsatish\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </InfoWindow>)}\r\n    </>\r\n};\r\n\r\nexport default ClinicMarkers","import {InfoWindow, MarkerF, MarkerClustererF} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport i18next from \"i18next\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\n\r\nconst DoctorMarkers = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const Doctors = useSelector((store) => store.Doctors.data);\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n    const [clinicActiveId, setClinicActiveId] = useState(null);\r\n    const icon = {url: './images/pin-Doctor.png', scaledSize: {width: 50, height: 55}};\r\n    const icon2 = {url: './images/doctor-pin-active.png', scaledSize: {width: 40, height: 55}};\r\n\r\n    const onMarkerClick = (location) => {\r\n        setSelectedLocation(location);\r\n    };\r\n\r\n    const onCloseClick = () => {\r\n        setSelectedLocation(null);\r\n        setClinicActiveId(null)\r\n    };\r\n\r\n    return <>\r\n        <MarkerClustererF gridSize={60}>\r\n            {(clusterer) => Doctors.map((item, index) => {\r\n                return <MarkerF\r\n                    key={index}\r\n                    position={\r\n                        item.location ?\r\n                            {lat: Number(item.location.split(\",\")[0]), lng: Number(item.location.split(\",\")[1])} :\r\n                            {\r\n                                lat: Number(item.hospital.location.split(\",\")[0]),\r\n                                lng: Number(item.hospital.location.split(\",\")[1])\r\n                            }}\r\n                    icon={clinicActiveId === item.id ? icon2 : icon}\r\n                    onClick={() => {\r\n                        onMarkerClick(item);\r\n                        setClinicActiveId(item.id)\r\n                    }}\r\n                    clusterer={clusterer}\r\n                />\r\n            })}\r\n        </MarkerClustererF>\r\n\r\n        {selectedLocation && (<InfoWindow\r\n            position={\r\n                selectedLocation.location ?\r\n                    {\r\n                        lat: Number(selectedLocation.location.split(\",\")[0]),\r\n                        lng: Number(selectedLocation.location.split(\",\")[1])\r\n                    } :\r\n                    {\r\n                        lat: Number(selectedLocation.hospital.location.split(\",\")[0]),\r\n                        lng: Number(selectedLocation.hospital.location.split(\",\")[1])\r\n                    }\r\n            }\r\n            onCloseClick={onCloseClick}\r\n        >\r\n            <div className=\"info-box-clinic\">\r\n                <div className=\"info-text\">\r\n                    <div className=\"photo-clinic\">\r\n                        <img src={selectedLocation.image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"header-clinic\">\r\n                            <div className=\"name-clinic\">\r\n                                {selectedLocation.translations[i18next.language].first_name} &nbsp;\r\n                                {selectedLocation.translations[i18next.language].last_name} &nbsp;\r\n                                {selectedLocation.translations[i18next.language].middle_name}\r\n                            </div>\r\n\r\n                            <div className=\"section-commit\">\r\n                                <div className=\"raiting\">\r\n                                    <img src=\"./images/star.png\" alt=\"\"/>\r\n                                    {selectedLocation.avg_rating}\r\n                                </div>\r\n                                <span></span>\r\n                                <div className=\"commit-count\">\r\n                                    {selectedLocation.comment_count} ta izoh\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"section-location\">\r\n                            <div className=\"location\">\r\n                                <img src=\"./images/job.png\" alt=\"\"/>\r\n                                {selectedLocation.specialty.translations[i18next.language].name}\r\n                            </div>\r\n                            <span></span>\r\n                            <div className=\"time-open\">\r\n                                {selectedLocation.experience} yillik tajriba\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"section-location\">\r\n                            <div className=\"location\">\r\n                                <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                {selectedLocation.hospital ? selectedLocation.hospital.translations[i18next.language].address :\r\n                                    selectedLocation.translations[i18next.language].address}\r\n                            </div>\r\n\r\n                            {selectedLocation.hospital ?\r\n                                <>\r\n                                    <span></span>\r\n                                    <div className=\"time-open\">\r\n                                        {selectedLocation.hospital.translations[i18next.language].name}\r\n                                    </div>\r\n                                </> : \"\"}\r\n                        </div>\r\n\r\n                        <div className=\"section-location\">\r\n                            <div className=\"location\">\r\n                                <img src=\"./images/time.png\" alt=\"\"/>\r\n                                {selectedLocation.working_days.map((item, index) => {\r\n                                    return <p key={index}>\r\n                                        {item.translations[i18next.language].day}\r\n                                    </p>\r\n                                })}\r\n                            </div>\r\n                            <span></span>\r\n                            <div className=\"time-open\">\r\n                                {selectedLocation.start_time} dan\r\n                                &nbsp;\r\n                                {selectedLocation.end_time} gacha\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"buttons\">\r\n                            <div onClick={() => {\r\n                                localStorage.setItem(\"doctorId\", selectedLocation.id)\r\n                                navigate(\"/about-doctor\")\r\n                                dispatch(getAboutMarker(selectedLocation.location ? selectedLocation.location : selectedLocation.hospital.location))\r\n                            }} className=\"more-btn\">\r\n                                Ko'proq ko'rsatish\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </InfoWindow>)}\r\n    </>\r\n};\r\n\r\nexport default DoctorMarkers","import {InfoWindow, MarkerClustererF, MarkerF} from \"@react-google-maps/api\";\r\nimport {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport i18next from \"i18next\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\n\r\nconst PharmaciesMarkers = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const Pharmacies = useSelector((store) => store.Pharmacies.data);\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n    const [clinicActiveId, setClinicActiveId] = useState(null);\r\n    const icon = {url: './images/pharma-pin.png', scaledSize: {width: 50, height: 55}};\r\n    const icon2 = {url: './images/pharma-pin-active.png', scaledSize: {width: 50, height: 55}};\r\n\r\n    const onMarkerClick = (location) => {\r\n        setSelectedLocation(location);\r\n    };\r\n\r\n    const onCloseClick = () => {\r\n        setSelectedLocation(null);\r\n        setClinicActiveId(null)\r\n    };\r\n\r\n    const isPlaceOpen = (startTime, endTime) => {\r\n        const startParts = startTime.split(':');\r\n        const endParts = endTime.split(':');\r\n\r\n        const startDate = new Date();\r\n        startDate.setHours(startParts[0], startParts[1], startParts[2]);\r\n\r\n        const endDate = new Date();\r\n        endDate.setHours(endParts[0], endParts[1], endParts[2]);\r\n\r\n        const now = new Date();\r\n\r\n        return now >= startDate && now <= endDate;\r\n    };\r\n\r\n    return <>\r\n        <MarkerClustererF gridSize={60}>\r\n            {(clusterer) => Pharmacies.map((item, index) => {\r\n                return <MarkerF\r\n                    key={index}\r\n                    position={{lat: Number(item.location.split(\",\")[0]), lng: Number(item.location.split(\",\")[1])}}\r\n                    icon={clinicActiveId === item.id ? icon2 : icon}\r\n                    onClick={() => {\r\n                        onMarkerClick(item);\r\n                        setClinicActiveId(item.id)\r\n                    }}\r\n                    clusterer={clusterer}\r\n                />\r\n            })}\r\n        </MarkerClustererF>\r\n\r\n        {selectedLocation && (<InfoWindow\r\n            position={{\r\n                lat: Number(selectedLocation.location.split(\",\")[0]),\r\n                lng: Number(selectedLocation.location.split(\",\")[1])\r\n            }}\r\n            onCloseClick={onCloseClick}\r\n        >\r\n            <div className=\"info-box-clinic\">\r\n                <div className=\"info-text\">\r\n                    <div className=\"photo-clinic\">\r\n                        <img src={selectedLocation.image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"header-clinic\">\r\n                            <div className=\"name-clinic\">\r\n                                {selectedLocation.translations[i18next.language].name}\r\n                            </div>\r\n\r\n                            <div className=\"section-commit\">\r\n                                <div className=\"raiting\">\r\n                                    <img src=\"./images/star2.png\" alt=\"\"/>\r\n                                    {selectedLocation.avg_rating}\r\n                                </div>\r\n                                <span></span>\r\n                                <div className=\"commit-count\">\r\n                                    ({selectedLocation.comment_count})\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"section-location\">\r\n                            <div className=\"location\">\r\n                                <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                {selectedLocation.translations[i18next.language].address}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"section-location\">\r\n                            <div className=\"location\">\r\n                                <img src=\"./images/time.png\" alt=\"\"/>\r\n                                {selectedLocation.open_24 ? <div\r\n                                    className=\"open\">Ochiq</div> : isPlaceOpen(selectedLocation.start_time, selectedLocation.end_time) ?\r\n                                    <div className=\"open\">Ochiq</div> :\r\n                                    <div className=\"close\">Yopiq</div>}\r\n                            </div>\r\n\r\n                            <span></span>\r\n                            <div className=\"time-open\">\r\n                                {selectedLocation.open_24 ? \"24 soat ochiq\" : <>\r\n                                    {selectedLocation.start_time} dan\r\n                                    &nbsp;\r\n                                    {selectedLocation.end_time} gacha\r\n                                </>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"buttons\">\r\n                            <div onClick={() => {\r\n                                localStorage.setItem(\"pharmacyId\", selectedLocation.id);\r\n                                dispatch(getAboutMarker(selectedLocation.location));\r\n                                navigate(\"/about-pharmacies\")\r\n                            }} className=\"more-btn\">\r\n                                Ko'proq ko'rsatish\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </InfoWindow>)}\r\n    </>\r\n};\r\n\r\nexport default PharmaciesMarkers","import {MarkerF} from \"@react-google-maps/api\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst AboutMarker = () => {\r\n    const aboutMarker = useSelector((store) => store.MarkerAbout.data);\r\n    const icon = {url: './images/address.png', scaledSize: {width: 50, height: 65}};\r\n    let location = {lat: Number(aboutMarker.split(\",\")[0]), lng: Number(aboutMarker.split(\",\")[1])};\r\n    return <>\r\n        <MarkerF\r\n            key={location.lat}\r\n            position={location}\r\n            icon={icon}\r\n        />\r\n    </>\r\n};\r\n\r\nexport default AboutMarker","import {useEffect, useState, useMemo} from \"react\";\r\nimport {GoogleMap, useLoadScript} from \"@react-google-maps/api\";\r\nimport i18next from \"i18next\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"./googleMapsApi\";\r\nimport axios from \"axios\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLocation} from \"../../redux/locationUser\";\r\nimport {show} from \"../../redux/show-map\";\r\nimport LoaderMap from \"./loader-map/LoaderMap\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport ClinicMarkers from \"./ClinicMarkers\";\r\nimport DoctorMarkers from \"./DoctorMarkers\";\r\nimport PharmaciesMarkers from \"./PharmaciesMarkers\";\r\nimport AboutMarker from \"./AboutMarker\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst Map = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [onloadMap, setOnloadMap] = useState(false)\r\n    const location = useSelector((store) => store.LocationUser.data);\r\n    const showMap = useSelector((store) => store.ShowMap.data);\r\n    const [center, setCenter] = useState(null)\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\r\n        libraries: libraries,\r\n        language: i18next.language,\r\n    });\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n    const options = useMemo(\r\n        () => ({\r\n            disableDefaultUI: false,\r\n            clickableIcons: false\r\n        }),\r\n        []\r\n    );\r\n\r\n    // useEffect(() => {\r\n    //     navigator.geolocation.getCurrentPosition((position) => {\r\n    //         const {latitude, longitude} = position.coords;\r\n    //         let locMy = {lat: Number(latitude), lng: Number(longitude)}\r\n    //         setCenter(locMy)\r\n    //     });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        if (isLoaded) {\r\n            setOnloadMap(true);\r\n        }\r\n    }, [isLoaded]);\r\n\r\n    useEffect(() => {\r\n        let locMy = {lat: Number(location.latitude), lng: Number(location.longitude)};\r\n        setCenter(locMy)\r\n    }, [location]);\r\n\r\n    const myLocation = () => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": i18next.language}}).then((res) => {\r\n                let regionkey = regions.findIndex(region => region.name === res.data.address.city)\r\n                const location = {\r\n                    key: regionkey,\r\n                    \"city\": res.data.address.city,\r\n                    \"latitude\": latitude,\r\n                    \"longitude\": longitude\r\n                };\r\n                dispatch(getLocation(location));\r\n            });\r\n        });\r\n    };\r\n\r\n    if (!isLoaded) return <LoaderMap/>;\r\n    return <>\r\n        <GoogleMap\r\n            zoom={9}\r\n            center={center}\r\n            options={options}\r\n            mapContainerClassName=\"map\"\r\n            onLoad={() => setOnloadMap(true)}\r\n        >\r\n            <div onClick={myLocation} className=\"my-location\">\r\n                <img src=\"./images/direction.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div onClick={() => dispatch(show(!showMap))} className=\"show-hide-btn\">\r\n                <img className={showMap ? \"hide-img\" : \"\"} src=\"./images/Vector.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            {onloadMap && window.location.pathname === \"/\" && <ClinicMarkers/>}\r\n            {onloadMap && window.location.pathname === \"/doctors\" && <DoctorMarkers/>}\r\n            {onloadMap && window.location.pathname === \"/pharmacies\" && <PharmaciesMarkers/>}\r\n        </GoogleMap>\r\n    </>\r\n};\r\n\r\nexport default Map","import \"./style.scss\"\r\nimport {NavLink, useNavigate} from \"react-router-dom\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst MobileNavbar = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n\r\n    const Menus = [\r\n        {\r\n            name: t('nav1'),\r\n            url: \"/\",\r\n            icon: \"clinic\"\r\n        },\r\n        {\r\n            name: t('nav2'),\r\n            url: \"/doctors\",\r\n            icon: \"doctor\"\r\n        },\r\n        {\r\n            name: t('nav3'),\r\n            url: \"/pharmacies\",\r\n            icon: \"pharmacy\"\r\n        },\r\n        {\r\n            name: t('nav4'),\r\n            url: \"/services\",\r\n            icon: \"service\"\r\n        }\r\n    ];\r\n\r\n    return <div className=\"mobile-navbar\">\r\n        <div className=\"menu-wrapper\">\r\n            {\r\n                Menus.map((item, index) => {\r\n                    return <NavLink to={item.url} key={index}\r\n                                    className={`menu-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\r\n\r\n                        <div className=\"icon\">\r\n                            <div className={`icons ${item.icon}`}/>\r\n                        </div>\r\n\r\n                        <span> {item.name}</span>\r\n                    </NavLink>\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default MobileNavbar","import \"./style-clinics.scss\";\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {MenuItem, InputLabel, FormControl, Select} from \"@mui/material\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Footer from \"../footer/Footer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Map from \"../map/Map\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport axios from \"axios\";\r\nimport {getLocation} from \"../../redux/locationUser\";\r\nimport {getClinics} from \"../../redux/clinics\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\nimport {show} from \"../../redux/show-map\";\r\n\r\n\r\nconst Clinics = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const {t} = useTranslation();\r\n    const clinics = useSelector((store) => store.Clinics.data);\r\n    const filterService = useSelector((store) => store.Menu.data);\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const showMap = useSelector((store) => store.ShowMap.data);\r\n    const location = useSelector((store) => store.LocationUser.data);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [regionSelect, setRegionSelect] = useState(\"\");\r\n    const [hospitalList, setHospitalList] = useState([]);\r\n    const [hospitalType, setHospitalType] = useState(\"\");\r\n    const [region, setRegion] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [speciality, setSpeciality] = useState(\"\");\r\n    const [working24, setWorking24] = useState(\"\");\r\n    const [disable, setDisable] = useState(\"\");\r\n    const [savedPosts, setSavedPosts] = useState([]);\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}hospital-type/`).then((response) => {\r\n            setHospitalList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}speciality/`).then((response) => {\r\n            setServiceList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        setSavedPosts(getSavedPosts())\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (location.key + 1 && !filterService) {\r\n            filterHospital(hospitalType, location.key + 1, type, speciality, working24, disable);\r\n            setRegion(location.key + 1);\r\n            setRegionSelect(location.key)\r\n        }\r\n    }, [location]);\r\n\r\n    const ShowModal = (status, item) => {\r\n        dispatch(showModals({show: true, status, item}))\r\n    };\r\n\r\n    const filterHospital = (hospital_type_key, region_key, type_key, speciality_key, open_24_key, disabled_key) => {\r\n        let filterBox = {\r\n            hospital_type: hospital_type_key,\r\n            region: region_key,\r\n            type: type_key,\r\n            speciality: speciality_key,\r\n            open_24: open_24_key,\r\n            disabled: disabled_key\r\n        };\r\n\r\n        const queryString = Object.entries(filterBox)\r\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n            .join('&');\r\n\r\n        axios.get(`${baseUrl}hospital/?${queryString}`).then((response) => {\r\n            dispatch(getClinics(response.data));\r\n        })\r\n    };\r\n\r\n    const changeRegion = (region, index) => {\r\n        const location = {key: index, \"city\": region.name, \"latitude\": region.latitude, \"longitude\": region.longitude};\r\n        dispatch(getLocation(location));\r\n    };\r\n\r\n    const getSavedPosts = () => {\r\n        const savedPosts = localStorage.getItem('hospital_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n\r\n    const handleSaveClick = (postId) => {\r\n        let updatedSavedPosts = [...savedPosts];\r\n\r\n        if (savedPosts.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('hospital_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPosts(updatedSavedPosts);\r\n    };\r\n\r\n    return <>\r\n        <div className=\"clinics-wrapper\">\r\n            <Navbar/>\r\n            <div className=\"clinics-list\">\r\n                <div className=\"category-wrapper\">\r\n                    {\r\n                        hospitalList.map((item, index) => {\r\n                            return <div key={index}>\r\n                                <div onClick={() => {\r\n                                    setHospitalType(item.id)\r\n                                    filterHospital(item.id, region, type, speciality, working24, disable);\r\n                                }}\r\n                                     className={`category-name ${hospitalType === item.id ? \"active\" : \"\"}`}>\r\n                                    {item.translations[i18next.language].name}\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"bottom-content\">\r\n                    <div className={showMap ? \"left-side-hide\" : \"left-side\"}>\r\n                        <div className=\"category-wrapper\">\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                                 className=\"selectProfessional\">\r\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"region\")}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={regionSelect}\r\n                                            label={t(\"region\")}\r\n                                            onChange={(e) => {\r\n                                                setRegion(e.target.value)\r\n                                                setRegionSelect(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            {regions.map((item, index) => {\r\n                                                return <MenuItem onClick={() => changeRegion(item, index)}\r\n                                                                 key={index + 1}\r\n                                                                 value={index}>\r\n                                                    {item.name}\r\n                                                </MenuItem>\r\n                                            })}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                                 className=\"selectHospitalType\">\r\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"hospital_type\")}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={type}\r\n                                            label={t(\"hospital_type\")}\r\n                                            onChange={(e) => {\r\n                                                filterHospital(hospitalType, region, e.target.value, speciality, working24, disable);\r\n                                                setType(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value={1}>{t(\"hospital_type1\")}</MenuItem>\r\n                                            <MenuItem value={2}>{t(\"hospital_type2\")}</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                                 className=\"selectProfessional\">\r\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"expertise\")}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={speciality}\r\n                                            label={t(\"expertise\")}\r\n                                            onChange={(e) => {\r\n                                                filterHospital(hospitalType, region, type, e.target.value, working24, disable);\r\n                                                setSpeciality(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            {serviceList.map((item, index) => {\r\n                                                return <MenuItem key={index} value={item.id}>\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </MenuItem>\r\n                                            })}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <div onClick={() => {\r\n                                        filterHospital(hospitalType, region, type, speciality, !working24, disable);\r\n                                        setWorking24(!working24)\r\n                                    }}\r\n                                         className={`button-filter ${working24 ? \"active-filter-btn\" : \"\"}`}>\r\n                                        {t(\"open24\")}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <div onClick={() => {\r\n                                        filterHospital(hospitalType, region, type, speciality, working24, !disable);\r\n                                        setDisable(!disable)\r\n                                    }}\r\n                                         className={`button-filter ${disable ? \"active-filter-btn\" : \"\"}`}>\r\n                                        {t(\"disable\")}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {!showMap && <div className=\"clinics\">\r\n                            {clinics.map((item, index) => {\r\n                                return <div key={index} className=\"clinic\">\r\n                                    <div className=\"left-side\">\r\n                                        <img src={item.image} alt=\"\"/>\r\n                                        <div className=\"like\">\r\n                                            <img onClick={() => handleSaveClick(item.id)}\r\n                                                 src={savedPosts.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                                                 alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"right-side\">\r\n                                        <div className=\"header-clinic\">\r\n                                            <div className=\"name-clinic\">\r\n                                                {item.translations[i18next.language].name}\r\n                                            </div>\r\n                                            <div className=\"buttons\">\r\n                                                <div onClick={() => ShowModal(\"contact\", item)}\r\n                                                     className=\"button-call\">{t(\"call\")}\r\n                                                </div>\r\n                                                <div onClick={() => ShowModal(\"sms\", item.user)}\r\n                                                     className=\"button-send\">{t(\"acceptance2\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"section-commit\">\r\n                                            <div className=\"raiting\">\r\n                                                {item.avg_rating}\r\n                                            </div>\r\n                                            <div className=\"commit-count\">\r\n                                                {item.comment_count} {t(\"comment\")}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"section-location\">\r\n                                            <div className=\"location\">\r\n                                                <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                                {item.translations[i18next.language].address}\r\n                                            </div>\r\n                                            <div className=\"time-open\">\r\n                                                <img src=\"./images/clock.png\" alt=\"\"/>\r\n\r\n                                                {item.open_24 ? \"24 soat ochiq\" : <>\r\n                                                    {item.start_time} {t(\"from\")}\r\n                                                    &nbsp;\r\n                                                    {item.end_time} {t(\"to\")}\r\n                                                </>}\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"services\">\r\n                                            {item.hospital_services.map((item, index) => {\r\n                                                return <div key={index} className=\"service\">\r\n                                                    {item.service.translations[i18next.language].name}\r\n                                                </div>\r\n                                            })}\r\n                                        </div>\r\n                                        <div onClick={() => {\r\n                                            navigate(\"/about-clinic\");\r\n                                            localStorage.setItem(\"clinicId\", item.id);\r\n                                            dispatch(getAboutMarker(item.location))\r\n                                        }} className=\"more-btn\">\r\n                                            {t(\"more\")}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                            <Footer/>\r\n                        </div>}\r\n                    </div>\r\n                    <div className={`right-side ${showMap ? \"show-map\" : \"\"}`}>\r\n                        <Map/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div onClick={() => dispatch(show(!showMap))} className=\"map-mobile\">\r\n                {showMap ? <img className=\"prev-to\" src=\"./images/next-btn.png\" alt=\"\"/> :\r\n                    <img src=\"./images/map-mobile.png\" alt=\"\"/>}\r\n                {showMap ? t(\"prev\") : t(\"map\")}\r\n            </div>\r\n            <div className=\"mobile-navbar-container\">\r\n                <MobileNavbar/>\r\n            </div>\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Clinics","import \"./style-doctors.scss\";\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Map from \"../map/Map\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\r\nimport {getLocation} from \"../../redux/locationUser\";\r\nimport {show} from \"../../redux/show-map\";\r\nimport {getDoctor} from \"../../redux/doctors\";\r\nimport axios from \"axios\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\n\r\nconst Doctors = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const filterService = useSelector((store) => store.Menu.data);\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const Doctors = useSelector((store) => store.Doctors.data);\r\n    const showMap = useSelector((store) => store.ShowMap.data);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [regionSelect, setRegionSelect] = useState(\"\");\r\n    const [region, setRegion] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [cost, setCost] = useState(\"\");\r\n    const [speciality, setSpeciality] = useState(\"\");\r\n    const [savedPosts, setSavedPosts] = useState([]);\r\n\r\n    const location = useSelector((store) => store.LocationUser.data);\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}speciality/`).then((response) => {\r\n            setServiceList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        setSavedPosts(getSavedPosts())\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (location.key + 1 && !filterService) {\r\n            filterHospital(location.key + 1, gender, cost, speciality);\r\n            setRegion(location.key + 1);\r\n            setRegionSelect(location.key)\r\n        }\r\n    }, [location]);\r\n\r\n    const filterHospital = (region_key, gender_key, cost_key, speciality_key) => {\r\n        let filterBox = {\r\n            region: region_key,\r\n            gender: gender_key,\r\n            cost: cost_key,\r\n            specialty: speciality_key,\r\n        };\r\n\r\n        const queryString = Object.entries(filterBox)\r\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n            .join('&');\r\n\r\n        axios.get(`${baseUrl}doctor/?${queryString}`).then((response) => {\r\n            dispatch(getDoctor(response.data));\r\n        })\r\n    };\r\n\r\n    const changeRegion = (region, index) => {\r\n        const location = {key: index, \"city\": region.name, \"latitude\": region.latitude, \"longitude\": region.longitude};\r\n        dispatch(getLocation(location));\r\n    };\r\n\r\n    const ShowModal = (status, item) => {\r\n        dispatch(showModals({show: true, status, item}))\r\n    };\r\n\r\n    const getSavedPosts = () => {\r\n        const savedPosts = localStorage.getItem('doctor_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n\r\n    const handleSaveClick = (postId) => {\r\n        let updatedSavedPosts = [...savedPosts];\r\n\r\n        if (savedPosts.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('doctor_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPosts(updatedSavedPosts);\r\n    };\r\n\r\n    return <>\r\n        <div className=\"doctors-wrapper\">\r\n            <Navbar/>\r\n            <div className=\"doctors-list\">\r\n                <div className=\"bottom-content\">\r\n                    <div className={showMap ? \"left-side-hide\" : \"left-side\"}>\r\n                        <div className=\"category-wrapper\">\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                                 className=\"selectProfessional\">\r\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"region\")}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={regionSelect}\r\n                                            label={t(\"region\")}\r\n                                            onChange={(e) => {\r\n                                                setRegion(e.target.value)\r\n                                                setRegionSelect(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            {regions.map((item, index) => {\r\n                                                return <MenuItem onClick={() => changeRegion(item, index)}\r\n                                                                 key={index + 1}\r\n                                                                 value={index}>\r\n                                                    {item.name}\r\n                                                </MenuItem>\r\n                                            })}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                                 className=\"selectHospitalType\">\r\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"gender\")}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={gender}\r\n                                            label={t(\"gender\")}\r\n                                            onChange={(e) => {\r\n                                                filterHospital(region, e.target.value, cost, speciality);\r\n                                                setGender(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value={true}>{t(\"men\")}</MenuItem>\r\n                                            <MenuItem value={false}>{t(\"women\")}</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                                 className=\"price\">\r\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"price\")}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={cost}\r\n                                            label={\"price\"}\r\n                                            onChange={(e) => {\r\n                                                filterHospital(region, gender, e.target.value, speciality);\r\n                                                setCost(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value={true}>{t(\"cheap\")}</MenuItem>\r\n                                            <MenuItem value={false}>{t(\"expensive\")}</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                                 className=\"selectProfessional\">\r\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"expertise\")}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={speciality}\r\n                                            label={t(\"expertise\")}\r\n                                            onChange={(e) => {\r\n                                                filterHospital(region, gender, cost, e.target.value);\r\n                                                setSpeciality(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            {serviceList.map((item, index) => {\r\n                                                return <MenuItem key={index} value={item.id}>\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </MenuItem>\r\n                                            })}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {!showMap && <div className=\"doctors\">\r\n\r\n                            {Doctors.map((item, index) => {\r\n                                return <div key={index} className=\"doctor\">\r\n                                    <div className=\"left-side\">\r\n                                        <img src={item.image} alt=\"\"/>\r\n                                        <div className=\"like\">\r\n                                            <img onClick={() => handleSaveClick(item.id)}\r\n                                                 src={savedPosts.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                                                 alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"right-side\">\r\n                                        <div className=\"header-clinic\">\r\n                                            <div className=\"name-clinic\">\r\n                                                {item.translations[i18next.language].first_name} &nbsp;\r\n                                                {item.translations[i18next.language].last_name} &nbsp;\r\n                                                {item.translations[i18next.language].middle_name}\r\n                                            </div>\r\n\r\n                                            <div className=\"section-commit\">\r\n                                                <div className=\"raiting\">\r\n                                                    <img src=\"./images/star.png\" alt=\"\"/>\r\n                                                    {item.avg_rating}\r\n                                                </div>\r\n                                                <span></span>\r\n                                                <div className=\"commit-count\">\r\n                                                    {item.comment_count} {t(\"comment\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"section-location\">\r\n                                            <div className=\"location\">\r\n                                                <img src=\"./images/job.png\" alt=\"\"/>\r\n                                                {item.specialty.translations[i18next.language].name}\r\n                                            </div>\r\n                                            <span></span>\r\n                                            <div className=\"time-open\">\r\n                                                {item.experience} {t(\"experience\")}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"section-location\">\r\n                                            <div className=\"location\">\r\n                                                <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                                {item.hospital ? item.hospital.translations[i18next.language].address :\r\n                                                    item.translations[i18next.language].address}\r\n                                            </div>\r\n\r\n                                            {item.hospital ?\r\n                                                <>\r\n                                                    <span></span>\r\n                                                    <div className=\"time-open\">\r\n                                                        {item.hospital.translations[i18next.language].name}\r\n                                                    </div>\r\n                                                </> : \"\"}\r\n                                        </div>\r\n\r\n                                        <div className=\"section-location-working-days\">\r\n                                            <div className=\"location\">\r\n                                                <img src=\"./images/time.png\" alt=\"\"/>\r\n                                                {item.working_days.map((item, index) => {\r\n                                                    return <p key={index}>\r\n                                                        &nbsp;\r\n                                                        {item.translations[i18next.language].day},\r\n                                                    </p>\r\n                                                })}\r\n                                            </div>\r\n                                            <br/>\r\n                                            <div className=\"time-open\">\r\n                                                <img src=\"./images/clock.png\" alt=\"\"/>\r\n                                                {item.start_time} {t(\"from\")}\r\n                                                &nbsp;\r\n                                                {item.end_time} {t(\"to\")}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"services\">\r\n                                            {item.sub_speciality.map((item, index) => {\r\n                                                return <div key={index} className=\"service\">\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </div>\r\n                                            })}\r\n                                        </div>\r\n\r\n                                        <div className=\"prices\">\r\n                                            <div className=\"item-price\">\r\n                                                <div className=\"title\">{t(\"first-consultation\")}</div>\r\n                                                <div className=\"number\">\r\n                                                    {item.consultation_fee ? <>{item.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"item-price\">\r\n                                                <div className=\"title\">{t(\"second-consultation\")}</div>\r\n                                                <div className=\"number\">\r\n                                                    {item.second_consultation_fee ?\r\n                                                        <>{item.second_consultation_fee} {t(\"sum\")} </> :\r\n                                                        t(\"agreement\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"buttons\">\r\n                                            <div className=\"left-btn\">\r\n                                                <div onClick={() => ShowModal(\"sms\", item.user)}\r\n                                                     className=\"button-send\">\r\n                                                    {t(\"acceptance\")}\r\n                                                </div>\r\n                                                <div onClick={() => ShowModal(\"contact\", item)}\r\n                                                     className=\"button-call\">\r\n                                                    {t(\"call\")}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div onClick={() => {\r\n                                                localStorage.setItem(\"doctorId\", item.id)\r\n                                                navigate(\"/about-doctor\")\r\n                                                dispatch(getAboutMarker(item.location ? item.location : item.hospital.location))\r\n                                            }} className=\"more-btn\">\r\n                                                {t(\"more\")}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n\r\n\r\n                            {/*<div className=\"pagination-box\">*/}\r\n                            {/*    <div className=\"prev-btn\">*/}\r\n                            {/*        <img src=\"./images/arrow.png\" alt=\"\"/>*/}\r\n                            {/*    </div>*/}\r\n\r\n                            {/*    <div className=\"pagination-items\">*/}\r\n                            {/*        1*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"pagination-items\">*/}\r\n                            {/*        2*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"pagination-items\">*/}\r\n                            {/*        3*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"pagination-items\">*/}\r\n                            {/*        4*/}\r\n                            {/*    </div>*/}\r\n\r\n                            {/*    <div className=\"next-btn\">*/}\r\n                            {/*        <img src=\"./images/arrow.png\" alt=\"\"/>*/}\r\n                            {/*    </div>*/}\r\n                            {/*</div>*/}\r\n                            <Footer/>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <div className={`right-side ${showMap ? \"show-map\" : \"\"}`}>\r\n                        <Map/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div onClick={() => dispatch(show(!showMap))} className=\"map-mobile\">\r\n                {showMap ? <img className=\"prev-to\" src=\"./images/next-btn.png\" alt=\"\"/> :\r\n                    <img src=\"./images/map-mobile.png\" alt=\"\"/>}\r\n                {showMap ? t(\"prev\") : t(\"map\")}\r\n            </div>\r\n            <div className=\"mobile-navbar-container\">\r\n                <MobileNavbar/>\r\n            </div>\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Doctors","import \"./style-pharmacies.scss\";\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Map from \"../map/Map\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\r\nimport {getLocation} from \"../../redux/locationUser\";\r\nimport {show} from \"../../redux/show-map\";\r\nimport {getPharmacies} from \"../../redux/pharmacies\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\nimport axios from \"axios\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\n\r\n\r\nconst Pharmacies = () => {\r\n    const {t} = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const filterService = useSelector((store) => store.Menu.data);\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const Pharmacies = useSelector((store) => store.Pharmacies.data);\r\n    const location = useSelector((store) => store.LocationUser.data);\r\n    const showMap = useSelector((store) => store.ShowMap.data);\r\n    const [regionSelect, setRegionSelect] = useState(\"\");\r\n    const [working24, setWorking24] = useState(\"\");\r\n    const [region, setRegion] = useState(\"\");\r\n    const [savedPosts, setSavedPosts] = useState([]);\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    const isPlaceOpen = (startTime, endTime) => {\r\n        const startParts = startTime.split(':');\r\n        const endParts = endTime.split(':');\r\n\r\n        const startDate = new Date();\r\n        startDate.setHours(startParts[0], startParts[1], startParts[2]);\r\n\r\n        const endDate = new Date();\r\n        endDate.setHours(endParts[0], endParts[1], endParts[2]);\r\n\r\n        const now = new Date();\r\n\r\n        return now >= startDate && now <= endDate;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (location.key + 1 && !filterService) {\r\n            filterHospital(location.key + 1, working24);\r\n            setRegion(location.key + 1);\r\n            setRegionSelect(location.key)\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        setSavedPosts(getSavedPosts())\r\n    }, []);\r\n\r\n    const filterHospital = (region_key, open_24_key) => {\r\n        let filterBox = {\r\n            region: region_key,\r\n            open_24: open_24_key\r\n        };\r\n\r\n        const queryString = Object.entries(filterBox)\r\n            .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n            .join('&');\r\n\r\n        axios.get(`${baseUrl}pharmacy/?${queryString}`).then((response) => {\r\n            dispatch(getPharmacies(response.data));\r\n        })\r\n    };\r\n\r\n    const changeRegion = (region, index) => {\r\n        const location = {key: index, \"city\": region.name, \"latitude\": region.latitude, \"longitude\": region.longitude};\r\n        dispatch(getLocation(location));\r\n    };\r\n\r\n    const getSavedPosts = () => {\r\n        const savedPosts = localStorage.getItem('pharmacy_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n\r\n    const handleSaveClick = (postId) => {\r\n        let updatedSavedPosts = [...savedPosts];\r\n\r\n        if (savedPosts.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('pharmacy_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPosts(updatedSavedPosts);\r\n    };\r\n\r\n    return <>\r\n        <div className=\"pharmacies-wrapper\">\r\n            <Navbar/>\r\n            <div className=\"pharmacies-list\">\r\n                <div className=\"bottom-content\">\r\n                    <div className={showMap ? \"left-side-hide\" : \"left-side\"}>\r\n                        <div className=\"category-wrapper\">\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                                 className=\"selectProfessional\">\r\n                                        <InputLabel id=\"demo-select-large-label\">{t(\"region\")}</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={regionSelect}\r\n                                            label={t(\"region\")}\r\n                                            onChange={(e) => {\r\n                                                setRegion(e.target.value)\r\n                                                setRegionSelect(e.target.value)\r\n                                            }}\r\n                                        >\r\n                                            {regions.map((item, index) => {\r\n                                                return <MenuItem onClick={() => changeRegion(item, index)}\r\n                                                                 key={index + 1}\r\n                                                                 value={index}>\r\n                                                    {item.name}\r\n                                                </MenuItem>\r\n                                            })}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"dropdown-filter\">\r\n                                    <div onClick={() => {\r\n                                        filterHospital(region, !working24);\r\n                                        setWorking24(!working24)\r\n                                    }}\r\n                                         className={`button-filter ${working24 ? \"active-filter-btn\" : \"\"}`}>\r\n                                        {t(\"open24\")}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {!showMap && <div className=\"pharmacies\">\r\n                            <div className=\"pharmacies-box\">\r\n                                {\r\n                                    Pharmacies.map((item, index) => {\r\n                                        return <div key={index} className=\"pharma\">\r\n                                            <div className=\"left-side\">\r\n                                                <img src={item.image} alt=\"\"/>\r\n                                                <div className=\"like\">\r\n                                                    <img onClick={() => handleSaveClick(item.id)}\r\n                                                         src={savedPosts.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                                                         alt=\"\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"right-side\">\r\n                                                <div className=\"header-clinic\">\r\n                                                    <div className=\"name-clinic\">\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </div>\r\n                                                    <div className=\"section-commit\">\r\n                                                        <div className=\"raiting\">\r\n                                                            <img src=\"./images/star2.png\" alt=\"\"/>\r\n                                                            {item.avg_rating}\r\n                                                        </div>\r\n                                                        <span></span>\r\n                                                        <div className=\"commit-count\">\r\n                                                            ({item.comment_count})\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"section-location\">\r\n                                                    <div className=\"location\">\r\n                                                        <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                                        {item.translations[i18next.language].address}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"section-location\">\r\n                                                    <div className=\"location\">\r\n                                                        <img src=\"./images/time.png\" alt=\"\"/>\r\n                                                        {item.open_24 ? <div\r\n                                                            className=\"open\">{t(\"open\")}</div> : isPlaceOpen(item.start_time, item.end_time) ?\r\n                                                            <div className=\"open\">{t(\"open\")}</div> :\r\n                                                            <div className=\"close\">{t(\"close\")}</div>}\r\n                                                    </div>\r\n                                                    <span></span>\r\n                                                    <div className=\"time-open\">\r\n                                                        {item.open_24 ? \"24 soat ochiq\" : <>\r\n                                                            {item.start_time} {t(\"from\")}\r\n                                                            &nbsp;\r\n                                                            {item.end_time} {t(\"to\")}\r\n                                                        </>}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"buttons\">\r\n                                                    <div onClick={() => {\r\n                                                        localStorage.setItem(\"pharmacyId\", item.id);\r\n                                                        dispatch(getAboutMarker(item.location));\r\n                                                        navigate(\"/about-pharmacies\")\r\n                                                    }}\r\n                                                         className=\"more-btn\">\r\n                                                        {t(\"more\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <Footer/>\r\n                        </div>}\r\n                    </div>\r\n                    <div className={`right-side ${showMap ? \"show-map\" : \"\"}`}>\r\n                        <Map/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div onClick={() => dispatch(show(!showMap))} className=\"map-mobile\">\r\n                {showMap ? <img className=\"prev-to\" src=\"./images/next-btn.png\" alt=\"\"/> :\r\n                    <img src=\"./images/map-mobile.png\" alt=\"\"/>}\r\n                {showMap ? t(\"prev\") : t(\"map\")}\r\n            </div>\r\n            <div className=\"mobile-navbar-container\">\r\n                <MobileNavbar/>\r\n            </div>\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Pharmacies","import \"./style-saved.scss\"\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Footer from \"../footer/Footer\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\nimport axios from \"axios\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\nimport i18next from \"i18next\";\r\nimport Doctors from \"../doctors/Doctors\";\r\nimport Pharmacies from \"../Pharmacies/Pharmacies\";\r\n\r\n\r\nconst Saved = () => {\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [tabActive, setTabActive] = useState(1);\r\n    const navigate = useNavigate();\r\n    const [like, setLike] = useState(false);\r\n    const [clinics, setClinics] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [pharmacies, setPharmacies] = useState([]);\r\n\r\n    const [savedPostsClinic, setSavedPostsClinic] = useState([]);\r\n    const getSavedPostsClinic = () => {\r\n        const savedPosts = localStorage.getItem('hospital_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n    const handleSaveClickClinic = (postId) => {\r\n        let updatedSavedPosts = [...savedPostsClinic];\r\n\r\n        if (savedPostsClinic.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('hospital_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPostsClinic(updatedSavedPosts);\r\n        axios.post(`${baseUrl}saved/hospital/`, {hospitals: getSavedPostsClinic()}).then((response) => {\r\n            setClinics(response.data);\r\n        });\r\n    };\r\n\r\n    const [savedPostsDoctor, setSavedPostsDoctor] = useState([]);\r\n    const getSavedPostsDoctor = () => {\r\n        const savedPosts = localStorage.getItem('doctor_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n    const handleSaveClickDoctor = (postId) => {\r\n        let updatedSavedPosts = [...savedPostsDoctor];\r\n\r\n        if (savedPostsDoctor.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('doctor_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPostsDoctor(updatedSavedPosts);\r\n        axios.post(`${baseUrl}saved/doctor/`, {doctors: getSavedPostsDoctor()}).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n    };\r\n\r\n    const [savedPostsPharmacy, setSavedPostsPharmacy] = useState([]);\r\n    const getSavedPostsPharmacy = () => {\r\n        const savedPosts = localStorage.getItem('pharmacy_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n    const handleSaveClickPharmacy = (postId) => {\r\n        let updatedSavedPosts = [...savedPostsDoctor];\r\n\r\n        if (savedPostsPharmacy.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('pharmacy_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPostsPharmacy(updatedSavedPosts);\r\n        axios.post(`${baseUrl}saved/pharmacy/`, {pharmacy: getSavedPostsPharmacy()}).then((response) => {\r\n            setPharmacies(response.data);\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const Tabs = [\r\n        {id: 1, name: \"Shifoxonalar\"},\r\n        {id: 2, name: \"Doktorlar\"},\r\n        {id: 3, name: \"Dorixonalar\"}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        axios.post(`${baseUrl}saved/hospital/`, {hospitals: getSavedPostsClinic()}).then((response) => {\r\n            setClinics(response.data);\r\n        });\r\n\r\n        axios.post(`${baseUrl}saved/doctor/`, {doctors: getSavedPostsDoctor()}).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n\r\n        axios.post(`${baseUrl}saved/pharmacy/`, {pharmacy: getSavedPostsPharmacy()}).then((response) => {\r\n            setPharmacies(response.data);\r\n        });\r\n\r\n        setSavedPostsDoctor(getSavedPostsDoctor());\r\n        setSavedPostsClinic(getSavedPostsClinic());\r\n        setSavedPostsPharmacy(getSavedPostsPharmacy());\r\n    }, []);\r\n\r\n\r\n    const isPlaceOpen = (startTime, endTime) => {\r\n        const startParts = startTime.split(':');\r\n        const endParts = endTime.split(':');\r\n\r\n        const startDate = new Date();\r\n        startDate.setHours(startParts[0], startParts[1], startParts[2]);\r\n\r\n        const endDate = new Date();\r\n        endDate.setHours(endParts[0], endParts[1], endParts[2]);\r\n\r\n        const now = new Date();\r\n\r\n        return now >= startDate && now <= endDate;\r\n    };\r\n    const ShowModal = (status, item) => {\r\n        dispatch(showModals({show: true, status, item}))\r\n    };\r\n\r\n    return <>\r\n        <div className=\"saved-container\">\r\n            <Navbar/>\r\n            <div className=\"content-box\">\r\n                <div className=\"title-saved\">\r\n                    Saqlanganlar\r\n                </div>\r\n                <div className=\"tab-box\">\r\n                    {\r\n                        Tabs.map((item, index) => {\r\n                            return <div key={index} onClick={() => setTabActive(item.id)}\r\n                                        className={`tab ${tabActive === item.id ? \"tab-active\" : \"\"}`}>{item.name}</div>\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                {tabActive === 1 && <div className=\"clinics\">\r\n                    {clinics.length > 0 ? clinics.map((item, index) => {\r\n                        return <div key={index} className=\"clinic\">\r\n                            <div className=\"left-side\">\r\n                                <img src={item.image} alt=\"\"/>\r\n                                <div className=\"like\">\r\n                                    <img onClick={() => handleSaveClickClinic(item.id)}\r\n                                         src={savedPostsClinic.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                                         alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"right-side\">\r\n                                <div className=\"header-clinic\">\r\n                                    <div className=\"name-clinic\">\r\n                                        {item.translations[i18next.language].name}\r\n                                    </div>\r\n                                    <div className=\"buttons\">\r\n                                        <div onClick={() => ShowModal(\"contact\", item)}\r\n                                             className=\"button-call\">Qo'ng'iroq qilish\r\n                                        </div>\r\n                                        <div onClick={() => ShowModal(\"sms\", item.user)}\r\n                                             className=\"button-send\">Yozish\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"section-commit\">\r\n                                    <div className=\"raiting\">\r\n                                        {item.avg_rating}\r\n                                    </div>\r\n                                    <div className=\"commit-count\">\r\n                                        {item.comment_count} ta izoh\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"section-location\">\r\n                                    <div className=\"location\">\r\n                                        <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                        {item.translations[i18next.language].address}  &nbsp;\r\n                                    </div>\r\n                                    <div className=\"time-open\">\r\n                                        <img src=\"./images/clock.png\" alt=\"\"/>\r\n\r\n                                        {item.open_24 ? \"24 soat ochiq\" : <>\r\n                                            {item.start_time} dan\r\n                                            &nbsp;\r\n                                            {item.end_time} gacha\r\n                                        </>}\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"services\">\r\n                                    {item.hospital_services.map((item, index) => {\r\n                                        return <div key={index} className=\"service\">\r\n                                            {item.service.translations[i18next.language].name}\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n\r\n                                <div onClick={() => {\r\n                                    navigate(\"/about-clinic\");\r\n                                    localStorage.setItem(\"clinicId\", item.id);\r\n                                    dispatch(getAboutMarker(item.location))\r\n                                }} className=\"more-btn\">\r\n                                    Ko'proq ko'rsatish\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }) : <div className=\"text-box\">\r\n                        <div className=\"text-no-info\">\r\n                            Saqlangan shifoxonalar mavjud emas\r\n                        </div>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {tabActive === 2 && <div className=\"doctors\">\r\n                    {doctors.length > 0 ? doctors.map((item, index) => {\r\n                        return <div key={index} className=\"doctor\">\r\n                            <div className=\"left-side\">\r\n                                <img src={\"https://api.medos.uz/\"+item.image} alt=\"\"/>\r\n                                <div className=\"like\">\r\n                                    <img onClick={() => handleSaveClickDoctor(item.id)}\r\n                                         src={savedPostsDoctor.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                                         alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"right-side\">\r\n                                <div className=\"header-clinic\">\r\n                                    <div className=\"name-clinic\">\r\n                                        {item.translations[i18next.language].first_name} &nbsp;\r\n                                        {item.translations[i18next.language].last_name} &nbsp;\r\n                                        {item.translations[i18next.language].middle_name}\r\n                                    </div>\r\n\r\n                                    <div className=\"section-commit\">\r\n                                        <div className=\"raiting\">\r\n                                            {item.avg_rating}\r\n                                        </div>\r\n                                        <span></span>\r\n                                        <div className=\"commit-count\">\r\n                                            {item.comment_count} ta izoh\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"section-location\">\r\n                                    <div className=\"location\">\r\n                                        <img src=\"./images/job.png\" alt=\"\"/>\r\n                                        {item.specialty.translations[i18next.language].name}\r\n                                    </div>\r\n                                    <span></span>\r\n                                    <div className=\"time-open\">\r\n                                        {item.experience} yillik tajriba\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"section-location\">\r\n                                    <div className=\"location\">\r\n                                        <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                        {item.hospital ? item.hospital.translations[i18next.language].address :\r\n                                            item.translations[i18next.language].address}\r\n                                    </div>\r\n\r\n                                    {item.hospital ?\r\n                                        <>\r\n                                            <span></span>\r\n                                            <div className=\"time-open\">\r\n                                                {item.hospital.translations[i18next.language].name}\r\n                                            </div>\r\n                                        </> : \"\"}\r\n                                </div>\r\n\r\n                                <div className=\"section-location\">\r\n                                    <div className=\"location\">\r\n                                        <img src=\"./images/time.png\" alt=\"\"/>\r\n                                        {item.working_days.map((item, index) => {\r\n                                            return <p key={index}>\r\n                                                &nbsp;\r\n                                                {item.translations[i18next.language].day}\r\n                                            </p>\r\n                                        })}\r\n                                    </div>\r\n                                    <span></span>\r\n                                    <div className=\"time-open\">\r\n                                        {item.start_time} dan\r\n                                        &nbsp;\r\n                                        {item.end_time} gacha\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"services\">\r\n                                    {item.sub_speciality.map((item, index) => {\r\n                                        return <div key={index} className=\"service\">\r\n                                            {item.translations[i18next.language].name}\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n\r\n                                <div className=\"prices\">\r\n                                    <div className=\"item-price\">\r\n                                        <div className=\"title\">Birinchi konsultatsiya</div>\r\n                                        <div className=\"number\">\r\n                                            {item.consultation_fee ? <>{item.consultation_fee} so'm </> : \"Kelishuv asosida\"}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"item-price\">\r\n                                        <div className=\"title\">Takroriy konsultatsiya</div>\r\n                                        <div className=\"number\">\r\n                                            {item.second_consultation_fee ?\r\n                                                <>{item.second_consultation_fee} so'm </> :\r\n                                                \"Kelishuv asosida\"}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div className=\"left-btn\">\r\n                                        <div onClick={() => ShowModal(\"sms\", item.user)}\r\n                                             className=\"button-send\">\r\n                                            Qabuliga yozilish\r\n                                        </div>\r\n                                        <div onClick={() => ShowModal(\"contact\", item)}\r\n                                             className=\"button-call\">Qo'ng'iroq\r\n                                            qilish\r\n                                        </div>\r\n                                    </div>\r\n                                    <div onClick={() => {\r\n                                        localStorage.setItem(\"doctorId\", item.id)\r\n                                        navigate(\"/about-doctor\")\r\n                                        dispatch(getAboutMarker(item.location ? item.location : item.hospital.location))\r\n                                    }} className=\"more-btn\">\r\n                                        Ko'proq ko'rsatish\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }) : <div className=\"text-box\">\r\n                        <div className=\"text-no-info\">\r\n                            Saqlangan shifokorlar mavjud emas\r\n                        </div>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {tabActive === 3 && <div className=\"pharmacies-box\">\r\n                    {pharmacies.length > 0 ?\r\n                        pharmacies.map((item, index) => {\r\n                            return <div key={index} className=\"pharma\">\r\n                                <div className=\"left-side\">\r\n                                    <img src={item.image} alt=\"\"/>\r\n                                    <div className=\"like\">\r\n                                        <img onClick={() => handleSaveClickPharmacy(item.id)}\r\n                                             src={savedPostsPharmacy.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                                             alt=\"\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div className=\"header-clinic\">\r\n                                        <div className=\"name-clinic\">\r\n                                            {item.translations[i18next.language].name}\r\n                                        </div>\r\n\r\n                                        <div className=\"section-commit\">\r\n                                            <div className=\"raiting\">\r\n                                                <img src=\"./images/star2.png\" alt=\"\"/>\r\n                                                {item.avg_rating}\r\n                                            </div>\r\n                                            <span></span>\r\n                                            <div className=\"commit-count\">\r\n                                                ({item.comment_count})\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"section-location\">\r\n                                        <div className=\"location\">\r\n                                            <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                            {item.translations[i18next.language].address}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"section-location\">\r\n                                        <div className=\"location\">\r\n                                            <img src=\"./images/time.png\" alt=\"\"/>\r\n                                            {item.open_24 ? <div\r\n                                                className=\"open\">Ochiq</div> : isPlaceOpen(item.start_time, item.end_time) ?\r\n                                                <div className=\"open\">Ochiq</div> :\r\n                                                <div className=\"close\">Yopiq</div>}\r\n                                        </div>\r\n\r\n                                        <span></span>\r\n                                        <div className=\"time-open\">\r\n                                            {item.open_24 ? \"24 soat ochiq\" : <>\r\n                                                {item.start_time} dan\r\n                                                &nbsp;\r\n                                                {item.end_time} gacha\r\n                                            </>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"buttons\">\r\n                                        <div onClick={() => {\r\n                                            localStorage.setItem(\"pharmacyId\", item.id);\r\n                                            dispatch(getAboutMarker(item.location));\r\n                                            navigate(\"/about-pharmacies\")\r\n                                        }}\r\n                                             className=\"more-btn\">\r\n                                            Ko'proq ko'rsatish\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                        : <div className=\"text-box\">\r\n                            <div className=\"text-no-info\">\r\n                                Saqlangan dorixonalar mavjud emas\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>}\r\n            </div>\r\n\r\n            <div className=\"mobile-navbar-container\">\r\n                <MobileNavbar/>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n\r\n    </>\r\n};\r\n\r\nexport default Saved","import {useEffect, useState, useMemo} from \"react\";\r\nimport {GoogleMap, useLoadScript} from \"@react-google-maps/api\";\r\nimport i18next from \"i18next\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"./googleMapsApi\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport LoaderMap from \"./loader-map/LoaderMap\";\r\nimport AboutMarker from \"./AboutMarker\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst MapAbout = () => {\r\n    const aboutMarker = useSelector((store) => store.MarkerAbout.data);\r\n    const [onloadMap, setOnloadMap] = useState(false)\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\r\n        libraries: libraries,\r\n        language: i18next.language,\r\n    });\r\n    let locationAbout = {lat: Number(aboutMarker.split(\",\")[0]), lng: Number(aboutMarker.split(\",\")[1])};\r\n\r\n    const options = useMemo(\r\n        () => ({\r\n            disableDefaultUI: false,\r\n            clickableIcons: false\r\n        }),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (isLoaded) {\r\n            setOnloadMap(true);\r\n        }\r\n    }, [isLoaded]);\r\n\r\n    if (!isLoaded) return <LoaderMap/>;\r\n    return <>\r\n        <GoogleMap\r\n            zoom={9}\r\n            center={locationAbout}\r\n            options={options}\r\n            mapContainerClassName=\"map\"\r\n            onLoad={() => setOnloadMap(true)}\r\n        >\r\n            {onloadMap && <AboutMarker/>}\r\n        </GoogleMap>\r\n    </>\r\n};\r\n\r\nexport default MapAbout","import \"./clinic-style.scss\"\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Footer from \"../footer/Footer\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\nimport axios from \"axios\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\nimport MapAbout from \"../map/MapAbout\";\r\n\r\n\r\nconst AboutClinic = () => {\r\n    const {t} = useTranslation();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [tabActive, setTabActive] = useState(1);\r\n    const [clinic, setClinic] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [services, setServices] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const tabs = [\r\n        {id: 1, name: t(\"all\")},\r\n        {id: 2, name: t(\"nav2\")},\r\n        {id: 3, name: t(\"comment\")},\r\n        {id: 4, name: t(\"service-price\")}\r\n    ];\r\n    const [savedPosts, setSavedPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}hospital/${localStorage.getItem(\"clinicId\")}/`).then((response) => {\r\n            setClinic(response.data);\r\n\r\n            dispatch(getAboutMarker(response.data.location));\r\n\r\n            axios.get(`${baseUrl}comment/${response.data.user}/`).then((response) => {\r\n                setComments(response.data)\r\n            });\r\n\r\n            axios.get(`${baseUrl}hospital/${response.data.id}/doctors/`).then((response) => {\r\n                setDoctors(response.data)\r\n            });\r\n\r\n            axios.get(`${baseUrl}hospital/${response.data.id}/services/`).then((response) => {\r\n                setServices(response.data)\r\n            })\r\n        });\r\n\r\n        setSavedPosts(getSavedPosts())\r\n    }, []);\r\n\r\n    const ShowModal = (status, item) => {\r\n        dispatch(showModals({show: true, status, item}))\r\n    };\r\n\r\n    const getSavedPosts = () => {\r\n        const savedPosts = localStorage.getItem('hospital_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n\r\n    const handleSaveClick = (postId) => {\r\n        let updatedSavedPosts = [...savedPosts];\r\n\r\n        if (savedPosts.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('hospital_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPosts(updatedSavedPosts);\r\n    };\r\n\r\n    return <div className=\"about-clinic-box\">\r\n        <Navbar/>\r\n\r\n        {clinic &&\r\n        <div className=\"about-hospital\">\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    {clinic && clinic.translations[i18next.language].name}\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <div className=\"like\">\r\n                        <img onClick={() => handleSaveClick(clinic.id)}\r\n                             src={savedPosts.includes(clinic.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                             alt=\"\"/>\r\n                    </div>\r\n\r\n                    <div onClick={() => ShowModal(\"contact\", clinic)}\r\n                         className=\"button-call\">\r\n                        {t(\"call\")}\r\n                    </div>\r\n                    <div onClick={() => ShowModal(\"sms\", clinic.user)}\r\n                         className=\"button-send\">\r\n                        {t(\"acceptance2\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"body\">\r\n                <div className=\"section-commit\">\r\n                    <div className=\"raiting\">\r\n                        {clinic.avg_rating}\r\n                    </div>\r\n                    <div className=\"commit-count\">\r\n                        {clinic.comment_count} {t(\"comment\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"section-location\">\r\n                    <div className=\"location\">\r\n                        <img src=\"./images/icon.png\" alt=\"\"/>\r\n                        {clinic && clinic.translations[i18next.language].address}\r\n                    </div>\r\n                    <span></span>\r\n                    <div className=\"time-open\">\r\n                        <img src=\"./images/clock.png\" alt=\"\"/>\r\n                        {clinic.open_24 ? t(\"open24\") : <>\r\n                            {clinic.start_time} {t(\"from\")}\r\n                            &nbsp;\r\n                            {clinic.end_time} {t(\"to\")}\r\n                        </>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"images-location\">\r\n                    <div className=\"images-box\">\r\n                        <div className=\"image-hospital\">\r\n                            <img src={clinic.image} alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"location-box\">\r\n                        <MapAbout/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tab-hospital\">\r\n                    {tabs.map((item, index) => {\r\n                        return <div key={index} onClick={() => setTabActive(item.id)}\r\n                                    className={tabActive === item.id ? \"tab-active\" : \"tab\"}>\r\n                            {item.name}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n\r\n                {tabActive === 1 && <div className=\"all-info\">\r\n                    <div className=\"service-hospital\">\r\n                        <div className=\"title\">\r\n                            {t(\"nav4\")}\r\n                        </div>\r\n                        <div className=\"contents\">\r\n                            {clinic && clinic.hospital_services.map((item, index) => {\r\n                                return <div key={index} className=\"service\">\r\n                                    {item.service.translations[i18next.language].name}\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"comments-box\">\r\n                        <div className=\"header-commet\">\r\n                            <div className=\"counts\">\r\n                                <div className=\"raiting\">\r\n                                    {clinic.avg_rating}\r\n                                </div>\r\n                                <div className=\"commit-count\">\r\n                                    {clinic.comment_count} {t(\"comment\")}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => ShowModal(\"commit\", clinic.user)} className=\"btn-commit\">\r\n                                <img src=\"./images/comit.png\" alt=\"\"/>\r\n                                {t(\"comment-btn\")}\r\n                            </div>\r\n                        </div>\r\n                        {comments.map((item, index) => {\r\n                            if (index < 6) {\r\n                                return <div key={index} className=\"commits\">\r\n                                    <div className=\"header-commit\">\r\n                                        <div className=\"left-circle\">\r\n                                            {item.name.slice(0, 1)}\r\n                                        </div>\r\n                                        <div className=\"right-names\">\r\n                                            <div className=\"name\">\r\n                                                {item.name}\r\n                                                <span>{item.time}</span>\r\n                                            </div>\r\n                                            <div className=\"stars\">\r\n                                                {Array.from({length: item.mark}).map((_, index) => (\r\n                                                    <img key={index} src=\"./images/raiting1.png\" alt=\"Rating 1\"/>\r\n                                                ))}\r\n\r\n                                                {Array.from({length: 5 - item.mark}).map((_, index) => (\r\n                                                    <img key={index} src=\"./images/raiting2.png\" alt=\"Rating 2\"/>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-commit\">\r\n                                        {item.text}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        })}\r\n                        <div onClick={() => setTabActive(3)} className=\"more-btn\">\r\n                            {t(\"more\")}\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n                {tabActive === 2 && <div className=\"doctors\">\r\n                    <div className=\"category-wrapper\">\r\n                        {\r\n                            doctors.services.map((item, index) => {\r\n                                return <div key={index}>\r\n                                    <div\r\n                                        className=\"category-name active\">\r\n                                        {item.translations[i18next.language].name} <span></span> {item.doctor_count}\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"doctors-warapper\">\r\n                        {\r\n                            doctors.doctors.map((item, index) => {\r\n                                return <div key={index} className=\"doctor\">\r\n                                    <div className=\"left-side\">\r\n                                        <img src={\"https://api.medos.uz/\" + item.image} alt=\"\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"right-side\">\r\n                                        <div className=\"header-clinic\">\r\n                                            <div className=\"name-clinic\">\r\n                                                {item.translations[i18next.language].first_name} &nbsp;\r\n                                                {item.translations[i18next.language].last_name} &nbsp;\r\n                                                {item.translations[i18next.language].middle_name}\r\n                                            </div>\r\n\r\n                                            <div className=\"section-commit\">\r\n                                                <div className=\"raiting\">\r\n                                                    {item.avg_rating}\r\n                                                </div>\r\n                                                <span></span>\r\n                                                <div className=\"commit-count\">\r\n                                                    {item.comment_count} {t(\"comment\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"section-location\">\r\n                                            <div className=\"location\">\r\n                                                <img src=\"./images/job.png\" alt=\"\"/>\r\n                                                {item.specialty.translations[i18next.language].name}\r\n                                            </div>\r\n                                            <span></span>\r\n                                            <div className=\"time-open\">\r\n                                                {item.experience} {t(\"experience\")}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"section-location\">\r\n                                            <div className=\"location\">\r\n                                                <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                                {item.hospital ? clinic.translations[i18next.language].address :\r\n                                                    item.translations[i18next.language].address}\r\n                                            </div>\r\n                                            {item.hospital ?\r\n                                                <>\r\n                                                    <span></span>\r\n                                                    <div className=\"time-open\">\r\n                                                        {clinic.translations[i18next.language].name}\r\n                                                    </div>\r\n                                                </> : \"\"}\r\n                                        </div>\r\n\r\n                                        <div className=\"section-location\">\r\n                                            <div className=\"location\">\r\n                                                <img src=\"./images/time.png\" alt=\"\"/>\r\n                                                {item.working_days.map((item, index) => {\r\n                                                    return <p key={index}>\r\n                                                        {item.translations[i18next.language].day}\r\n                                                    </p>\r\n                                                })}\r\n                                            </div>\r\n                                            <span></span>\r\n                                            <div className=\"time-open\">\r\n                                                {item.start_time} {t(\"from\")}\r\n                                                &nbsp;\r\n                                                {item.end_time} {t(\"to\")}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"services\">\r\n                                            {item.sub_speciality.map((item, index) => {\r\n                                                return <div key={index} className=\"service\">\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </div>\r\n                                            })}\r\n                                        </div>\r\n\r\n                                        <div className=\"prices\">\r\n                                            <div className=\"item-price\">\r\n                                                <div className=\"title\">{t(\"first-consultation\")}</div>\r\n                                                <div className=\"number\">\r\n                                                    {item.consultation_fee ? <>{item.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"item-price\">\r\n                                                <div className=\"title\">{t(\"second-consultation\")}</div>\r\n                                                <div className=\"number\">\r\n                                                    {item.second_consultation_fee ?\r\n                                                        <>{item.second_consultation_fee} {t(\"sum\")} </> :\r\n                                                        t(\"agreement\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"buttons\">\r\n                                            <div className=\"left-btn\">\r\n                                                <div onClick={() => ShowModal(\"sms\", item.user)}\r\n                                                     className=\"button-send\">\r\n                                                    {t(\"acceptance\")}\r\n                                                </div>\r\n                                                <div onClick={() => ShowModal(\"contact\", item)}\r\n                                                     className=\"button-call\">\r\n                                                    {t(\"call\")}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div onClick={() => navigate(\"/about-clinic\")} className=\"more-btn\">\r\n                                                {t(\"more\")}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>}\r\n\r\n                {tabActive === 3 && <div className=\"all-commits\">\r\n                    <div className=\"header-commet\">\r\n                        <div className=\"counts\">\r\n                            <div className=\"raiting\">\r\n                                {clinic.avg_rating}\r\n                            </div>\r\n                            <div className=\"commit-count\">\r\n                                {clinic.comment_count} {t(\"comment\")}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div onClick={() => ShowModal(\"commit\", clinic.user)} className=\"btn-commit\">\r\n                            <img src=\"./images/comit.png\" alt=\"\"/>\r\n                            {t(\"comment-btn\")}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {comments.map((item, index) => {\r\n                        return <div key={index} className=\"commits\">\r\n                            <div className=\"header-commit\">\r\n                                <div className=\"left-circle\">\r\n                                    {item.name.slice(0, 1)}\r\n                                </div>\r\n                                <div className=\"right-names\">\r\n                                    <div className=\"name\">\r\n                                        {item.name}\r\n                                        <span>{item.time}</span>\r\n                                    </div>\r\n                                    <div className=\"stars\">\r\n                                        {Array.from({length: item.mark}).map((_, index) => (\r\n                                            <img key={index} src=\"./images/raiting1.png\" alt=\"Rating 1\"/>\r\n                                        ))}\r\n\r\n                                        {Array.from({length: 5 - item.mark}).map((_, index) => (\r\n                                            <img key={index} src=\"./images/raiting2.png\" alt=\"Rating 2\"/>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-commit\">\r\n                                {item.text}\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n\r\n                </div>}\r\n\r\n                {tabActive === 4 && <div className=\"service-box\">\r\n                    <div className=\"category-wrapper\">\r\n                        {\r\n                            services.services_count.map((item, index) => {\r\n                                return <div key={index}>\r\n                                    <div\r\n                                        className=\"category-name active\">\r\n                                        {item.translations[i18next.language].name} <span></span> {item.service_count}\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {services.services.map((item, index) => {\r\n                        return <div key={index} className=\"one-service\">\r\n                            <div className=\"title\">\r\n                                {item.service.translations[i18next.language].name}\r\n                            </div>\r\n                            {item.sub_services_list.map((item, index) => {\r\n                                return <div key={index} className=\"service\">\r\n                                    <div className=\"name\">{item.sub_service.translations[i18next.language].name}</div>\r\n                                    <div className=\"value\">{item.price} {t(\"sum\")}</div>\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    })}\r\n\r\n                </div>}\r\n            </div>\r\n        </div>}\r\n\r\n        <div className=\"mobile-navbar-container\">\r\n            <MobileNavbar/>\r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n};\r\n\r\nexport default AboutClinic","import \"./login.scss\"\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport AuthCode from \"react-auth-code-input\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [code, setCode] = useState(\"\");\r\n    const [checkCode, setCheckCode] = useState(false);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(60);\r\n\r\n    const resetTimer = () => {\r\n        setMinutes(0);\r\n        setSeconds(59);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (seconds > 0) {\r\n                setSeconds(seconds - 1);\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(interval);\r\n                } else {\r\n                    setSeconds(60);\r\n                    setMinutes(minutes - 1);\r\n                }\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [checkCode ? seconds : null]);\r\n\r\n    const getCodeValue = (e) => {\r\n        setCode(e);\r\n    };\r\n\r\n    const HandleLogin = () => {\r\n        let user = {\r\n            phone: phone\r\n        };\r\n        axios\r\n            .post(`${baseUrl}auth/register/login/`, user)\r\n            .then((response) => {\r\n                localStorage.setItem(\"userId\", response.data.user_id);\r\n                setCheckCode((prevState) => true);\r\n\r\n                if (checkCode) {\r\n                    resetTimer();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 404) {\r\n                    let idAlert = Date.now();\r\n                    let alert = {\r\n                        id: idAlert,\r\n                        text: \"Bu raqamga sms yuborib bo'lmaydi!\",\r\n                        img: \"./images/red.svg\",\r\n                        color: \"#ffefe7\",\r\n                    };\r\n                    dispatch(addAlert(alert));\r\n                    setTimeout(() => {\r\n                        dispatch(delAlert(idAlert));\r\n                    }, 5000);\r\n                }\r\n\r\n                if (error.response.status === 406) {\r\n                    let idAlert = Date.now();\r\n                    let alert = {\r\n                        id: idAlert,\r\n                        text: \"Bu raqam ro'yxatdan o'tmagan!\",\r\n                        img: \"./images/red.svg\",\r\n                        color: \"#ffefe7\",\r\n                    };\r\n                    dispatch(addAlert(alert));\r\n                    setTimeout(() => {\r\n                        dispatch(delAlert(idAlert));\r\n                    }, 5000);\r\n                }\r\n            });\r\n    };\r\n\r\n    const CheckCode = () => {\r\n        axios.post(`${baseUrl}auth/register/verify/`, {user: localStorage.getItem(\"userId\"),code,})\r\n            .then((response) => {\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                localStorage.setItem(\"userType\", response.data.user_type);\r\n\r\n                if (response.data.user_type === \"Doctor\") {\r\n                    axios.get(`${baseUrl}doctor-profile/`, {\r\n                            headers: {\r\n                                \"Authorization\": `Token ${response.data.token}`\r\n                            }\r\n                        }\r\n                    ).then((response) => {\r\n                        localStorage.setItem(\"nameUz\", `${response.data.translations[\"uz\"].first_name} ${response.data.translations[\"uz\"].last_name}`);\r\n                        localStorage.setItem(\"nameRu\", `${response.data.translations[\"ru\"].first_name} ${response.data.translations[\"ru\"].last_name}`);\r\n                        navigate(\"/\");\r\n                        window.location.reload();\r\n                    });\r\n                }\r\n\r\n                if (response.data.user_type === \"Hospital\") {\r\n                    axios.get(`${baseUrl}hospital-profile/`, {\r\n                            headers: {\r\n                                \"Authorization\": `Token ${response.data.token}`\r\n                            }\r\n                        }\r\n                    ).then((response) => {\r\n                        localStorage.setItem(\"nameUz\", `${response.data.translations[\"uz\"].name}`);\r\n                        localStorage.setItem(\"nameRu\", `${response.data.translations[\"ru\"].name}`);\r\n                        navigate(\"/\");\r\n                        window.location.reload();\r\n                    });\r\n                }\r\n\r\n                if (response.data.user_type === \"Pharmacy\") {\r\n                    axios.get(`${baseUrl}pharmacy-profile/`, {\r\n                            headers: {\r\n                                \"Authorization\": `Token ${response.data.token}`\r\n                            }\r\n                        }\r\n                    ).then((response) => {\r\n                        localStorage.setItem(\"nameUz\", `${response.data.translations[\"uz\"].name}`);\r\n                        localStorage.setItem(\"nameRu\", `${response.data.translations[\"ru\"].name}`);\r\n                        navigate(\"/\");\r\n                        window.location.reload();\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 404) {\r\n                    alert(\"Tasdiqlash kodi xato\")\r\n                }\r\n            });\r\n    };\r\n\r\n    useOnKeyPress(checkCode ? CheckCode : HandleLogin, \"Enter\");\r\n\r\n    return <div className=\"login-container\">\r\n        <div className=\"logo\">\r\n            <img src=\"./images/logo.png\" alt=\"\"/>\r\n        </div>\r\n\r\n        {checkCode ? <div className=\"check-code\">\r\n            <div className=\"xbtn\">\r\n                <img onClick={() => setCheckCode(false)} src=\"./images/cancel.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className=\"title-login\">\r\n                Maxsus kodni kiriting\r\n            </div>\r\n\r\n            <div className=\"des-login\">\r\n                Telefon raqamingizga maxsus kod SMS tarzda yuborildi\r\n            </div>\r\n\r\n            <div className=\"inputs\">\r\n                <AuthCode\r\n                    allowedCharacters=\"numeric\"\r\n                    length=\"5\"\r\n                    onChange={getCodeValue}\r\n                />\r\n            </div>\r\n\r\n            {checkCode && <div className=\"count\">\r\n                {minutes < 10 ? `0${minutes}` : minutes}:\r\n                {seconds < 10 ? `0${seconds}` : seconds}\r\n            </div>}\r\n\r\n            {seconds > 0 ||\r\n            minutes > 0 ||\r\n            phone === \"\" ||\r\n            phone === undefined ?\r\n\r\n                <button\r\n                    disabled={code.trim().length < 5}\r\n                    onClick={CheckCode}\r\n                    className={\r\n                        code.trim().length < 5 ? \"login-btn-disablet\" : \"login-btn\"\r\n                    }\r\n                >\r\n                    Profilga kirish\r\n                </button> :\r\n                <button\r\n                    disabled={\r\n                        phone === \"\" ||\r\n                        phone === undefined ||\r\n                        seconds > 0 ||\r\n                        minutes > 0\r\n                    }\r\n                    onClick={HandleLogin}\r\n                    className={\r\n                        seconds > 0 ||\r\n                        minutes > 0 ||\r\n                        phone === \"\" ||\r\n                        phone === undefined\r\n                            ? \"login-btn-disablet\"\r\n                            : \"login-btn\"\r\n                    }\r\n                >\r\n                    Kodni qayta yuborish\r\n                </button>}\r\n\r\n\r\n        </div> : <div className=\"login-card\">\r\n            <div className=\"xbtn\">\r\n                <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className=\"title-login\">\r\n                Profilga kirish\r\n            </div>\r\n\r\n            <div className=\"des-login\">\r\n                Maxsus kodni yuborishimiz uchun\r\n                telefon raqamingizni to‘g‘ri kiriting\r\n            </div>\r\n\r\n            <div className=\"inputs\">\r\n                <label htmlFor=\"phone\" className=\"label-form\">\r\n                    Telefon raqam\r\n                </label>\r\n                <PhoneInput\r\n                    id=\"phone\"\r\n                    international\r\n                    defaultCountry=\"UZ\"\r\n                    value={phone}\r\n                    onChange={setPhone}\r\n                />\r\n            </div>\r\n\r\n            <button\r\n                onClick={HandleLogin}\r\n                disabled={phone === \"\" || phone === undefined}\r\n                className={phone === \"\" || phone === undefined\r\n                    ? \"login-btn-disablet\"\r\n                    : \"login-btn\"}>\r\n                Dasturga kirish\r\n            </button>\r\n        </div>}\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default Login","import {useEffect} from \"react\";\r\n\r\nexport const useOnKeyPress = (callback,targetKey) =>{\r\n    useEffect(()=>{\r\n        const keyPressHandler = (event)=>{\r\n            if (event.key === targetKey){\r\n                callback()\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown',keyPressHandler);\r\n        return () =>{\r\n            window.removeEventListener('keydown', keyPressHandler)\r\n        }\r\n    },[callback, targetKey]);\r\n};","import \"./clinic-doctor.scss\"\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Footer from \"../footer/Footer\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\nimport MapAbout from \"../map/MapAbout\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\n\r\n\r\nconst AboutDoctor = () => {\r\n    const {t} = useTranslation();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [like, setLike] = useState(false);\r\n    const [doctor, setDoctor] = useState(\"\");\r\n    const [similarDoctors, setSimilarDoctors] = useState();\r\n    const [comments, setComments] = useState([]);\r\n    const [savedPosts, setSavedPosts] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}doctor/${localStorage.getItem(\"doctorId\")}/`).then((response) => {\r\n            setDoctor(response.data);\r\n            axios.get(`${baseUrl}comment/${response.data.user}/`).then((response) => {\r\n                setComments(response.data)\r\n            });\r\n            dispatch(getAboutMarker(response.data.location ? response.data.location : response.data.hospital.location));\r\n        });\r\n\r\n        axios.get(`${baseUrl}doctor/${localStorage.getItem(\"doctorId\")}/similar/`).then((response) => {\r\n            setSimilarDoctors(response.data)\r\n        });\r\n        setSavedPosts(getSavedPosts())\r\n    }, []);\r\n\r\n    const ShowModal = (status, item) => {\r\n        dispatch(showModals({show: true, status, item}))\r\n    };\r\n\r\n    const getSavedPosts = () => {\r\n        const savedPosts = localStorage.getItem('doctor_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n\r\n    const handleSaveClick = (postId) => {\r\n        let updatedSavedPosts = [...savedPosts];\r\n\r\n        if (savedPosts.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('doctor_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPosts(updatedSavedPosts);\r\n    };\r\n\r\n    return <div className=\"about-doctor-box\">\r\n        <Navbar/>\r\n\r\n        {doctor &&\r\n        <div className=\"about-hospital\">\r\n            <div className=\"header\">\r\n                <div className=\"photo-doctor\">\r\n                    <img src={doctor.image} alt=\"\"/>\r\n                </div>\r\n\r\n                <div className=\"infotmation-doctor\">\r\n                    <div className=\"title\">\r\n                        {doctor.translations[i18next.language].first_name} &nbsp;\r\n                        {doctor.translations[i18next.language].last_name} &nbsp;\r\n                        {doctor.translations[i18next.language].middle_name}\r\n                    </div>\r\n\r\n                    <div className=\"info\">\r\n                        <div className=\"items\">\r\n                            {doctor.specialty.translations[i18next.language].name}\r\n                        </div>\r\n                        <div className=\"items\">\r\n                            {doctor.experience} {t(\"experience\")}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"section-commit\">\r\n                        <div className=\"raiting\">\r\n                            {doctor.avg_rating}\r\n                        </div>\r\n                        <span></span>\r\n                        <div className=\"commit-count\">\r\n                            {doctor.comment_count} {t(\"comment\")}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"location\">\r\n                        {doctor.hospital ? doctor.hospital.translations[i18next.language].address :\r\n                            doctor.translations[i18next.language].address}\r\n                    </div>\r\n\r\n                    <div className=\"skills\">\r\n                        {doctor.sub_speciality.map((item, index) => {\r\n                            return <div key={index} className=\"skill\">\r\n                                {item.translations[i18next.language].name}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n\r\n                    <div onClick={() => handleSaveClick(doctor.id)} className=\"like\">\r\n                        <img src={savedPosts.includes(doctor.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                             alt=\"\"/>\r\n                        <div className=\"name\">{t(\"save\")}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"buttons\">\r\n                    <div className=\"title\">\r\n                        {t(\"working-time\")}\r\n                    </div>\r\n\r\n                    <div className=\"date\">\r\n                        <img src=\"./images/calendar.png\" alt=\"\"/>\r\n                        {doctor.working_days.map((item, index) => {\r\n                            return <p key={index}>\r\n                                &nbsp;\r\n                                {item.translations[i18next.language].day}\r\n                            </p>\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"date\">\r\n                        <img src=\"./images/clock2.png\" alt=\"\"/>\r\n                        {doctor.start_time} {t(\"from\")}\r\n                        &nbsp;\r\n                        {doctor.end_time} {t(\"to\")}\r\n                    </div>\r\n\r\n                    <div className=\"line\"></div>\r\n\r\n                    <div className=\"title\">\r\n                        {t(\"price-service\")}\r\n                    </div>\r\n\r\n                    <div className=\"prices\">\r\n                        <div className=\"item-price\">\r\n                            <div className=\"title\">{t(\"first-consultation\")}</div>\r\n                            <div className=\"number\">\r\n                                {doctor.consultation_fee ? <>{doctor.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"item-price\">\r\n                            <div className=\"title\">{t(\"second-consultation\")}</div>\r\n                            <div className=\"number\">\r\n                                {doctor.second_consultation_fee ?\r\n                                    <>{doctor.second_consultation_fee} {t(\"sum\")} </> :\r\n                                    t(\"agreement\")}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div onClick={() => ShowModal(\"sms\", doctor.user)}\r\n                         className=\"button-send\">\r\n                        {t(\"acceptance\")}\r\n                    </div>\r\n                    <div onClick={() => ShowModal(\"contact\", doctor)}\r\n                         className=\"button-call\">\r\n                        {t(\"call\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <div className=\"all-info-hospital\">\r\n                    <div className=\"title\">\r\n                        {t(\"doctor\")}\r\n                    </div>\r\n                    <div className=\"des\">\r\n                        {doctor.translations[i18next.language].bio}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"images-location\">\r\n                    <div className=\"title\">{t(\"\")}</div>\r\n                    <div className=\"location\">\r\n                        <img src=\"./images/loaction.png\" alt=\"\"/>\r\n                        {doctor.hospital ? doctor.hospital.translations[i18next.language].address :\r\n                            doctor.translations[i18next.language].address}\r\n                    </div>\r\n                    <div className=\"location-box\">\r\n                        <MapAbout/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"comments-box\">\r\n                    <div className=\"header-commet\">\r\n                        <div className=\"counts\">\r\n                            <div className=\"raiting\">\r\n                                {doctor.avg_rating}\r\n                            </div>\r\n                            <div className=\"commit-count\">\r\n                                {doctor.comment_count} {t(\"comment\")}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div onClick={() => ShowModal(\"commit\", doctor.user)} className=\"btn-commit\">\r\n                            <img src=\"./images/comit.png\" alt=\"\"/>\r\n                            {t(\"comment-btn\")}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {comments.map((item, index) => {\r\n                        return <div key={index} className=\"commits\">\r\n                            <div className=\"header-commit\">\r\n                                <div className=\"left-circle\">\r\n                                    {item.name.slice(0, 1)}\r\n                                </div>\r\n                                <div className=\"right-names\">\r\n                                    <div className=\"name\">\r\n                                        {item.name}\r\n                                        <span>{item.time}</span>\r\n                                    </div>\r\n                                    <div className=\"stars\">\r\n                                        {Array.from({length: item.mark}).map((_, index) => (\r\n                                            <img key={index} src=\"./images/raiting1.png\" alt=\"Rating 1\"/>\r\n                                        ))}\r\n\r\n                                        {Array.from({length: 5 - item.mark}).map((_, index) => (\r\n                                            <img key={index} src=\"./images/raiting2.png\" alt=\"Rating 2\"/>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-commit\">\r\n                                {item.text}\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"doctors-warapper\">\r\n                    <div className=\"title\">\r\n                        {t(\"more-doctors\")}\r\n                    </div>\r\n                    {\r\n                        similarDoctors && similarDoctors.map((item, index) => {\r\n                            return <div key={index} className=\"doctor\">\r\n                                <div className=\"left-side\">\r\n                                    <img src={\"https://api.medos.uz/\" + item.image} alt=\"\"/>\r\n                                    <div className=\"like\">\r\n                                        <img onClick={() => handleSaveClick(item.id)}\r\n                                             src={savedPosts.includes(item.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                                             alt=\"\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"right-side\">\r\n                                    <div className=\"header-clinic\">\r\n                                        <div className=\"name-clinic\">\r\n                                            {item.translations[i18next.language].first_name} &nbsp;\r\n                                            {item.translations[i18next.language].last_name} &nbsp;\r\n                                            {item.translations[i18next.language].middle_name}\r\n                                        </div>\r\n\r\n                                        <div className=\"section-commit\">\r\n                                            <div className=\"raiting\">\r\n                                                {item.avg_rating}\r\n                                            </div>\r\n                                            <span></span>\r\n                                            <div className=\"commit-count\">\r\n                                                {item.comment_count} {t(\"comment\")}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"section-location\">\r\n                                        <div className=\"location\">\r\n                                            <img src=\"./images/job.png\" alt=\"\"/>\r\n                                            {item.specialty.translations[i18next.language].name}\r\n                                        </div>\r\n                                        <span></span>\r\n                                        <div className=\"time-open\">\r\n                                            {item.experience} {t(\"experience\")}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"section-location\">\r\n                                        <div className=\"location\">\r\n                                            <img src=\"./images/icon.png\" alt=\"\"/>\r\n                                            {item.hospital ? item.hospital.translations[i18next.language].address :\r\n                                                item.translations[i18next.language].address}\r\n                                        </div>\r\n                                        {item.hospital ?\r\n                                            <>\r\n                                                <span></span>\r\n                                                <div className=\"time-open\">\r\n                                                    {item.hospital.translations[i18next.language].name}\r\n                                                </div>\r\n                                            </> : \"\"}\r\n                                    </div>\r\n\r\n                                    <div className=\"section-location\">\r\n                                        <div className=\"location\">\r\n                                            <img src=\"./images/time.png\" alt=\"\"/>\r\n                                            {item.working_days.map((item, index) => {\r\n                                                return <p key={index}>\r\n                                                    &nbsp;\r\n                                                    {item.translations[i18next.language].day},\r\n                                                </p>\r\n                                            })}\r\n                                        </div>\r\n                                        <span></span>\r\n                                        <div className=\"time-open\">\r\n                                            {item.start_time} {t(\"from\")}\r\n                                            &nbsp;\r\n                                            {item.end_time} {t(\"to\")}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"services\">\r\n                                        {item.sub_speciality.map((item, index) => {\r\n                                            return <div key={index} className=\"service\">\r\n                                                {item.translations[i18next.language].name}\r\n                                            </div>\r\n                                        })}\r\n                                    </div>\r\n\r\n                                    <div className=\"prices\">\r\n                                        <div className=\"item-price\">\r\n                                            <div className=\"title\">{t(\"first-consultation\")}</div>\r\n                                            <div className=\"number\">\r\n                                                {item.consultation_fee ? <>{item.consultation_fee} {t(\"sum\")} </> : t(\"agreement\")}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"item-price\">\r\n                                            <div className=\"title\">{t(\"second-consultation\")}</div>\r\n                                            <div className=\"number\">\r\n\r\n                                                {item.second_consultation_fee ?\r\n                                                    <>{item.second_consultation_fee} {t(\"sum\")} </> :\r\n                                                    t(\"agreement\")}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"buttons\">\r\n                                        <div className=\"left-btn\">\r\n                                            <div onClick={() => ShowModal(\"sms\", item.user)}\r\n                                                 className=\"button-send\">\r\n                                                {t(\"acceptance\")}\r\n                                            </div>\r\n                                            <div onClick={() => ShowModal(\"contact\", item)}\r\n                                                 className=\"button-call\">\r\n                                                {t(\"call\")}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div onClick={() => {\r\n                                            localStorage.setItem(\"doctorId\", item.id)\r\n                                            window.location.reload()\r\n                                        }} className=\"more-btn\">\r\n                                            {t(\"more\")}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>}\r\n\r\n        <div className=\"mobile-navbar-container\">\r\n            <MobileNavbar/>\r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n};\r\n\r\nexport default AboutDoctor","import \"./style-pharma.scss\"\r\nimport {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport Footer from \"../footer/Footer\";\r\nimport {showModals} from \"../../redux/ModalContent\";\r\nimport axios from \"axios\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {getAboutMarker} from \"../../redux/markerAbout\";\r\nimport i18next from \"i18next\";\r\nimport MapAbout from \"../map/MapAbout\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\n\r\nconst AboutPharma = () => {\r\n    const {t} = useTranslation();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [pharmacy, setPharmacy] = useState(\"\");\r\n    const [comments, setComments] = useState([]);\r\n    const [savedPosts, setSavedPosts] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}pharmacy/${localStorage.getItem(\"pharmacyId\")}/`).then((response) => {\r\n            setPharmacy(response.data);\r\n            axios.get(`${baseUrl}comment/${response.data.user}/`).then((response) => {\r\n                setComments(response.data)\r\n            });\r\n            dispatch(getAboutMarker(response.data.location));\r\n        });\r\n        setSavedPosts(getSavedPosts())\r\n    }, []);\r\n\r\n    const isPlaceOpen = (startTime, endTime) => {\r\n        const startParts = startTime.split(':');\r\n        const endParts = endTime.split(':');\r\n\r\n        const startDate = new Date();\r\n        startDate.setHours(startParts[0], startParts[1], startParts[2]);\r\n\r\n        const endDate = new Date();\r\n        endDate.setHours(endParts[0], endParts[1], endParts[2]);\r\n\r\n        const now = new Date();\r\n\r\n        return now >= startDate && now <= endDate;\r\n    };\r\n\r\n    const ShowModal = (status, item) => {\r\n        dispatch(showModals({show: true, status, item}))\r\n    };\r\n\r\n    const getSavedPosts = () => {\r\n        const savedPosts = localStorage.getItem('pharmacy_saved');\r\n        return savedPosts ? JSON.parse(savedPosts) : [];\r\n    };\r\n\r\n    const handleSaveClick = (postId) => {\r\n        let updatedSavedPosts = [...savedPosts];\r\n\r\n        if (savedPosts.includes(postId)) {\r\n            updatedSavedPosts = updatedSavedPosts.filter(id => id !== postId);\r\n        } else {\r\n            updatedSavedPosts.push(postId);\r\n        }\r\n\r\n        localStorage.setItem('pharmacy_saved', JSON.stringify(updatedSavedPosts));\r\n        setSavedPosts(updatedSavedPosts);\r\n    };\r\n\r\n    return <div className=\"about-pharmacies\">\r\n        <Navbar/>\r\n        {pharmacy && <div className=\"pharmaci-box\">\r\n            <div className=\"header-wrapper\">\r\n                <div className=\"header\">\r\n                    <img src={pharmacy.image} alt=\"\"/>\r\n                </div>\r\n                <div className=\"left-header\">\r\n                    <div className=\"title-pahrma\">\r\n                        {pharmacy.translations[i18next.language].name}\r\n                    </div>\r\n                    <div onClick={() => handleSaveClick(pharmacy.id)} className=\"like\">\r\n                        <img\r\n                            src={savedPosts.includes(pharmacy.id) ? \"./images/like.png\" : \"./images/no-like.png\"}\r\n                            alt=\"\"/>\r\n\r\n                        <div className=\"name\">{t(\"save\")}</div>\r\n                    </div>\r\n                    <div className=\"section-commit\">\r\n                        <div className=\"raiting\">\r\n                            {pharmacy.avg_rating}\r\n                        </div>\r\n                        <div className=\"commit-count\">\r\n                            {pharmacy.comment_count} {t(\"comment\")}\r\n                        </div>\r\n                        <span></span>\r\n                        <div className=\"name\">\r\n                            {t(\"pharmacy\")}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-commit\">\r\n                        {pharmacy.open_24 ? <div\r\n                            className=\"open\">{t(\"open\")}</div> : isPlaceOpen(pharmacy.start_time, pharmacy.end_time) ?\r\n                            <div className=\"open\">{t(\"open\")}</div> :\r\n                            <div className=\"close\">{t(\"close\")}</div>}\r\n                        <span></span>\r\n                        <div className=\"name\">\r\n                            {pharmacy.open_24 ? \"24 soat ochiq\" : <>\r\n                                {pharmacy.start_time} {t(\"from\")}\r\n                                &nbsp;\r\n                                {pharmacy.end_time} {t(\"to\")}\r\n                            </>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"map-locations\">\r\n                <div className=\"map-side\">\r\n                    <MapAbout/>\r\n                </div>\r\n                <div className=\"information-location\">\r\n                    <div className=\"title\">\r\n                        <img src=\"./images/loaction-pharma.png\" alt=\"\"/>\r\n                        {t(\"address-pharmacy\")}\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        {pharmacy.translations[i18next.language].address}\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        <img src=\"./images/time-pharma.png\" alt=\"\"/>\r\n                        {t(\"working-time\")}\r\n                    </div>\r\n                    <div className=\"section-commit\">\r\n                        <div className=\"name\">\r\n                            {pharmacy.open_24 ? t(\"open24\") : <>\r\n                                {pharmacy.start_time} {t(\"from\")}\r\n                                &nbsp;\r\n                                {pharmacy.end_time} {t(\"to\")}\r\n                            </>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        <img src=\"./images/phone-pharma.png\" alt=\"\"/>\r\n                        {t(\"contact\")}\r\n                    </div>\r\n                    <div className=\"contact\">\r\n                        {pharmacy.phone1} <br/>\r\n                        {pharmacy.phone2}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"comments-box\">\r\n                <div className=\"header-commet\">\r\n                    <div className=\"counts\">\r\n                        <div className=\"raiting\">\r\n                            {pharmacy.avg_rating}\r\n                        </div>\r\n                        <div className=\"commit-count\">\r\n                            {pharmacy.comment_count}{t(\"comment\")}\r\n                        </div>\r\n                    </div>\r\n                    <div onClick={() => ShowModal(\"commit\", pharmacy.user)} className=\"btn-commit\">\r\n                        <img src=\"./images/comit.png\" alt=\"\"/>\r\n                        {t(\"comment-btn\")}\r\n                    </div>\r\n                </div>\r\n\r\n                {comments.map((item, index) => {\r\n                    return <div key={index} className=\"commits\">\r\n                        <div className=\"header-commit\">\r\n                            <div className=\"left-circle\">\r\n                                {item.name.slice(0, 1)}\r\n                            </div>\r\n                            <div className=\"right-names\">\r\n                                <div className=\"name\">\r\n                                    {item.name}\r\n                                    <span>{item.time}</span>\r\n                                </div>\r\n                                <div className=\"stars\">\r\n                                    {Array.from({length: item.mark}).map((_, index) => (\r\n                                        <img key={index} src=\"./images/raiting1.png\" alt=\"Rating 1\"/>\r\n                                    ))}\r\n\r\n                                    {Array.from({length: 5 - item.mark}).map((_, index) => (\r\n                                        <img key={index} src=\"./images/raiting2.png\" alt=\"Rating 2\"/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-commit\">\r\n                            {item.text}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>}\r\n        <div className=\"mobile-navbar-container\">\r\n            <MobileNavbar/>\r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n};\r\n\r\nexport default AboutPharma","import \"./register-style.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Register = () => {\r\n    const {t} = useTranslation();\r\n    const [direction, setDirection] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    return <div className=\"register-container\">\r\n        <div className=\"logo\">\r\n            <img src=\"./images/logo.png\" alt=\"\"/>\r\n        </div>\r\n\r\n        <div className=\"register-page-zero\">\r\n            <div className=\"xbtn\">\r\n                <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"title\">\r\n                {t(\"reason-register\")}\r\n            </div>\r\n            <div className=\"des\">\r\n                {t(\"register-text\")}\r\n            </div>\r\n\r\n\r\n            <div onClick={() => setDirection(\"/register-doctor\")} className={`items ${direction === \"/register-doctor\" ? \"active\" : \"\"}`}>\r\n                <img src=\"./images/icons.png\" alt=\"\"/>\r\n                {t(\"add-doctor\")}\r\n            </div>\r\n\r\n            <div onClick={() => setDirection(\"/register-hospital\")}\r\n                 className={`items ${direction === \"/register-hospital\" ? \"active\" : \"\"}`}>\r\n                <img src=\"./images/pin-location.png\" alt=\"\"/>\r\n                {t(\"add-clinic\")}\r\n            </div>\r\n\r\n            <div onClick={() => setDirection(\"/register-pharmacies\")}\r\n                 className={`items ${direction === \"/register-pharmacies\" ? \"active\" : \"\"}`}>\r\n                <img src=\"./images/pill.png\" alt=\"\"/>\r\n                {t(\"add-pharmacy\")}\r\n            </div>\r\n\r\n            <div onClick={() => navigate(direction)} className={`button-next ${!direction ? \"button-next-disabled\" : \"\"}`}>\r\n                {t(\"register-btn\")}\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Register","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import \"./style.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    TextField, MenuItem, InputLabel, FormControl, Select, Checkbox, OutlinedInput,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Loader from \"../../loader/Loader\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\r\n\r\n\r\nconst libraries = [\"places\"];\r\n\r\n\r\nconst RegisterHospital = () => {\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [hospitalType, setHospitalType] = useState('');\r\n    const [hospital, setHospital] = useState('');\r\n    const [invalidService, setInvalidService] = useState(true);\r\n    const [workingTime24, setWorkingTime24] = useState(false);\r\n    const [selected, setSelected] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [center, setCenter] = useState(null);\r\n    const [socialMedias, setSocialMedias] = useState([{key: \"web\", url: \"\"}]);\r\n    const [service, setService] = useState([\r\n        {service: \"\", options: [], sub_services_list: [{sub_service: \"\", price: \"\"}]}\r\n    ]);\r\n    const [addressLocation, setAddressLocation] = useState(\"\");\r\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\r\n    const [address_validate, setAddress_validate] = useState(false);\r\n    const [weekend, setWeekend] = useState([]);\r\n    const [region, setRegion] = useState(\"\");\r\n    const [region_validate, setRegion_validate] = useState(false);\r\n    const [logoHospital, setLogoHospital] = useState(null);\r\n    const [daysList, setDaysList] = useState([]);\r\n    const [hospitalList, setHospitalList] = useState([]);\r\n    const [serviceList, setServiceList] = useState([])\r\n    const [logoValidate, setLogoValidate] = useState(false);\r\n    const ref2 = useRef(null);\r\n    const [tg, setTg] = useState(false)\r\n    const [ins, setIns] = useState(false)\r\n    const [face, setFace] = useState(false)\r\n    const [you, setYou] = useState(false)\r\n    const [tik, setTik] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    const selectAddressIcon = {\r\n        url: \"./images/address.png\",\r\n        scaledSize: {width: 40, height: 50},\r\n    };\r\n\r\n    const options = useMemo(\r\n        () => ({\r\n            disableDefaultUI: false,\r\n            clickableIcons: false,\r\n        }),\r\n        []\r\n    );\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\r\n        libraries: libraries,\r\n        language: i18next.language,\r\n    });\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.hospital_type) {\r\n            errors.hospital_type = \"Required\";\r\n        }\r\n\r\n        if (!values.type) {\r\n            errors.type = \"Required\";\r\n        }\r\n\r\n        if (!values.nameUz) {\r\n            errors.nameUz = \"Required\";\r\n        }\r\n\r\n        if (!values.nameRu) {\r\n            errors.nameRu = \"Required\";\r\n        }\r\n\r\n        if (!values.phone1) {\r\n            errors.phone1 = \"Required\";\r\n        } else if (isNaN(Number(values.phone1))) {\r\n            errors.phone1 = \"Required\";\r\n        }\r\n\r\n        if (!values.phone2) {\r\n            errors.phone2 = \"Required\";\r\n        } else if (isNaN(Number(values.phone2))) {\r\n            errors.phone2 = \"Required\";\r\n        }\r\n\r\n        if (!values.working_days.length > 0) {\r\n            errors.working_days = \"Required\";\r\n        }\r\n\r\n        if (!workingTime24 && !values.start_time) {\r\n            errors.start_time = \"Required\";\r\n        }\r\n\r\n        if (!workingTime24 && !values.end_time) {\r\n            errors.end_time = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formOne = useFormik({\r\n        initialValues: {\r\n            nameUz: \"\",\r\n            nameRu: \"\",\r\n            hospital_type: \"\",\r\n            type: \"\",\r\n            phone1: \"\",\r\n            phone2: \"\",\r\n            start_time: null,\r\n            end_time: null,\r\n            working_days: [],\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            if (logoHospital) {\r\n                axios.post(`${baseUrl}checkuser/`, {phone: values.phone1}).then((response) => {\r\n\r\n                }).catch((error) => {\r\n                    if (error.response.status === 302) {\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert,\r\n                            text: \"Ushbu raqam ro'yxatdan o'tgan!\",\r\n                            img: \"./images/red.svg\",\r\n                            color: \"#ffefe7\",\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 5000);\r\n                    } else {\r\n                        setPageNumber(2);\r\n                    }\r\n                });\r\n            } else {\r\n                ref2.current?.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                });\r\n                setLogoValidate(true)\r\n            }\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n\r\n        axios.get(`${baseUrl}days/`).then((response) => {\r\n            setDaysList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}hospital-type/`).then((response) => {\r\n            setHospitalList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}speciality/`).then((response) => {\r\n            setServiceList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n    }, []);\r\n\r\n    const handleChangeMore = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n\r\n        setWeekend(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n\r\n        let new_list = daysList.filter(day => {\r\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\r\n        }).map(day => day.id);\r\n\r\n        formOne.values.working_days = new_list\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        setLogoValidate(false);\r\n        const {target: {files}} = event;\r\n        const file = files[0];\r\n\r\n        function getBase64(file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () {\r\n                setLogoHospital(reader.result);\r\n            };\r\n            reader.onerror = function () {\r\n                setLogoHospital(null);\r\n            };\r\n\r\n        }\r\n\r\n        getBase64(file);\r\n    };\r\n\r\n    const ClicklLocation = (e) => {\r\n        let latitude = e.latLng.lat();\r\n        let longitude = e.latLng.lng();\r\n\r\n        let locMy = {lat: latitude, lng: longitude};\r\n\r\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"uz\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setSelected(locMy);\r\n            setAddressLocation(fullAddress)\r\n            setAddress_validate(false)\r\n        });\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"ru\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setAddressLocationRu(fullAddress);\r\n        });\r\n    };\r\n\r\n    const PlacesAutocomplete = ({setSelected}) => {\r\n        const {\r\n            ready,\r\n            value,\r\n            setValue,\r\n            suggestions: {status, data},\r\n            clearSuggestions,\r\n        } = usePlacesAutocomplete({\r\n            requestOptions: {\r\n                language: i18next.language,\r\n            },\r\n        });\r\n\r\n        const handleSelect = async (address) => {\r\n            const results = await getGeocode({address});\r\n            const {lat, lng} = await getLatLng(results[0]);\r\n            let locMy = {lat, lng};\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\r\n\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n\r\n                setSelected(locMy);\r\n                setCenter({lat, lng});\r\n                setAddressLocation(fullAddress)\r\n                setAddress_validate(false)\r\n            });\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n                setAddressLocationRu(fullAddress);\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Combobox onSelect={handleSelect}>\r\n                <ComboboxInput\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    disabled={!ready}\r\n                    className=\"combobox-input\"\r\n                    placeholder=\"Manzilni kiriting...\"\r\n                />\r\n\r\n                <div className=\"address-wrapper\">\r\n                    <div className=\"list-address\">\r\n                        {status === \"OK\" &&\r\n                        data.map(({place_id, description}) => (\r\n                            <ComboboxOption key={place_id} value={description}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Combobox>\r\n        );\r\n    };\r\n\r\n    const addSocialMedia = (key) => {\r\n        if (key === \"telegram\") {\r\n            setTg(true)\r\n        }\r\n        if (key === \"instagram\") {\r\n            setIns(true)\r\n        }\r\n        if (key === \"facebook\") {\r\n            setFace(true)\r\n        }\r\n        if (key === \"tiktok\") {\r\n            setTik(true)\r\n        }\r\n        if (key === \"youtube\") {\r\n            setYou(true)\r\n        }\r\n        let newMedia = {key, url: \"\"};\r\n        let newArr = socialMedias.concat(newMedia);\r\n        setSocialMedias(newArr)\r\n    };\r\n\r\n    const delSocialMedia = (ind, key) => {\r\n        if (key === \"telegram\") {\r\n            setTg(false)\r\n        }\r\n        if (key === \"instagram\") {\r\n            setIns(false)\r\n        }\r\n        if (key === \"facebook\") {\r\n            setFace(false)\r\n        }\r\n        if (key === \"tiktok\") {\r\n            setTik(false)\r\n        }\r\n        if (key === \"youtube\") {\r\n            setYou(false)\r\n        }\r\n\r\n        let newArr = socialMedias.filter((item, index) => index !== ind);\r\n        setSocialMedias(newArr)\r\n    };\r\n\r\n    const addService = () => {\r\n        let newService = {service: \"\", options: [], sub_services_list: [{sub_service: \"\", price: \"\"}]}\r\n        let newArr = service.concat(newService);\r\n        setService(newArr)\r\n    };\r\n\r\n    const delService = (ind) => {\r\n        let newArr = service.filter((item, index) => index !== ind);\r\n        setService(newArr)\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        let loc = `${center.lat},${center.lng}`;\r\n        let allInfoHospital = {\r\n            translations: {\r\n                uz: {\r\n                    name: formOne.values.nameUz,\r\n                    address: addressLocation\r\n                },\r\n                ru: {\r\n                    name: formOne.values.nameRu,\r\n                    address: addressLocationRu\r\n                }\r\n            },\r\n            base64_image: logoHospital,\r\n            disabled: invalidService,\r\n            hospital_type: formOne.values.hospital_type,\r\n            type: formOne.values.type,\r\n            phone1: formOne.values.phone1,\r\n            phone2: formOne.values.phone2,\r\n            start_time: formOne.values.start_time,\r\n            end_time: formOne.values.end_time,\r\n            open_24: workingTime24,\r\n            location: loc,\r\n            working_days: formOne.values.working_days,\r\n            services: service,\r\n            socials: socialMedias,\r\n            region: region\r\n        }\r\n        setLoader(true);\r\n        axios.post(`${baseUrl}auth/register/hospital/`, allInfoHospital).then((response) => {\r\n            window.location.pathname = \"/login\";\r\n            setTimeout(() => {\r\n                setLoader(false)\r\n            }, 500);\r\n        }).catch((error) => {\r\n            setLoader(false);\r\n        });\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n    if (loader) return <Loader/>;\r\n\r\n    return <div className=\"register-hospital-container\">\r\n        <div className=\"logo\">\r\n            <img src=\"./images/logo.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"xbtn\">\r\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\r\n        </div>\r\n\r\n        <div className=\"register-page\">\r\n            <div className=\"header-register\">\r\n                <div className=\"line-page-numbers\">\r\n                    <div\r\n                        className={`line ${pageNumber === 1 || pageNumber === 2 || pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\r\n                    <div\r\n                        className={`num ${pageNumber === 1 || pageNumber === 2 || pageNumber === 3 ? \"num-active\" : \"\"}`}>\r\n                        1\r\n                        <div className={`name ${pageNumber === 1 || pageNumber === 2 ? \"active-name\" : \"\"}`}>\r\n                            Shifoxona haqida\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`line ${pageNumber === 2 || pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\r\n                    <div className={`num ${pageNumber === 2 || pageNumber === 3 ? \"num-active\" : \"\"}`}>\r\n                        2\r\n                        <div className={`name ${pageNumber === 2 ? \"active-name\" : \"\"}`}>\r\n                            Shifoxona manzili\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`line ${pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\r\n                    <div className={`num ${pageNumber === 3 ? \"num-active\" : \"\"}`}>\r\n                        3\r\n                        <div className=\"name\">\r\n                            Xizmatlar\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`line ${pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\r\n                </div>\r\n                <div onClick={() => navigate(\"/register\")} className=\"prev-mobile\">\r\n                    <img src=\"./images/arrow.png\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n\r\n            {pageNumber === 1 && <div className=\"register-page-one\">\r\n\r\n                <div ref={ref2} className=\"title\">\r\n                    Shifoxona haqida aytib bering\r\n                </div>\r\n                <div className=\"des\">\r\n                    Shifoxona akkountingizni ro‘yxatdan o‘tkazish uchun bu juda muhim\r\n                </div>\r\n\r\n                <div className=\"logo-hospital\">\r\n                    <div className={`logo-image ${logoValidate ? \"required-logo\" : \"\"}`}>\r\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\r\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\r\n                        }\r\n                    </div>\r\n\r\n                    {!logoHospital && <div className=\"label\">\r\n                        Rasm qo‘shish\r\n                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                    </div>}\r\n\r\n                    {logoHospital && <div onClick={() => setLogoHospital(null)} className=\"label\">\r\n                        Rasmni ochirish\r\n                        <img src=\"./images/cancel.png\" alt=\"\"/>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div className=\"inputs-box\">\r\n                    <TextField error={formOne.errors.nameUz === \"Required\"}\r\n                               value={formOne.nameUz}\r\n                               onChange={formOne.handleChange}\r\n                               name=\"nameUz\"\r\n                               sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                               id=\"outlined-basic\"\r\n                               label=\"Shifoxona nomini kiriting (uz) \" variant=\"outlined\" className=\"textField\"/>\r\n                </div>\r\n\r\n                <div className=\"inputs-box\">\r\n                    <TextField error={formOne.errors.nameRu === \"Required\"} value={formOne.nameRu}\r\n                               onChange={formOne.handleChange}\r\n                               name=\"nameRu\" sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                               id=\"outlined-basic\"\r\n                               label=\"Введите название больницы (ru) \" variant=\"outlined\" className=\"textField\"/>\r\n                </div>\r\n\r\n                <div className=\"des-input\">\r\n                    Iltimos, shifoxona nomini rus tili va o'zbek tilida kiritng\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                     className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Shifoxona</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.type === \"Required\"}\r\n                                name=\"type\"\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={hospital}\r\n                                label=\"Shifoxona\"\r\n                                onChange={(e) => {\r\n                                    formOne.handleChange(e);\r\n                                    setHospital(e.target.value)\r\n                                }}\r\n                            >\r\n                                <MenuItem value={1}>\r\n                                    Davlat\r\n                                </MenuItem>\r\n                                <MenuItem value={2}>\r\n                                    Xususiy\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div className=\"select-sides\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\"></div>\r\n                    <div className=\"sides\"> Nogironlar uchun imkoniyatlar</div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                     className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Shifoxona turi</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.hospital_type === \"Required\"}\r\n                                name=\"hospital_type\"\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={hospitalType}\r\n                                label=\"Shifoxona turi\"\r\n                                onChange={(e) => {\r\n                                    formOne.handleChange(e);\r\n                                    setHospitalType(e.target.value)\r\n                                }}\r\n                            >\r\n                                {hospitalList.map((item) => {\r\n                                    return <MenuItem key={item.id} value={item.id}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })}\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div className=\"select-sides\">\r\n                        <div className=\"on-of\">\r\n                            <div onClick={() => setInvalidService(true)}\r\n                                 className={`of ${invalidService ? \"on\" : \"\"}`}>\r\n                                Mavjud\r\n                            </div>\r\n                            <div onClick={() => setInvalidService(false)}\r\n                                 className={`of ${!invalidService ? \"on\" : \"\"}`}>\r\n                                Mavjud emas\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Ish vaqti</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                            <InputLabel id=\"demo-multiple-checkbox-label\">Ish kunlarini belgilang</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.working_days === \"Required\"}\r\n                                name=\"working_days\"\r\n                                labelId=\"demo-multiple-checkbox-label\"\r\n                                id=\"demo-multiple-checkbox\"\r\n                                multiple\r\n                                value={weekend}\r\n                                onChange={handleChangeMore}\r\n                                input={<OutlinedInput label=\"Ish kunlarini  belgilang\"/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {daysList.map((item) => (\r\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\r\n                                        <Checkbox\r\n                                            checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\r\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <div className=\"check-box\">\r\n                            <div className=\"checkbox-wrapper-13\">\r\n                                <input\r\n                                    onChange={(e) => {\r\n                                        setWorkingTime24((prevState) => !prevState);\r\n                                    }}\r\n                                    id=\"c1-13\"\r\n                                    type=\"checkbox\"\r\n                                />\r\n                            </div>\r\n                            <label htmlFor=\"c1-13\">\r\n                                Ish faoliyati 24 soat yuritiladi\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {workingTime24 ? \"\" : <div className=\"select-box-working-time\">\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.start_time}\r\n                            type=\"time\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.end_time} type=\"time\"/>\r\n                    </div>\r\n                </div>}\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Shifoxona bilan bog‘lanish</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            error={formOne.errors.phone1 === \"Required\"}\r\n                            value={formOne.phone1}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"phone1\"\r\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                            label=\"Telefon raqam 1\" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            error={formOne.errors.phone2 === \"Required\"}\r\n                            value={formOne.phone2}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"phone2\"\r\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                            label=\"Telefon raqam 2\" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        Ijtimoiy tarmoq sahifasi yoki veb sayt havolasi\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"inputs-box-link\">\r\n\r\n\r\n                    {socialMedias.map((item, index) => {\r\n                        return <div key={index} className=\"inputs-social-media\">\r\n\r\n                            {item.key === \"telegram\" && <img src=\"./images/social-media/telegram.png\" alt=\"\"/>}\r\n                            {item.key === \"web\" && <img src=\"./images/social-media/web.png\" alt=\"\"/>}\r\n                            {item.key === \"instagram\" && <img src=\"./images/social-media/instagram.png\" alt=\"\"/>}\r\n                            {item.key === \"facebook\" && <img src=\"./images/social-media/facebook.png\" alt=\"\"/>}\r\n                            {item.key === \"youtube\" && <img src=\"./images/social-media/youtube.png\" alt=\"\"/>}\r\n                            {item.key === \"tiktok\" && <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>}\r\n\r\n                            <TextField onChange={(e) => item.url = e.target.value} sx={{m: 1, minWidth: \"43%\"}}\r\n                                       size=\"small\"\r\n                                       id=\"outlined-basic\"\r\n                                       label=\"https://\" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                            {socialMedias.length > 1 && index !== 0 &&\r\n                            <div onClick={() => delSocialMedia(index, item.key)} className=\"del-icon\"><img\r\n                                src=\"./images/del-icon.png\" alt=\"\"/></div>}\r\n                        </div>\r\n                    })}\r\n                    <div className=\"des\">Ijtimoiy tarmoq sahifalarni kirtish majburiy emas!</div>\r\n\r\n\r\n                    <div className=\"add-social-media\">\r\n                        {!tg && <div onClick={() => addSocialMedia(\"telegram\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/telegram.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!ins && <div onClick={() => addSocialMedia(\"instagram\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/instagram.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!face && <div onClick={() => addSocialMedia(\"facebook\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/facebook.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!you && <div onClick={() => addSocialMedia(\"youtube\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/youtube.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!tik && <div onClick={() => addSocialMedia(\"tiktok\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <div className=\"des\">\r\n                        Quyidagi ijtimoiy tarmoq sahifalaringizni qo‘shish orqali bemorlarni bog‘lanishini\r\n                        osonlashtiring.\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\r\n                        Tasdiqlash va davom etish\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>}\r\n\r\n\r\n            {pageNumber === 2 &&\r\n            <div className=\"register-page-two\">\r\n                <div className=\"title\">\r\n                    Shifoxona qayerda joylashgan?\r\n                </div>\r\n                <div className=\"des\">\r\n                    Bemorlar sizni topishlari oson bo‘lishi uchun bu juda muhim\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Viloyatni tanlang</InputLabel>\r\n                            <Select\r\n                                error={region_validate}\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={region}\r\n                                label=\"Viloyatni tanlang\"\r\n                                onChange={(e) => setRegion(e.target.value)}\r\n                            >\r\n\r\n                                {regions.map((item, index) => {\r\n                                    return <MenuItem key={index} onClick={() => {\r\n                                        setRegion_validate(false)\r\n                                        setCenter({lat: item.latitude, lng: item.longitude})\r\n                                    }} value={index + 1}>{item.name}</MenuItem>\r\n                                })}\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-address\">Manzil:</div>\r\n                <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\r\n                    {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\r\n                    {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\r\n                    {!addressLocation && !addressLocationRu && <p>Manzilni xaritadan belgilang</p>}\r\n                </div>\r\n                <div className=\"address-container\">\r\n                    <GoogleMap\r\n                        zoom={9}\r\n                        center={center}\r\n                        options={options}\r\n                        onClick={ClicklLocation}\r\n                        mapContainerClassName=\"map-box\"\r\n                    >\r\n                        {selected && (\r\n                            <Marker icon={selectAddressIcon} position={selected}/>\r\n                        )}\r\n\r\n                        <div className=\"search-address\">\r\n                            <div className=\"places-container\">\r\n                                <PlacesAutocomplete setSelected={setSelected}/>\r\n                                <img src=\"./images/search.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </GoogleMap>\r\n                </div>\r\n\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => setPageNumber(1)} className=\"prev-btn\">\r\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\r\n                        Orqaga qaytish\r\n                    </div>\r\n                    <div onClick={() => {\r\n                        if (addressLocation && region) {\r\n                            setPageNumber(3)\r\n                        } else {\r\n                            if (!addressLocation) setAddress_validate(true);\r\n                            if (!region) setRegion_validate(true)\r\n                        }\r\n                    }} className=\"next-page-btn\">\r\n                        Tasdiqlash va davom etish\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n            {pageNumber === 3 &&\r\n            <div className=\"register-page-three\">\r\n                <div className=\"title\">\r\n                    Xizmatlar\r\n                </div>\r\n                <div className=\"des\">\r\n                    Shifoxonangizda mavjud tibbiy xizmatlar va ularnig narxi haqida batafsil ma’lumot bering\r\n                </div>\r\n\r\n                {service.map((item, index) => {\r\n                    return <div key={index} className=\"service\">\r\n                        <div className=\"select-box\">\r\n                            <div className=\"select-sides\">\r\n                                <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                    <InputLabel id=\"demo-select-large-label\"> Xizmat turi</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-select-small-label\"\r\n                                        id=\"demo-select-small\"\r\n                                        value={item.service}\r\n                                        label=\"Xizmat turi\"\r\n                                        onChange={(e) => {\r\n                                            item.service = e.target.value\r\n                                            item.options = serviceList.filter((item) => item.id === e.target.value)[0].options;\r\n                                            let change = [...service];\r\n                                            setService(change);\r\n                                        }}\r\n                                    >\r\n                                        {serviceList.map((item, index) => {\r\n                                            return <MenuItem key={item.id} value={item.id}>\r\n                                                {item.translations[i18next.language].name}\r\n                                            </MenuItem>\r\n                                        })}\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"select-sides\">\r\n                                {service.length > 1 && index !== 0 &&\r\n                                <img onClick={() => delService(index)} src=\"./images/del-icon.png\" alt=\"\"/>}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {item.sub_services_list.map((itemService, indexService) => {\r\n                            return <div key={indexService} className=\"select-box\">\r\n                                <div className=\"select-sides\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                        <InputLabel id=\"demo-select-large-label\">Xizmat nomi</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={itemService.sub_service}\r\n                                            label=\"Xizmat nomi\"\r\n                                            onChange={(e) => {\r\n                                                let change = [...service];\r\n                                                setService(change);\r\n                                                itemService.sub_service = e.target.value\r\n                                            }}\r\n                                        >\r\n                                            {item.options.map((item) => {\r\n                                                return <MenuItem key={item.id} value={item.id}>\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </MenuItem>\r\n                                            })}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"select-sides\">\r\n                                    <TextField onChange={(e) => itemService.price = e.target.value}\r\n                                               sx={{m: 1, minWidth: \"80%\"}}\r\n                                               size=\"small\" id=\"outlined-basic\"\r\n                                               label=\"Xizmat narxi \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                                    {item.sub_services_list.length > 1 && indexService !== 0 && <img onClick={() => {\r\n                                        item.sub_services_list = item.sub_services_list.filter((item, index) => index !== indexService);\r\n                                        let change = [...service];\r\n                                        setService(change);\r\n                                    }} src=\"./images/del-icon.png\" alt=\"\"/>}\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n\r\n                        <div onClick={() => {\r\n                            item.sub_services_list = item.sub_services_list.concat({sub_service: \"\", price: \"\"});\r\n                            let change = [...service];\r\n                            setService(change);\r\n                        }} className=\"add-social-media\">\r\n                            Xizmat qo'shish\r\n                        </div>\r\n                        <div className=\"des-btn\">\r\n                            Ushbu tugmachani bosish orqali yangi tibbiy xizmat qo‘shishingiz mumkin\r\n                        </div>\r\n                    </div>\r\n                })}\r\n\r\n                <div onClick={addService} className=\"add-social-media\">\r\n                    Xizmat yaratish\r\n                </div>\r\n                <div className=\"des-btn\">\r\n                    Ushbu tugmachani bosish orqali yangi turdagi tibbiy xizmat yaratishingiz mumkin\r\n                </div>\r\n\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => setPageNumber(2)} className=\"prev-btn\">\r\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\r\n                        Orqaga qaytish\r\n                    </div>\r\n\r\n                    <div onClick={sendAllInfo} className=\"next-page-btn\">\r\n                        Tasdiqlash\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default RegisterHospital","import \"./style.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    Checkbox,\r\n    OutlinedInput,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\r\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Loader from \"../../loader/Loader\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\r\nimport {useFormik} from \"formik\";\r\nimport Textarea from '@mui/joy/Textarea';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\r\n\r\n\r\nconst libraries = [\"places\"];\r\n\r\n\r\nconst RegisterHospital = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const cyrillicToTranslit = new CyrillicToTranslit();\r\n    const [hospitalType, setHospitalType] = useState('');\r\n    const [invalidService, setInvalidService] = useState(true);\r\n    const [selected, setSelected] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [center, setCenter] = useState(null);\r\n    const [socialMedias, setSocialMedias] = useState([{key: \"web\", url: \"\"}]);\r\n    const [addressLocation, setAddressLocation] = useState(\"\");\r\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\r\n    const [address_validate, setAddress_validate] = useState(false);\r\n    const [weekend, setWeekend] = useState([]);\r\n    const [subSpecialty, setSubSpecialty] = useState([]);\r\n    const [daysList, setDaysList] = useState([])\r\n    const [region, setRegion] = useState(\"\");\r\n    const [region_validate, setRegion_validate] = useState(false);\r\n    const [logoHospital, setLogoHospital] = useState(null);\r\n    const [specialty, setSpecialty] = useState(\"\");\r\n    const [specialtyList, setSpecialtyList] = useState([]);\r\n    const [subSpecialtyList, setSubSpecialtyList] = useState([]);\r\n    const [hospitalList, setHospitalList] = useState([]);\r\n    const [logoValidate, setLogoValidate] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const ref2 = useRef(null);\r\n    const [tg, setTg] = useState(false);\r\n    const [ins, setIns] = useState(false);\r\n    const [face, setFace] = useState(false);\r\n    const [you, setYou] = useState(false);\r\n    const [tik, setTik] = useState(false);\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\r\n        libraries: libraries,\r\n        language: i18next.language,\r\n    });\r\n\r\n    const options = useMemo(\r\n        () => ({\r\n            disableDefaultUI: false,\r\n            clickableIcons: false,\r\n        }),\r\n        []\r\n    );\r\n    const selectAddressIcon = {\r\n        url: \"./images/address.png\",\r\n        scaledSize: {width: 40, height: 50},\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.middle_name) {\r\n            errors.middle_name = \"Required\";\r\n        }\r\n\r\n        if (!values.bio_uz && pageNumber === 3) {\r\n            errors.bio_uz = \"Required\";\r\n        }\r\n\r\n        if (!values.bio_ru && pageNumber === 3) {\r\n            errors.bio_ru = \"Required\";\r\n        }\r\n\r\n        if (!values.start_time) {\r\n            errors.start_time = \"Required\";\r\n        }\r\n\r\n        if (!values.end_time) {\r\n            errors.end_time = \"Required\";\r\n        }\r\n\r\n        if (!values.phone1) {\r\n            errors.phone1 = \"Required\";\r\n        } else if (isNaN(Number(values.phone1))) {\r\n            errors.phone1 = \"Required\";\r\n        }\r\n\r\n        if (!values.specialty && pageNumber === 3) {\r\n            errors.specialty = \"Required\";\r\n        }\r\n\r\n        if (!values.experience && pageNumber === 3) {\r\n            errors.experience = \"Required\";\r\n        } else if (isNaN(Number(values.experience))) {\r\n            errors.experience = \"Required\";\r\n        }\r\n\r\n        if (!values.working_days.length > 0) {\r\n            errors.working_days = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formOne = useFormik({\r\n        initialValues: {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            middle_name: \"\",\r\n            bio_uz: \"\",\r\n            bio_ru: \"\",\r\n            phone1: \"\",\r\n            start_time: null,\r\n            end_time: null,\r\n            working_days: [],\r\n            consultation_fee: null,\r\n            second_consultation_fee: null,\r\n            specialty: null,\r\n            hospital: \"\",\r\n            sub_speciality: \"\",\r\n            experience: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            if (pageNumber === 1) {\r\n                if (logoHospital) {\r\n                    axios.post(`${baseUrl}checkuser/`, {phone: values.phone1}).then((response) => {\r\n\r\n                    }).catch((error) => {\r\n                        if (error.response.status === 302) {\r\n                            let idAlert = Date.now();\r\n                            let alert = {\r\n                                id: idAlert,\r\n                                text: \"Ushbu raqam ro'yxatdan o'tgan!\",\r\n                                img: \"./images/red.svg\",\r\n                                color: \"#ffefe7\",\r\n                            };\r\n                            dispatch(addAlert(alert));\r\n                            setTimeout(() => {\r\n                                dispatch(delAlert(idAlert));\r\n                            }, 5000);\r\n                        } else {\r\n                            setPageNumber(2);\r\n                        }\r\n                    })\r\n\r\n                } else {\r\n                    ref2.current?.scrollIntoView({\r\n                        behavior: \"smooth\",\r\n                    });\r\n                    setLogoValidate(true)\r\n                }\r\n            }\r\n\r\n            if (pageNumber === 2) {\r\n                if (region && (addressLocation || values.hospital)) {\r\n                    setPageNumber(3)\r\n                } else {\r\n                    if (!addressLocation) setAddress_validate(true);\r\n                    if (!region) setRegion_validate(true)\r\n                }\r\n            }\r\n\r\n            if (pageNumber === 3) {\r\n                sendAllInfo()\r\n            }\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n\r\n        axios.get(`${baseUrl}days/`).then((response) => {\r\n            setDaysList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}hospital-short/`).then((response) => {\r\n            setHospitalList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}speciality/`).then((response) => {\r\n            setSpecialtyList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n    }, []);\r\n\r\n    const getSubSpecialty = (id) => {\r\n        axios.get(`${baseUrl}speciality/${id}/`).then((response) => {\r\n            setSubSpecialtyList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n    };\r\n\r\n    const handleChangeMore = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n\r\n        setWeekend(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n\r\n        let new_list = daysList.filter(day => {\r\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\r\n        }).map(day => day.id);\r\n\r\n        formOne.values.working_days = new_list\r\n    };\r\n\r\n    const handleChangeMoreSpeciality = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n\r\n        setSubSpecialty(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n\r\n        let new_list = subSpecialtyList.filter(day => {\r\n            return day.translations[i18next.language].name && value.includes(day.translations[i18next.language].name);\r\n        }).map(day => day.id);\r\n\r\n        formOne.values.sub_speciality = new_list\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        setLogoValidate(false);\r\n        const {target: {files}} = event;\r\n        const file = files[0];\r\n\r\n        function getBase64(file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () {\r\n                setLogoHospital(reader.result);\r\n            };\r\n            reader.onerror = function () {\r\n                setLogoHospital(null);\r\n            };\r\n\r\n        }\r\n\r\n        getBase64(file);\r\n    };\r\n\r\n    const ClicklLocation = (e) => {\r\n        let latitude = e.latLng.lat();\r\n        let longitude = e.latLng.lng();\r\n\r\n        let locMy = {lat: latitude, lng: longitude};\r\n\r\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"uz\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setSelected(locMy);\r\n            setAddressLocation(fullAddress)\r\n            setAddress_validate(false)\r\n        });\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"ru\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setAddressLocationRu(fullAddress);\r\n        });\r\n    };\r\n\r\n    const PlacesAutocomplete = ({setSelected}) => {\r\n        const {\r\n            ready,\r\n            value,\r\n            setValue,\r\n            suggestions: {status, data},\r\n            clearSuggestions,\r\n        } = usePlacesAutocomplete({\r\n            requestOptions: {\r\n                language: i18next.language,\r\n            },\r\n        });\r\n\r\n        const handleSelect = async (address) => {\r\n            const results = await getGeocode({address});\r\n            const {lat, lng} = await getLatLng(results[0]);\r\n            let locMy = {lat, lng};\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\r\n\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n\r\n                setSelected(locMy);\r\n                setCenter({lat, lng});\r\n                setAddressLocation(fullAddress)\r\n                setAddress_validate(false)\r\n            });\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n                setAddressLocationRu(fullAddress);\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Combobox onSelect={handleSelect}>\r\n                <ComboboxInput\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    disabled={!ready}\r\n                    className=\"combobox-input\"\r\n                    placeholder=\"Manzilni kiriting...\"\r\n                />\r\n\r\n                <div className=\"address-wrapper\">\r\n                    <div className=\"list-address\">\r\n                        {status === \"OK\" &&\r\n                        data.map(({place_id, description}) => (\r\n                            <ComboboxOption key={place_id} value={description}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Combobox>\r\n        );\r\n    };\r\n\r\n    const addSocialMedia = (key) => {\r\n        if (key === \"telegram\") {\r\n            setTg(true)\r\n        }\r\n        if (key === \"instagram\") {\r\n            setIns(true)\r\n        }\r\n        if (key === \"facebook\") {\r\n            setFace(true)\r\n        }\r\n        if (key === \"tiktok\") {\r\n            setTik(true)\r\n        }\r\n        if (key === \"youtube\") {\r\n            setYou(true)\r\n        }\r\n        let newMedia = {key, url: \"\"};\r\n        let newArr = socialMedias.concat(newMedia);\r\n        setSocialMedias(newArr)\r\n    };\r\n\r\n    const delSocialMedia = (ind, key) => {\r\n        if (key === \"telegram\") {\r\n            setTg(false)\r\n        }\r\n        if (key === \"instagram\") {\r\n            setIns(false)\r\n        }\r\n        if (key === \"facebook\") {\r\n            setFace(false)\r\n        }\r\n        if (key === \"tiktok\") {\r\n            setTik(false)\r\n        }\r\n        if (key === \"youtube\") {\r\n            setYou(false)\r\n        }\r\n\r\n        let newArr = socialMedias.filter((item, index) => index !== ind);\r\n        setSocialMedias(newArr)\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        let loc = `${center.lat},${center.lng}`;\r\n        let allInfoHospital = {\r\n            translations: {\r\n                uz: {\r\n                    first_name: cyrillicToTranslit.transform(formOne.values.first_name),\r\n                    last_name: cyrillicToTranslit.transform(formOne.values.last_name),\r\n                    middle_name: cyrillicToTranslit.transform(formOne.values.middle_name),\r\n                    bio: formOne.values.bio_uz,\r\n                    address: addressLocation\r\n                },\r\n                ru: {\r\n                    first_name: cyrillicToTranslit.reverse(formOne.values.first_name),\r\n                    last_name: cyrillicToTranslit.reverse(formOne.values.last_name),\r\n                    middle_name: cyrillicToTranslit.reverse(formOne.values.middle_name),\r\n                    bio: formOne.values.bio_ru,\r\n                    address: addressLocationRu\r\n                }\r\n            },\r\n            base64_image: logoHospital,\r\n            gender: invalidService,\r\n            phone: formOne.values.phone1,\r\n            start_time: formOne.values.start_time,\r\n            end_time: formOne.values.end_time,\r\n            location: loc,\r\n            working_days: formOne.values.working_days,\r\n            socials: socialMedias,\r\n            region: region,\r\n            consultation_fee: formOne.values.consultation_fee,\r\n            second_consultation_fee: formOne.values.second_consultation_fee,\r\n            specialty: formOne.values.specialty,\r\n            hospital: formOne.values.hospital,\r\n            sub_speciality: formOne.values.sub_speciality,\r\n            experience: formOne.values.experience\r\n        };\r\n        setLoader(true);\r\n        axios.post(`${baseUrl}auth/register/doctor/`, allInfoHospital).then((response) => {\r\n            window.location.pathname = \"/login\";\r\n            setTimeout(() => {\r\n                setLoader(false)\r\n            }, 500);\r\n        }).catch((error) => {\r\n            setLoader(false)\r\n        });\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n    if (loader) return <Loader/>;\r\n\r\n    return <div className=\"register-doctor-container\">\r\n        <div className=\"logo\">\r\n            <img src=\"./images/logo.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"xbtn\">\r\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"register-page\">\r\n            <div className=\"header-register\">\r\n                <div className=\"line-page-numbers\">\r\n                    <div\r\n                        className={`line ${pageNumber === 1 || pageNumber === 2 || pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\r\n                    <div\r\n                        className={`num ${pageNumber === 1 || pageNumber === 2 || pageNumber === 3 ? \"num-active\" : \"\"}`}>\r\n                        1\r\n                        <div className={`name ${pageNumber === 1 || pageNumber === 2 ? \"active-name\" : \"\"}`}>\r\n                            Shifokor haqida\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`line ${pageNumber === 2 || pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\r\n                    <div className={`num ${pageNumber === 2 || pageNumber === 3 ? \"num-active\" : \"\"}`}>\r\n                        2\r\n                        <div className={`name ${pageNumber === 2 ? \"active-name\" : \"\"}`}>\r\n                            Shifokor ish joyi\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`line ${pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\r\n                    <div className={`num ${pageNumber === 3 ? \"num-active\" : \"\"}`}>\r\n                        3\r\n                        <div className=\"name\">\r\n                            Mutaxasisligi to'grisida\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`line ${pageNumber === 3 ? \"line-active\" : \"\"}`}></div>\r\n                </div>\r\n                <div onClick={() => navigate(\"/register\")} className=\"prev-mobile\">\r\n                    <img src=\"./images/arrow.png\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n\r\n            {pageNumber === 1 &&\r\n            <div className=\"register-page-one\">\r\n                <div ref={ref2} className=\"title\">\r\n                    O'zingiz haqingizda aytib bering\r\n                </div>\r\n                <div className=\"des\">\r\n                    Shaxsiy akkountingizni ro‘yxatdan o‘tkazish uchun bu juda muhim\r\n                </div>\r\n\r\n                <div className=\"logo-hospital\">\r\n                    <div className={`logo-image ${logoValidate ? \"required-logo\" : \"\"}`}>\r\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\r\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\r\n                        }\r\n                    </div>\r\n\r\n                    {!logoHospital && <div className=\"label\">\r\n                        Rasm qo‘shish\r\n                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                    </div>}\r\n\r\n                    {logoHospital && <div onClick={() => setLogoHospital(null)} className=\"label\">\r\n                        Rasmni ochirish\r\n                        <img src=\"./images/cancel.png\" alt=\"\"/>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField error={formOne.errors.last_name === \"Required\"}\r\n                                   value={formOne.last_name}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"last_name\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Familiyangiz \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField error={formOne.errors.first_name === \"Required\"}\r\n                                   value={formOne.first_name}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"first_name\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Ismingiz \" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField error={formOne.errors.middle_name === \"Required\"}\r\n                                   value={formOne.middle_name}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"middle_name\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Otangiz ismi \" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">Jinsingiz</div>\r\n                    <div className=\"sides\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <div className=\"on-of\">\r\n                            <div onClick={() => setInvalidService(true)} className={`of ${invalidService ? \"on\" : \"\"}`}>\r\n                                Erkak\r\n                            </div>\r\n                            <div onClick={() => setInvalidService(false)}\r\n                                 className={`of ${!invalidService ? \"on\" : \"\"}`}>\r\n                                Ayol\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            error={formOne.errors.phone1 === \"Required\"}\r\n                            value={formOne.phone1}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"phone1\"\r\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                            label=\"Telefon raqam \" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Qabul vaqtlari</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                            <InputLabel id=\"demo-multiple-checkbox-label\">Ish kunlarini belgilang</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.working_days === \"Required\"}\r\n                                name=\"working_days\"\r\n                                labelId=\"demo-multiple-checkbox-label\"\r\n                                id=\"demo-multiple-checkbox\"\r\n                                multiple\r\n                                value={weekend}\r\n                                onChange={handleChangeMore}\r\n                                input={<OutlinedInput label=\"Ish kunlarini  belgilang\"/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {daysList.map((item, index) => (\r\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\r\n                                        <Checkbox\r\n                                            checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\r\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box-working-time\">\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.start_time}\r\n                            type=\"time\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti tugashi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.end_time} type=\"time\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Siz bilan bog'lanish uchun</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        Ijtimoiy tarmoq sahifasi yoki veb sayt havolasi\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"inputs-box-link\">\r\n\r\n\r\n                    {socialMedias.map((item, index) => {\r\n                        return <div key={index} className=\"inputs-social-media\">\r\n\r\n                            {item.key === \"telegram\" && <img src=\"./images/social-media/telegram.png\" alt=\"\"/>}\r\n                            {item.key === \"web\" && <img src=\"./images/social-media/web.png\" alt=\"\"/>}\r\n                            {item.key === \"instagram\" && <img src=\"./images/social-media/instagram.png\" alt=\"\"/>}\r\n                            {item.key === \"facebook\" && <img src=\"./images/social-media/facebook.png\" alt=\"\"/>}\r\n                            {item.key === \"youtube\" && <img src=\"./images/social-media/youtube.png\" alt=\"\"/>}\r\n                            {item.key === \"tiktok\" && <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>}\r\n\r\n                            <TextField onChange={(e) => item.url = e.target.value} sx={{m: 1, minWidth: \"43%\"}}\r\n                                       size=\"small\"\r\n                                       id=\"outlined-basic\"\r\n                                       label=\"https://\" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                            {socialMedias.length > 1 && index !== 0 &&\r\n                            <div onClick={() => delSocialMedia(index, item.key)} className=\"del-icon\"><img\r\n                                src=\"./images/del-icon.png\" alt=\"\"/></div>}\r\n                        </div>\r\n                    })}\r\n                    <div className=\"des\">Ijtimoiy tarmoq sahifalarni kirtish majburiy emas!</div>\r\n\r\n\r\n                    <div className=\"add-social-media\">\r\n                        {!tg && <div onClick={() => addSocialMedia(\"telegram\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/telegram.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!ins && <div onClick={() => addSocialMedia(\"instagram\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/instagram.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!face && <div onClick={() => addSocialMedia(\"facebook\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/facebook.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!you && <div onClick={() => addSocialMedia(\"youtube\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/youtube.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!tik && <div onClick={() => addSocialMedia(\"tiktok\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <div className=\"des\">\r\n                        Quyidagi ijtimoiy tarmoq sahifalaringizni qo‘shish orqali bemorlarni bog‘lanishini\r\n                        osonlashtiring.\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\r\n                        Tasdiqlash va davom etish\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n            {pageNumber === 2 &&\r\n            <div className=\"register-page-two\">\r\n                <div className=\"title\">\r\n                    Ish joyingiz qayerda joylashgan?\r\n                </div>\r\n                <div className=\"des\">\r\n                    Bemorlar sizni topishlari oson bo‘lishi uchun bu juda muhim\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Viloyatni tanlang</InputLabel>\r\n                            <Select\r\n                                error={region_validate}\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={region}\r\n                                label=\"Viloyatni tanlang\"\r\n                                onChange={(e) => setRegion(e.target.value)}\r\n                            >\r\n\r\n                                {regions.map((item, index) => {\r\n                                    return <MenuItem key={index} onClick={() => {\r\n                                        setRegion_validate(false)\r\n                                        setCenter({lat: item.latitude, lng: item.longitude})\r\n                                    }} value={index + 1}>{item.name}</MenuItem>\r\n                                })}\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Ish joyingizni tanlang</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.hospital === \"Required\"}\r\n                                name=\"hospital\"\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={hospitalType}\r\n                                label=\"Ish joyingizni tanlang\"\r\n                                onChange={(e) => {\r\n                                    formOne.handleChange(e)\r\n                                    setHospitalType(e.target.value)\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={() => {\r\n                                    setAddressLocation(\"\");\r\n                                    setAddressLocationRu(\"\");\r\n                                }} value={\"\"}>---</MenuItem>\r\n                                {hospitalList.map((item) => {\r\n                                    return <MenuItem key={item.id}\r\n                                                     value={item.id}>{item.translations[i18next.language].name}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    !formOne.values.hospital && <>\r\n                        <div className=\"label-address\">Manzil:</div>\r\n\r\n                        <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\r\n                            {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\r\n                            {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\r\n                            {!addressLocation && !addressLocationRu && <p>Manzilni xaritadan belgilang</p>}\r\n                        </div>\r\n\r\n                        <div className=\"address-container\">\r\n                            <GoogleMap\r\n                                zoom={9}\r\n                                center={center}\r\n                                options={options}\r\n                                onClick={ClicklLocation}\r\n                                mapContainerClassName=\"map-box\"\r\n                            >\r\n                                {selected && (\r\n                                    <Marker icon={selectAddressIcon} position={selected}/>\r\n                                )}\r\n\r\n                                <div className=\"search-address\">\r\n                                    <div className=\"places-container\">\r\n                                        <PlacesAutocomplete setSelected={setSelected}/>\r\n                                        <img src=\"./images/search.png\" alt=\"\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </GoogleMap>\r\n                        </div>\r\n                    </>\r\n                }\r\n\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => setPageNumber(1)} className=\"prev-btn\">\r\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\r\n                        Orqaga qaytish\r\n                    </div>\r\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\r\n                        Tasdiqlash va davom etish\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n            {pageNumber === 3 &&\r\n            <div className=\"register-page-three\">\r\n                <div className=\"title\">\r\n                    Nima ish bilan shug‘ullanasiz?\r\n                </div>\r\n                <div className=\"des\">\r\n                    Bemorlar sizni topishlari oson bo‘lishi uchun bu juda muhim\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Asosiy mutaxassislikni tanlang</InputLabel>\r\n                            <Select\r\n                                label=\"Asosiy mutaxassislikni tanlang___\"\r\n                                error={formOne.errors.specialty === \"Required\"}\r\n                                name=\"specialty\"\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={specialty}\r\n                                onChange={(e) => {\r\n                                    formOne.handleChange(e)\r\n                                    setSpecialty(e.target.value)\r\n                                    setSubSpecialty([])\r\n                                    getSubSpecialty(e.target.value);\r\n                                }}\r\n                            >\r\n                                {specialtyList.map((item, index) => {\r\n                                    return <MenuItem key={item.id}\r\n                                                     value={item.id}>{item.translations[i18next.language].name}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                            <InputLabel id=\"demo-multiple-checkbox-label\">Qo'shimcha mutaxassisliklar</InputLabel>\r\n                            <Select\r\n                                name=\"sub_speciality\"\r\n                                labelId=\"demo-multiple-checkbox-label\"\r\n                                id=\"demo-multiple-checkbox\"\r\n                                multiple\r\n                                value={subSpecialty}\r\n                                onChange={handleChangeMoreSpeciality}\r\n                                input={<OutlinedInput label=\"Qo'shimcha mutaxassisliklar__\"/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {subSpecialtyList.map((item, index) => (\r\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].name}>\r\n                                        <Checkbox\r\n                                            checked={subSpecialty.indexOf(item.translations[i18next.language].name) > -1}/>\r\n                                        <ListItemText primary={item.translations[i18next.language].name}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField error={formOne.errors.experience === \"Required\"}\r\n                                   value={formOne.experience}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"experience\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Tajribangiz \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            value={formOne.consultation_fee}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"consultation_fee\"\r\n                            sx={{m: 1, minWidth: \"80%\"}} size=\"small\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Birinchi konsultatsiya \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                        <div className=\"price\">UZS</div>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            value={formOne.second_consultation_fee}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"second_consultation_fee\"\r\n                            sx={{m: 1, minWidth: \"80%\"}} size=\"small\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Ikkinchi konsultatsiya \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                        <div className=\"price\">UZS</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-validate\">\r\n                    <div className=\"select-sides\">\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <div className=\"des-no-validate\">\r\n                            Bu maydon to‘ldirish muhim emas. Bo‘sh qoldirsangiz ham bo‘ladi\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-for-more-info\">\r\n                    <div className=\"des-info\">\r\n                        Iltimos o'zingiz haqingizdagi ma'lumotlarni o'zbek va rus tillarida kiriting!\r\n                    </div>\r\n                    <label htmlFor=\"more-info\">O‘zingiz haqingizda batafsilroq yozing (uz)</label>\r\n                    <Textarea\r\n                        error={formOne.errors.bio_uz === \"Required\"}\r\n                        value={formOne.bio_uz}\r\n                        onChange={formOne.handleChange}\r\n                        name=\"bio_uz\"\r\n                        className=\"textarea_bio\"\r\n                        placeholder=\"Yutuqlaringiz, ta’lim olgan joylaringiz haqida va h.k. \"\r\n                        sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                    />\r\n\r\n                    <label htmlFor=\"more-info\">Напишите больше о себе (ru)</label>\r\n                    <Textarea\r\n                        error={formOne.errors.bio_ru === \"Required\"}\r\n                        value={formOne.bio_ru}\r\n                        onChange={formOne.handleChange}\r\n                        name=\"bio_ru\"\r\n                        className=\"textarea_bio\"\r\n                        placeholder=\"О ваших достижениях, местах обучения и т.д.\"\r\n                        sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => setPageNumber(2)} className=\"prev-btn\">\r\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\r\n                        Orqaga qaytish\r\n                    </div>\r\n\r\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\r\n                        Tasdiqlash\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default RegisterHospital","import \"./style.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField, MenuItem, InputLabel, FormControl, Select, Checkbox, OutlinedInput,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport {GoogleMap, Marker, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Loader from \"../../loader/Loader\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\n\r\nconst RegisterPharmacies = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [workingTime24, setWorkingTime24] = useState(false);\r\n    const [selected, setSelected] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [center, setCenter] = useState(null);\r\n    const [addressLocation, setAddressLocation] = useState(\"\");\r\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\r\n    const [address_validate, setAddress_validate] = useState(false);\r\n    const [region, setRegion] = useState(\"\");\r\n    const [region_validate, setRegion_validate] = useState(false);\r\n    const [logoHospital, setLogoHospital] = useState(null);\r\n    const [weekend, setWeekend] = useState([]);\r\n    const [logoValidate, setLogoValidate] = useState(false);\r\n    const ref2 = useRef(null);\r\n    const [daysList, setDaysList] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    const selectAddressIcon = {\r\n        url: \"./images/address.png\",\r\n        scaledSize: {width: 40, height: 50},\r\n    };\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\r\n        libraries: libraries,\r\n        language: i18next.language,\r\n    });\r\n\r\n    const options = useMemo(\r\n        () => ({\r\n            disableDefaultUI: false,\r\n            clickableIcons: false,\r\n        }),\r\n        []\r\n    );\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.nameUz) {\r\n            errors.nameUz = \"Required\";\r\n        }\r\n\r\n        if (!values.nameRu) {\r\n            errors.nameRu = \"Required\";\r\n        }\r\n\r\n        if (!values.phone1) {\r\n            errors.phone1 = \"Required\";\r\n        } else if (isNaN(Number(values.phone1))) {\r\n            errors.phone1 = \"Required\";\r\n        }\r\n\r\n        if (!values.phone2) {\r\n            errors.phone2 = \"Required\";\r\n        } else if (isNaN(Number(values.phone2))) {\r\n            errors.phone2 = \"Required\";\r\n        }\r\n\r\n        if (!values.working_days.length > 0) {\r\n            errors.working_days = \"Required\";\r\n        }\r\n\r\n        if (!workingTime24 && !values.start_time) {\r\n            errors.start_time = \"Required\";\r\n        }\r\n\r\n        if (!workingTime24 && !values.end_time) {\r\n            errors.end_time = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formOne = useFormik({\r\n        initialValues: {\r\n            nameUz: \"\",\r\n            nameRu: \"\",\r\n            hospital_type: \"\",\r\n            phone1: \"\",\r\n            phone2: \"\",\r\n            start_time: null,\r\n            end_time: null,\r\n            working_days: [],\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            if (logoHospital) {\r\n                axios.post(`${baseUrl}checkuser/`, {phone: values.phone1}).then((response) => {\r\n\r\n                }).catch((error) => {\r\n                    if (error.response.status === 302) {\r\n                        let idAlert = Date.now();\r\n                        let alert = {\r\n                            id: idAlert,\r\n                            text: \"Ushbu raqam ro'yxatdan o'tgan!\",\r\n                            img: \"./images/red.svg\",\r\n                            color: \"#ffefe7\",\r\n                        };\r\n                        dispatch(addAlert(alert));\r\n                        setTimeout(() => {\r\n                            dispatch(delAlert(idAlert));\r\n                        }, 5000);\r\n                    } else {\r\n                        setPageNumber(2);\r\n                    }\r\n                });\r\n            } else {\r\n                ref2.current?.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                });\r\n                setLogoValidate(true)\r\n            }\r\n        },\r\n    });\r\n\r\n    const getInputPhoto = (event) => {\r\n        setLogoValidate(false);\r\n        const {target: {files}} = event;\r\n        const file = files[0];\r\n\r\n        function getBase64(file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () {\r\n                setLogoHospital(reader.result);\r\n            };\r\n            reader.onerror = function () {\r\n                setLogoHospital(null);\r\n            };\r\n\r\n        }\r\n\r\n        getBase64(file);\r\n    };\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n\r\n        axios.get(`${baseUrl}days/`).then((response) => {\r\n            setDaysList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n    }, []);\r\n\r\n    const handleChangeMore = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n\r\n        setWeekend(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n\r\n        let new_list = daysList.filter(day => {\r\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\r\n        }).map(day => day.id);\r\n\r\n        formOne.values.working_days = new_list\r\n    };\r\n\r\n    const ClicklLocation = (e) => {\r\n        let latitude = e.latLng.lat();\r\n        let longitude = e.latLng.lng();\r\n\r\n        let locMy = {lat: latitude, lng: longitude};\r\n\r\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"uz\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setSelected(locMy);\r\n            setAddressLocation(fullAddress)\r\n            setAddress_validate(false)\r\n        });\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"ru\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setAddressLocationRu(fullAddress);\r\n        });\r\n    };\r\n\r\n    const PlacesAutocomplete = ({setSelected}) => {\r\n        const {\r\n            ready,\r\n            value,\r\n            setValue,\r\n            suggestions: {status, data},\r\n            clearSuggestions,\r\n        } = usePlacesAutocomplete({\r\n            requestOptions: {\r\n                language: i18next.language,\r\n            },\r\n        });\r\n\r\n        const handleSelect = async (address) => {\r\n            const results = await getGeocode({address});\r\n            const {lat, lng} = await getLatLng(results[0]);\r\n            let locMy = {lat, lng};\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\r\n\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n\r\n                setSelected(locMy);\r\n                setCenter({lat, lng});\r\n                setAddressLocation(fullAddress)\r\n                setAddress_validate(false)\r\n            });\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n                setAddressLocationRu(fullAddress);\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Combobox onSelect={handleSelect}>\r\n                <ComboboxInput\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    disabled={!ready}\r\n                    className=\"combobox-input\"\r\n                    placeholder=\"Manzilni kiriting...\"\r\n                />\r\n\r\n                <div className=\"address-wrapper\">\r\n                    <div className=\"list-address\">\r\n                        {status === \"OK\" &&\r\n                        data.map(({place_id, description}) => (\r\n                            <ComboboxOption key={place_id} value={description}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Combobox>\r\n        );\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        let loc = `${center.lat},${center.lng}`;\r\n        let allInfoHospital = {\r\n            translations: {\r\n                uz: {\r\n                    name: formOne.values.nameUz,\r\n                    address: addressLocation\r\n                },\r\n                ru: {\r\n                    name: formOne.values.nameRu,\r\n                    address: addressLocationRu\r\n                }\r\n            },\r\n            base64_image: logoHospital,\r\n            phone1: formOne.values.phone1,\r\n            phone2: formOne.values.phone2,\r\n            start_time: formOne.values.start_time,\r\n            end_time: formOne.values.end_time,\r\n            open_24: workingTime24,\r\n            location: loc,\r\n            working_days: formOne.values.working_days,\r\n            region: region\r\n        };\r\n        setLoader(true);\r\n        axios.post(`${baseUrl}auth/register/pharmacy/`, allInfoHospital).then((response) => {\r\n            window.location.pathname = \"/login\";\r\n            setTimeout(() => {\r\n                setLoader(false)\r\n            }, 500);\r\n        }).catch((error) => {\r\n            setLoader(false);\r\n        });\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n    if (loader) return <Loader/>;\r\n    return <div className=\"register-pharmacies-container\">\r\n        <div className=\"logo\">\r\n            <img src=\"./images/logo.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"xbtn\">\r\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"register-page\">\r\n            <div className=\"header-register\">\r\n                <div className=\"line-page-numbers\">\r\n                    <div className={`line ${pageNumber === 1 || pageNumber === 2 ? \"line-active\" : \"\"}`}></div>\r\n                    <div className={`num ${pageNumber === 1 || pageNumber === 2 ? \"num-active\" : \"\"}`}>\r\n                        1\r\n                        <div className={`name ${pageNumber === 1 || pageNumber === 2 ? \"active-name\" : \"\"}`}>\r\n                            Dorixona haqida\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`line ${pageNumber === 2 ? \"line-active\" : \"\"}`}></div>\r\n                    <div className={`num ${pageNumber === 2 ? \"num-active\" : \"\"}`}>\r\n                        2\r\n                        <div className={`name ${pageNumber === 2 ? \"active-name\" : \"\"}`}>\r\n                            Dorixona manzili\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`line ${pageNumber === 2 ? \"line-active\" : \"\"}`}></div>\r\n                </div>\r\n                <div onClick={() => navigate(\"/register\")} className=\"prev-mobile\">\r\n                    <img src=\"./images/arrow.png\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n\r\n            {pageNumber === 1 &&\r\n            <div className=\"register-page-one\">\r\n                <div  ref={ref2} className=\"title\">\r\n                    Dorixona haqida ma'lumotlarni toldiring\r\n                </div>\r\n                <div className=\"des\">\r\n                    Dorixona akkountingizni ro‘yxatdan o‘tkazish uchun bu juda muhim\r\n                </div>\r\n                <div className=\"logo-hospital\">\r\n                    <div className={`logo-image ${logoValidate ? \"required-logo\" : \"\"}`}>\r\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\r\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\r\n                        }\r\n                    </div>\r\n\r\n                    {!logoHospital && <div className=\"label\">\r\n                        Rasm qo‘shish\r\n                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                    </div>}\r\n\r\n                    {logoHospital && <div onClick={() => setLogoHospital(null)} className=\"label\">\r\n                        Rasmni ochirish\r\n                        <img src=\"./images/cancel.png\" alt=\"\"/>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div className=\"inputs-box\">\r\n                    <TextField error={formOne.errors.nameUz === \"Required\"}\r\n                               value={formOne.nameUz}\r\n                               onChange={formOne.handleChange}\r\n                               name=\"nameUz\"\r\n                               sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                               id=\"outlined-basic\"\r\n                               label=\"Dorixona nomini kiriting (uz) \" variant=\"outlined\" className=\"textField\"/>\r\n                </div>\r\n\r\n                <div className=\"inputs-box\">\r\n                    <TextField error={formOne.errors.nameRu === \"Required\"} value={formOne.nameRu}\r\n                               onChange={formOne.handleChange}\r\n                               name=\"nameRu\" sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                               id=\"outlined-basic\"\r\n                               label=\"Введите название аптеки (ru) \" variant=\"outlined\" className=\"textField\"/>\r\n                </div>\r\n\r\n                <div className=\"des-input\">\r\n                    Iltimos, dorixona nomini rus tili va o'zbek tilida kiritng\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Ish vaqti</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                            <InputLabel id=\"demo-multiple-checkbox-label\">Ish kunlarini belgilang</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.working_days === \"Required\"}\r\n                                name=\"working_days\"\r\n                                labelId=\"demo-multiple-checkbox-label\"\r\n                                id=\"demo-multiple-checkbox\"\r\n                                multiple\r\n                                value={weekend}\r\n                                onChange={handleChangeMore}\r\n                                input={<OutlinedInput label=\"Ish kunlarini  belgilang\"/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {daysList.map((item, index) => (\r\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\r\n                                        <Checkbox\r\n                                            checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\r\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <div className=\"check-box\">\r\n                            <div className=\"checkbox-wrapper-13\">\r\n                                <input\r\n                                    onChange={(e) => {\r\n                                        setWorkingTime24((prevState) => !prevState);\r\n                                    }}\r\n                                    id=\"c1-13\"\r\n                                    type=\"checkbox\"\r\n                                />\r\n                            </div>\r\n                            <label htmlFor=\"c1-13\">\r\n                                Ish faoliyati 24 soat yuritiladi\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {workingTime24 ? \"\" : <div className=\"select-box-working-time\">\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.start_time}\r\n                            type=\"time\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.end_time} type=\"time\"/>\r\n                    </div>\r\n                </div>}\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Dorixona bilan bog‘lanish</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            error={formOne.errors.phone1 === \"Required\"}\r\n                            value={formOne.phone1}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"phone1\"\r\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                            label=\"Telefon raqam 1\" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            error={formOne.errors.phone2 === \"Required\"}\r\n                            value={formOne.phone2}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"phone2\"\r\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                            label=\"Telefon raqam 2\" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\r\n                        Tasdiqlash va davom etish\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n\r\n            {pageNumber === 2 &&\r\n            <div className=\"register-page-two\">\r\n                <div className=\"title\">\r\n                    Dorixona qayerda joylashgan?\r\n                </div>\r\n                <div className=\"des\">\r\n                    Mijozlar sizni topishlari oson bo‘lishi uchun bu juda muhim\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Viloyatni tanlang</InputLabel>\r\n                            <Select\r\n                                error={region_validate}\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={region}\r\n                                label=\"Viloyatni tanlang\"\r\n                                onChange={(e) => setRegion(e.target.value)}\r\n                            >\r\n\r\n                                {regions.map((item, index) => {\r\n                                    return <MenuItem key={index} onClick={() => {\r\n                                        setRegion_validate(false)\r\n                                        setCenter({lat: item.latitude, lng: item.longitude})\r\n                                    }} value={index + 1}>{item.name}</MenuItem>\r\n                                })}\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-address\">Manzil:</div>\r\n                <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\r\n                    {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\r\n                    {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\r\n                    {!addressLocation && !addressLocationRu && <p>Manzilni xaritadan belgilang</p>}\r\n                </div>\r\n                <div className=\"address-container\">\r\n                    <GoogleMap\r\n                        zoom={9}\r\n                        center={center}\r\n                        options={options}\r\n                        onClick={ClicklLocation}\r\n                        mapContainerClassName=\"map-box\"\r\n                    >\r\n                        {selected && (\r\n                            <Marker icon={selectAddressIcon} position={selected}/>\r\n                        )}\r\n\r\n                        <div className=\"search-address\">\r\n                            <div className=\"places-container\">\r\n                                <PlacesAutocomplete setSelected={setSelected}/>\r\n                                <img src=\"./images/search.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </GoogleMap>\r\n                </div>\r\n\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => setPageNumber(1)} className=\"prev-btn\">\r\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\r\n                        Orqaga qaytish\r\n                    </div>\r\n                    <div onClick={() => {\r\n                        if (addressLocation && region) {\r\n                            sendAllInfo()\r\n                        } else {\r\n                            if (!addressLocation) setAddress_validate(true);\r\n                            if (!region) setRegion_validate(true)\r\n                        }\r\n                    }} className=\"next-page-btn\">\r\n                        Tasdiqlash va davom etish\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default RegisterPharmacies","import Navbar from \"../navbar/Navbar\";\r\nimport Footer from \"../footer/Footer\";\r\nimport \"./style-services.scss\"\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport i18next from \"i18next\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\nimport {getClinics} from \"../../redux/clinics\";\r\nimport {changeMenu} from \"../../redux/menu\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Service = () => {\r\n    const dispatch = useDispatch();\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [services, setServices] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}services/`).then((response) => {\r\n            setServices(response.data);\r\n        });\r\n    }, []);\r\n\r\n    const filterHospital = (id) => {\r\n        axios.post(`${baseUrl}filter-hospital/`, {sub_service: id}).then((response) => {\r\n            console.log(response.data)\r\n            dispatch(getClinics(response.data));\r\n            dispatch(changeMenu(true));\r\n            navigate(\"/\")\r\n        });\r\n    };\r\n\r\n    return <div className=\"service-container\">\r\n        <Navbar/>\r\n        <div className=\"service-box\">\r\n            <div className=\"title\">\r\n                {t(\"nav4\")}\r\n            </div>\r\n\r\n            <div className=\"services-tab\">\r\n                {\r\n                    services.map((item, index) => {\r\n                        return <div key={index}>\r\n                            <div className=\"category-name\">\r\n                                {item.translations[i18next.language].name} <span></span> {item.hospital_count}\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n            {services.map((item, index) => {\r\n                return <div key={index} className=\"service-content\">\r\n                    <div className=\"title-service\">\r\n                        {item.translations[i18next.language].name} <span></span>\r\n                        <div className=\"num\">\r\n                            {item.hospital_count}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"services\">\r\n                        {item.sub_service_list.map((item, index) => {\r\n                            return <div onClick={() => filterHospital(item.id)} key={index} className=\"service\">\r\n                                {item.translations[i18next.language].name}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n        <div className=\"mobile-navbar-container\">\r\n            <MobileNavbar/>\r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n};\r\n\r\nexport default Service","export const GOOGLE_MAPS_API_KEY = 'AIzaSyAT1gB8sob8_piFwfeu3AaTL15yHyjuc30'","import \"./style.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    Checkbox,\r\n    OutlinedInput,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport {GoogleMap, MarkerF, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\r\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Loader from \"../../loader/Loader\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\r\nimport {useFormik} from \"formik\";\r\nimport Textarea from '@mui/joy/Textarea';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\n\r\nconst ProfileDoctor = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const cyrillicToTranslit = new CyrillicToTranslit();\r\n    const [hospitalType, setHospitalType] = useState('');\r\n    const [invalidService, setInvalidService] = useState(true);\r\n    const [selected, setSelected] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [center, setCenter] = useState({lat: 41.295695, lng: 69.239730});\r\n    const [socialMedias, setSocialMedias] = useState([{key: \"web\", url: \"\"}]);\r\n    const [addressLocation, setAddressLocation] = useState(\"\");\r\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\r\n    const [address_validate, setAddress_validate] = useState(false);\r\n    const [weekend, setWeekend] = useState([]);\r\n    const [subSpecialty, setSubSpecialty] = useState([]);\r\n    const [daysList, setDaysList] = useState([])\r\n    const [region, setRegion] = useState(\"\");\r\n    const [region_validate, setRegion_validate] = useState(false);\r\n    const [logoHospital, setLogoHospital] = useState(null);\r\n    const [specialty, setSpecialty] = useState(\"\");\r\n    const [specialtyList, setSpecialtyList] = useState([]);\r\n    const [subSpecialtyList, setSubSpecialtyList] = useState([]);\r\n    const [hospitalList, setHospitalList] = useState([]);\r\n\r\n    const [tg, setTg] = useState(false);\r\n    const [ins, setIns] = useState(false);\r\n    const [face, setFace] = useState(false);\r\n    const [you, setYou] = useState(false);\r\n    const [tik, setTik] = useState(false);\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\r\n        libraries: libraries,\r\n        language: i18next.language,\r\n    });\r\n\r\n    const options = useMemo(\r\n        () => ({\r\n            disableDefaultUI: false,\r\n            clickableIcons: false,\r\n        }),\r\n        []\r\n    );\r\n    const selectAddressIcon = {\r\n        url: \"./images/address.png\",\r\n        scaledSize: {width: 40, height: 50},\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.middle_name) {\r\n            errors.middle_name = \"Required\";\r\n        }\r\n\r\n        if (!values.bio_uz && pageNumber === 3) {\r\n            errors.bio_uz = \"Required\";\r\n        }\r\n\r\n        if (!values.bio_ru && pageNumber === 3) {\r\n            errors.bio_ru = \"Required\";\r\n        }\r\n\r\n        if (!values.start_time) {\r\n            errors.start_time = \"Required\";\r\n        }\r\n\r\n        if (!values.end_time) {\r\n            errors.end_time = \"Required\";\r\n        }\r\n\r\n        if (!values.phone1) {\r\n            errors.phone1 = \"Required\";\r\n        }\r\n\r\n        if (!values.specialty) {\r\n            errors.specialty = \"Required\";\r\n        }\r\n\r\n        if (!values.experience && pageNumber === 3) {\r\n            errors.experience = \"Required\";\r\n        }\r\n\r\n        if (!values.working_days.length > 0) {\r\n            errors.working_days = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formOne = useFormik({\r\n        initialValues: {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            middle_name: \"\",\r\n            bio_uz: \"\",\r\n            bio_ru: \"\",\r\n            phone1: \"\",\r\n            start_time: \"\",\r\n            end_time: \"\",\r\n            working_days: [],\r\n            consultation_fee: \"\",\r\n            second_consultation_fee: \"\",\r\n            specialty: \"\",\r\n            hospital: \"\",\r\n            sub_speciality: [],\r\n            experience: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const getInformation = () => {\r\n        axios.get(`${baseUrl}doctor-profile/`, {\r\n                headers: {\r\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n                }\r\n            }\r\n        ).then((response) => {\r\n\r\n            formOne.setValues({\r\n                first_name: response.data.translations[i18next.language].first_name,\r\n                last_name: response.data.translations[i18next.language].last_name,\r\n                middle_name: response.data.translations[i18next.language].middle_name,\r\n                bio_uz: response.data.translations[\"uz\"].bio,\r\n                bio_ru: response.data.translations[\"ru\"].bio,\r\n                phone1: response.data.phone,\r\n                start_time: response.data.start_time,\r\n                end_time: response.data.end_time,\r\n                working_days: response.data.working_days,\r\n                consultation_fee: response.data.consultation_fee,\r\n                second_consultation_fee: response.data.second_consultation_fee,\r\n                specialty: response.data.specialty,\r\n                hospital: response.data.hospital,\r\n                sub_speciality: response.data.sub_speciality,\r\n                experience: response.data.experience\r\n            });\r\n\r\n            setSocialMedias(response.data.doctor_socials)\r\n            response.data.doctor_socials.map((item, index) => {\r\n                if (item.key === \"telegram\") setTg(true)\r\n                if (item.key === \"instagram\") setIns(true)\r\n                if (item.key === \"facebook\") setFace(true)\r\n                if (item.key === \"youtube\") setYou(true)\r\n                if (item.key === \"tiktok\") setTik(true)\r\n            });\r\n\r\n            let week = response.data.working_days\r\n            axios.get(`${baseUrl}days/`).then((response) => {\r\n\r\n                let new_list = response.data.filter(day => {\r\n                    return day.id && week.includes(day.id);\r\n                }).map(day => day.translations[i18next.language].day);\r\n\r\n                setWeekend(new_list)\r\n            }).catch((error) => {\r\n            });\r\n\r\n            let newSubSpecialty = response.data.sub_speciality;\r\n            axios.get(`${baseUrl}speciality/${response.data.specialty}/`).then((response) => {\r\n                setSubSpecialtyList(response.data)\r\n                let new_list = response.data.filter(day => {\r\n                    return day && newSubSpecialty.includes(day.id);\r\n                }).map(day => day.translations[i18next.language].name);\r\n\r\n                setSubSpecialty(new_list)\r\n            });\r\n\r\n            setSpecialty(response.data.specialty)\r\n            \r\n            setInvalidService(response.data.gender);\r\n\r\n            setLogoHospital(`https://api.medos.uz/` + response.data.image)\r\n\r\n            setRegion(response.data.region)\r\n\r\n            setHospitalType(response.data.hospital ? response.data.hospital : \"\")\r\n\r\n            setAddressLocation(response.data.translations[i18next.language].address)\r\n\r\n            let location = response.data.location.split(',');\r\n\r\n            let locMy = {lat: Number(location[0]), lng: Number(location[1])};\r\n            setCenter(locMy);\r\n            setSelected(locMy)\r\n\r\n        }).catch((error) => {\r\n            if (error.response.statusText == \"Unauthorized\") {\r\n                window.location.pathname = \"/\";\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInformation()\r\n        axios.get(`${baseUrl}days/`).then((response) => {\r\n            setDaysList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}hospital-short/`).then((response) => {\r\n            setHospitalList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}speciality/`).then((response) => {\r\n            setSpecialtyList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n    }, []);\r\n\r\n    const getSubSpecialty = (id) => {\r\n        axios.get(`${baseUrl}speciality/${id}/`).then((response) => {\r\n            setSubSpecialtyList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n    };\r\n\r\n    const handleChangeMore = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n\r\n        setWeekend(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n\r\n        let new_list = daysList.filter(day => {\r\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\r\n        }).map(day => day.id);\r\n\r\n        formOne.values.working_days = new_list\r\n    };\r\n\r\n    const handleChangeMoreSpeciality = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n\r\n        setSubSpecialty(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n\r\n        let new_list = subSpecialtyList.filter(day => {\r\n            return day.translations[i18next.language].name && value.includes(day.translations[i18next.language].name);\r\n        }).map(day => day.id);\r\n\r\n        formOne.values.sub_speciality = new_list\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const {target: {files}} = event;\r\n        const file = files[0];\r\n\r\n        function getBase64(file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () {\r\n                setLogoHospital(reader.result);\r\n            };\r\n            reader.onerror = function () {\r\n                setLogoHospital(null);\r\n            };\r\n\r\n        }\r\n\r\n        getBase64(file);\r\n    };\r\n\r\n    const ClicklLocation = (e) => {\r\n        let latitude = e.latLng.lat();\r\n        let longitude = e.latLng.lng();\r\n\r\n        let locMy = {lat: latitude, lng: longitude};\r\n\r\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"uz\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setSelected(locMy);\r\n            setAddressLocation(fullAddress)\r\n            setAddress_validate(false)\r\n        });\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"ru\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setAddressLocationRu(fullAddress);\r\n        });\r\n    };\r\n\r\n    const PlacesAutocomplete = ({setSelected}) => {\r\n        const {\r\n            ready,\r\n            value,\r\n            setValue,\r\n            suggestions: {status, data},\r\n            clearSuggestions,\r\n        } = usePlacesAutocomplete({\r\n            requestOptions: {\r\n                language: i18next.language,\r\n            },\r\n        });\r\n\r\n        const handleSelect = async (address) => {\r\n            const results = await getGeocode({address});\r\n            const {lat, lng} = await getLatLng(results[0]);\r\n            let locMy = {lat, lng};\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\r\n\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n\r\n                setSelected(locMy);\r\n                setCenter({lat, lng});\r\n                setAddressLocation(fullAddress)\r\n                setAddress_validate(false)\r\n            });\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n                setAddressLocationRu(fullAddress);\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Combobox onSelect={handleSelect}>\r\n                <ComboboxInput\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    disabled={!ready}\r\n                    className=\"combobox-input\"\r\n                    placeholder=\"Manzilni kiriting...\"\r\n                />\r\n\r\n                <div className=\"address-wrapper\">\r\n                    <div className=\"list-address\">\r\n                        {status === \"OK\" &&\r\n                        data.map(({place_id, description}) => (\r\n                            <ComboboxOption key={place_id} value={description}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Combobox>\r\n        );\r\n    };\r\n\r\n    const addSocialMedia = (key) => {\r\n        if (key === \"telegram\") {\r\n            setTg(true)\r\n        }\r\n        if (key === \"instagram\") {\r\n            setIns(true)\r\n        }\r\n        if (key === \"facebook\") {\r\n            setFace(true)\r\n        }\r\n        if (key === \"tiktok\") {\r\n            setTik(true)\r\n        }\r\n        if (key === \"youtube\") {\r\n            setYou(true)\r\n        }\r\n        let newMedia = {key, url: \"\"};\r\n        let newArr = socialMedias.concat(newMedia);\r\n        setSocialMedias(newArr)\r\n    };\r\n\r\n    const delSocialMedia = (ind, key) => {\r\n        if (key === \"telegram\") {\r\n            setTg(false)\r\n        }\r\n        if (key === \"instagram\") {\r\n            setIns(false)\r\n        }\r\n        if (key === \"facebook\") {\r\n            setFace(false)\r\n        }\r\n        if (key === \"tiktok\") {\r\n            setTik(false)\r\n        }\r\n        if (key === \"youtube\") {\r\n            setYou(false)\r\n        }\r\n\r\n        let newArr = socialMedias.filter((item, index) => index !== ind);\r\n        setSocialMedias(newArr)\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        let loc = `${center.lat},${center.lng}`;\r\n        let allInfoHospital = {\r\n            translations: {\r\n                uz: {\r\n                    first_name: cyrillicToTranslit.transform(formOne.values.first_name),\r\n                    last_name: cyrillicToTranslit.transform(formOne.values.last_name),\r\n                    middle_name: cyrillicToTranslit.transform(formOne.values.middle_name),\r\n                    bio: formOne.values.bio_uz,\r\n                    address: addressLocation\r\n                },\r\n                ru: {\r\n                    first_name: cyrillicToTranslit.reverse(formOne.values.first_name),\r\n                    last_name: cyrillicToTranslit.reverse(formOne.values.last_name),\r\n                    middle_name: cyrillicToTranslit.reverse(formOne.values.middle_name),\r\n                    bio: formOne.values.bio_ru,\r\n                    address: addressLocationRu\r\n                }\r\n            },\r\n            base64_image: logoHospital,\r\n            gender: invalidService,\r\n            phone: formOne.values.phone1,\r\n            start_time: formOne.values.start_time,\r\n            end_time: formOne.values.end_time,\r\n            location: loc,\r\n            working_days: formOne.values.working_days,\r\n            socials: socialMedias,\r\n            region: region,\r\n            consultation_fee: formOne.values.consultation_fee,\r\n            second_consultation_fee: formOne.values.second_consultation_fee,\r\n            specialty: formOne.values.specialty,\r\n            hospital: formOne.values.hospital,\r\n            sub_speciality: formOne.values.sub_speciality,\r\n            experience: formOne.values.experience\r\n        };\r\n        console.log(allInfoHospital)\r\n        axios.post(`${baseUrl}doctor-profile/`, allInfoHospital, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            let idAlert = Date.now();\r\n            let alert = {\r\n                id: idAlert,\r\n                text: \"Malumotlar yangilandi!\",\r\n                img: \"./images/green.svg\",\r\n                color: \"#EDFFFA\",\r\n            };\r\n            dispatch(addAlert(alert));\r\n            setTimeout(() => {\r\n                dispatch(delAlert(idAlert));\r\n            }, 5000);\r\n            getInformation()\r\n\r\n            localStorage.setItem(\"nameUz\", `${response.data.translations[\"uz\"].first_name} ${response.data.translations[\"uz\"].last_name}`);\r\n            localStorage.setItem(\"nameRu\", `${response.data.translations[\"ru\"].first_name} ${response.data.translations[\"ru\"].last_name}`);\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n\r\n    return <div className=\"profile-doctor-container\">\r\n        <div className=\"logo\">\r\n            <img src=\"./images/logo.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"xbtn\">\r\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"register-page\">\r\n            <div className=\"register-page-one\">\r\n                <div className=\"title\">\r\n                    Akkount sozlamalari\r\n                </div>\r\n                <div className=\"des\">\r\n                    Shaxsiy akkountingizni tahrirlashingiz mumkin\r\n                </div>\r\n\r\n                <div className=\"logo-hospital\">\r\n                    <div className=\"logo-image\">\r\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\r\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"label\">\r\n                        Logo qo‘shish\r\n                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField error={formOne.errors.last_name === \"Required\"}\r\n                                   value={formOne.values.last_name}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"last_name\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Familiyangiz \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField error={formOne.errors.first_name === \"Required\"}\r\n                                   value={formOne.values.first_name}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"first_name\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Ismingiz \" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField error={formOne.errors.middle_name === \"Required\"}\r\n                                   value={formOne.values.middle_name}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"middle_name\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Otangiz ismi \" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">Jinsingiz</div>\r\n                    <div className=\"sides\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <div className=\"on-of\">\r\n                            <div onClick={() => setInvalidService(true)} className={`of ${invalidService ? \"on\" : \"\"}`}>\r\n                                Erkak\r\n                            </div>\r\n                            <div onClick={() => setInvalidService(false)}\r\n                                 className={`of ${!invalidService ? \"on\" : \"\"}`}>\r\n                                Ayol\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            error={formOne.errors.phone1 === \"Required\"}\r\n                            value={formOne.values.phone1}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"phone1\"\r\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                            label=\"Telefon raqam \" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Qabul vaqtlari</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                            <InputLabel id=\"demo-multiple-checkbox-label\">Ish kunlarini belgilang</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.working_days === \"Required\"}\r\n                                name=\"working_days\"\r\n                                labelId=\"demo-multiple-checkbox-label\"\r\n                                id=\"demo-multiple-checkbox\"\r\n                                multiple\r\n                                value={weekend}\r\n                                onChange={handleChangeMore}\r\n                                input={<OutlinedInput label=\"Ish kunlarini  belgilang\"/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {daysList.map((item, index) => (\r\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\r\n                                        <Checkbox\r\n                                            checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\r\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box-working-time\">\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.values.start_time}\r\n                            type=\"time\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.values.end_time}\r\n                            type=\"time\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Siz bilan bog'lanish uchun</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        Ijtimoiy tarmoq sahifasi yoki veb sayt havolasi\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"inputs-box-link\">\r\n\r\n                    {socialMedias.map((item, index) => {\r\n                        return <div key={index} className=\"inputs-social-media\">\r\n\r\n                            {item.key === \"telegram\" && <img src=\"./images/social-media/telegram.png\" alt=\"\"/>}\r\n                            {item.key === \"web\" && <img src=\"./images/social-media/web.png\" alt=\"\"/>}\r\n                            {item.key === \"instagram\" && <img src=\"./images/social-media/instagram.png\" alt=\"\"/>}\r\n                            {item.key === \"facebook\" && <img src=\"./images/social-media/facebook.png\" alt=\"\"/>}\r\n                            {item.key === \"youtube\" && <img src=\"./images/social-media/youtube.png\" alt=\"\"/>}\r\n                            {item.key === \"tiktok\" && <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>}\r\n\r\n                            <TextField onChange={(e) => {\r\n                                item.url = e.target.value\r\n                                let newSocial = [...socialMedias]\r\n                                setSocialMedias(newSocial)\r\n                            }} sx={{m: 1, minWidth: \"43%\"}}\r\n                                       value={item.url}\r\n                                       size=\"small\"\r\n                                       id=\"outlined-basic\"\r\n                                       label=\"https://\" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                            {socialMedias.length > 1 && index !== 0 &&\r\n                            <div onClick={() => delSocialMedia(index, item.key)} className=\"del-icon\"><img\r\n                                src=\"./images/del-icon.png\" alt=\"\"/></div>}\r\n                        </div>\r\n                    })}\r\n                    <div className=\"des\">Ijtimoiy tarmoq sahifalarni kirtish majburiy emas!</div>\r\n\r\n\r\n                    <div className=\"add-social-media\">\r\n                        {!tg && <div onClick={() => addSocialMedia(\"telegram\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/telegram.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!ins && <div onClick={() => addSocialMedia(\"instagram\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/instagram.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!face && <div onClick={() => addSocialMedia(\"facebook\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/facebook.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!you && <div onClick={() => addSocialMedia(\"youtube\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/youtube.png\" alt=\"\"/>\r\n                        </div>}\r\n\r\n                        {!tik && <div onClick={() => addSocialMedia(\"tiktok\")} className=\"social-mdeia-icon\">\r\n                            <div className=\"sloy\">\r\n                                <img src=\"./images/add.png\" alt=\"\"/>\r\n                            </div>\r\n                            <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <div className=\"des\">\r\n                        Quyidagi ijtimoiy tarmoq sahifalaringizni qo‘shish orqali bemorlarni bog‘lanishini\r\n                        osonlashtiring.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"register-page-three\">\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Asosiy mutaxassislikni tanlang</InputLabel>\r\n                            <Select\r\n                                label=\"Asosiy mutaxassislikni tanlang___\"\r\n                                error={formOne.errors.specialty === \"Required\"}\r\n                                name=\"specialty\"\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={specialty}\r\n                                onChange={(e) => {\r\n                                    formOne.handleChange(e)\r\n                                    setSpecialty(e.target.value)\r\n                                    setSubSpecialty([])\r\n                                    getSubSpecialty(e.target.value);\r\n                                }}\r\n                            >\r\n                                {specialtyList.map((item) => {\r\n                                    return <MenuItem key={item.id}\r\n                                                     value={item.id}>{item.translations[i18next.language].name}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                            <InputLabel id=\"demo-multiple-checkbox-label\">Qo'shimcha mutaxassisliklar</InputLabel>\r\n                            <Select\r\n                                name=\"sub_speciality\"\r\n                                labelId=\"demo-multiple-checkbox-label\"\r\n                                id=\"demo-multiple-checkbox\"\r\n                                multiple\r\n                                value={subSpecialty}\r\n                                onChange={handleChangeMoreSpeciality}\r\n                                input={<OutlinedInput label=\"Qo'shimcha mutaxassisliklar__\"/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {subSpecialtyList.map((item, index) => (\r\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].name}>\r\n                                        <Checkbox\r\n                                            checked={subSpecialty.indexOf(item.translations[i18next.language].name) > -1}/>\r\n                                        <ListItemText primary={item.translations[i18next.language].name}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField error={formOne.errors.experience === \"Required\"}\r\n                                   value={formOne.values.experience}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"experience\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Tajribangiz \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            value={formOne.values.consultation_fee}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"consultation_fee\"\r\n                            sx={{m: 1, minWidth: \"80%\"}} size=\"small\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Birinchi konsultatsiya \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                        <div className=\"price\">UZS</div>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            value={formOne.values.second_consultation_fee}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"second_consultation_fee\"\r\n                            sx={{m: 1, minWidth: \"80%\"}} size=\"small\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Ikkinchi konsultatsiya \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                        <div className=\"price\">UZS</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottom-validate\">\r\n                    <div className=\"select-sides\">\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <div className=\"des-no-validate\">\r\n                            Bu maydon to‘ldirish muhim emas. Bo‘sh qoldirsangiz ham bo‘ladi\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"input-for-more-info\">\r\n                    <div className=\"des-info\">\r\n                        Iltimos o'zingiz haqingizdagi ma'lumotlarni o'zbek va rus tillarida kiriting!\r\n                    </div>\r\n                    <label htmlFor=\"more-info\">O‘zingiz haqingizda batafsilroq yozing (uz)</label>\r\n                    <Textarea\r\n                        error={formOne.errors.bio_uz === \"Required\"}\r\n                        value={formOne.values.bio_uz}\r\n                        onChange={formOne.handleChange}\r\n                        name=\"bio_uz\"\r\n                        className=\"textarea_bio\"\r\n                        placeholder=\"Yutuqlaringiz, ta’lim olgan joylaringiz haqida va h.k. \"\r\n                        sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                    />\r\n\r\n                    <label htmlFor=\"more-info\">Напишите больше о себе (ru)</label>\r\n                    <Textarea\r\n                        error={formOne.errors.bio_ru === \"Required\"}\r\n                        value={formOne.values.bio_ru}\r\n                        onChange={formOne.handleChange}\r\n                        name=\"bio_ru\"\r\n                        className=\"textarea_bio\"\r\n                        placeholder=\"О ваших достижениях, местах обучения и т.д.\"\r\n                        sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"register-page-two\">\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Viloyatni tanlang</InputLabel>\r\n                            <Select\r\n                                error={region_validate}\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={region}\r\n                                label=\"Viloyatni tanlang\"\r\n                                onChange={(e) => setRegion(e.target.value)}\r\n                            >\r\n\r\n                                {regions.map((item, index) => {\r\n                                    return <MenuItem key={index} onClick={() => {\r\n                                        setRegion_validate(false)\r\n                                        setCenter({lat: item.latitude, lng: item.longitude})\r\n                                    }} value={index + 1}>{item.name}</MenuItem>\r\n                                })}\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Ish joyingizni tanlang</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.hospital === \"Required\"}\r\n                                name=\"hospital\"\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={hospitalType}\r\n                                label=\"Ish joyingizni tanlang\"\r\n                                onChange={(e) => {\r\n                                    formOne.handleChange(e)\r\n                                    setHospitalType(e.target.value)\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={() => {\r\n                                    setAddressLocation(\"\");\r\n                                    setAddressLocationRu(\"\");\r\n                                }} value={''}>---</MenuItem>\r\n                                {hospitalList.map((item) => {\r\n                                    return <MenuItem key={item.id}\r\n                                                     value={item.id}>{item.translations[i18next.language].name}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    !formOne.values.hospital && <>\r\n                        <div className=\"label-address\">Manzil:</div>\r\n\r\n                        <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\r\n                            {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\r\n                            {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\r\n                            {!addressLocation && !addressLocationRu && <p>Manzilni xaritadan belgilang</p>}\r\n                        </div>\r\n\r\n                        <div className=\"address-container\">\r\n                            <GoogleMap\r\n                                zoom={9}\r\n                                center={center}\r\n                                options={options}\r\n                                onClick={ClicklLocation}\r\n                                mapContainerClassName=\"map-box\"\r\n                            >\r\n                                {selected && (\r\n                                    <MarkerF icon={selectAddressIcon} position={selected}/>\r\n                                )}\r\n\r\n                                <div className=\"search-address\">\r\n                                    <div className=\"places-container\">\r\n                                        <PlacesAutocomplete setSelected={setSelected}/>\r\n                                        <img src=\"./images/search.png\" alt=\"\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </GoogleMap>\r\n                        </div>\r\n                    </>\r\n                }\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => setPageNumber(2)} className=\"prev-btn\">\r\n                        Bekor qilish\r\n                    </div>\r\n\r\n                    <div onClick={() => formOne.handleSubmit()} className=\"next-page-btn\">\r\n                        O'zgarishlarni saqlash\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default ProfileDoctor","import \"./style.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    TextField, MenuItem, InputLabel, FormControl, Select, Checkbox, OutlinedInput,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport {GoogleMap, MarkerF, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Loader from \"../../loader/Loader\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {delAlert, addAlert} from \"../../../redux/AlertsBox\";\r\n\r\n\r\nconst libraries = [\"places\"];\r\n\r\n\r\nconst ProfileHospital = () => {\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [hospital, setHospital] = useState('');\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [hospitalType, setHospitalType] = useState('');\r\n    const [invalidService, setInvalidService] = useState(true);\r\n    const [workingTime24, setWorkingTime24] = useState(false);\r\n    const [selected, setSelected] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [center, setCenter] = useState({lat: 41.295695, lng: 69.239730});\r\n    const [socialMedias, setSocialMedias] = useState([{key: \"web\", url: \"\"}]);\r\n    const [service, setService] = useState([\r\n        {service: \"\", options: [], sub_services_list: [{sub_service: \"\", price: \"\"}]}\r\n    ]);\r\n    const [addressLocation, setAddressLocation] = useState(\"\");\r\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\r\n    const [address_validate, setAddress_validate] = useState(false);\r\n    const [weekend, setWeekend] = useState([]);\r\n    const [region, setRegion] = useState(\"\");\r\n    const [region_validate, setRegion_validate] = useState(false);\r\n    const [logoHospital, setLogoHospital] = useState(null);\r\n    const [daysList, setDaysList] = useState([]);\r\n    const [hospitalList, setHospitalList] = useState([]);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [tg, setTg] = useState(false)\r\n    const [ins, setIns] = useState(false)\r\n    const [face, setFace] = useState(false)\r\n    const [you, setYou] = useState(false)\r\n    const [tik, setTik] = useState(false)\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    const selectAddressIcon = {\r\n        url: \"./images/address.png\",\r\n        scaledSize: {width: 40, height: 50},\r\n    };\r\n\r\n    const options = useMemo(\r\n        () => ({\r\n            disableDefaultUI: false,\r\n            clickableIcons: false,\r\n        }),\r\n        []\r\n    );\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\r\n        libraries: libraries,\r\n        language: i18next.language,\r\n    });\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.hospital_type) {\r\n            errors.hospital_type = \"Required\";\r\n        }\r\n\r\n        if (!values.type) {\r\n            errors.type = \"Required\";\r\n        }\r\n\r\n        if (!values.nameUz) {\r\n            errors.nameUz = \"Required\";\r\n        }\r\n\r\n        if (!values.nameRu) {\r\n            errors.nameRu = \"Required\";\r\n        }\r\n\r\n        if (!values.phone1) {\r\n            errors.phone1 = \"Required\";\r\n        }\r\n\r\n        if (!values.phone2) {\r\n            errors.phone2 = \"Required\";\r\n        }\r\n\r\n        if (!values.working_days.length > 0) {\r\n            errors.working_days = \"Required\";\r\n        }\r\n\r\n        if (!workingTime24 && !values.start_time) {\r\n            errors.start_time = \"Required\";\r\n        }\r\n\r\n        if (!workingTime24 && !values.end_time) {\r\n            errors.end_time = \"Required\";\r\n        }\r\n\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formOne = useFormik({\r\n        initialValues: {\r\n            nameUz: \"\",\r\n            nameRu: \"\",\r\n            type: \"\",\r\n            hospital_type: \"\",\r\n            phone1: \"\",\r\n            phone2: \"\",\r\n            start_time: \"\",\r\n            end_time: \"\",\r\n            working_days: [],\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            setPageNumber(2);\r\n        },\r\n    });\r\n\r\n    const getInformation = () => {\r\n        axios.get(`${baseUrl}hospital-profile/`, {\r\n                headers: {\r\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n                }\r\n            }\r\n        ).then((response) => {\r\n\r\n            formOne.setValues({\r\n                nameUz: response.data.translations[\"uz\"].name,\r\n                nameRu: response.data.translations[\"ru\"].name,\r\n                type: response.data.type,\r\n                hospital_type: response.data.hospital_type,\r\n                phone1: response.data.phone1,\r\n                phone2: response.data.phone2,\r\n                start_time: response.data.start_time,\r\n                end_time: response.data.end_time,\r\n                working_days: response.data.working_days,\r\n            });\r\n\r\n            setSocialMedias(response.data.hospital_socials)\r\n            response.data.hospital_socials.map((item, index) => {\r\n                if (item.key === \"telegram\") setTg(true)\r\n                if (item.key === \"instagram\") setIns(true)\r\n                if (item.key === \"facebook\") setFace(true)\r\n                if (item.key === \"youtube\") setYou(true)\r\n                if (item.key === \"tiktok\") setTik(true)\r\n            });\r\n\r\n            let week = response.data.working_days\r\n            axios.get(`${baseUrl}days/`).then((response) => {\r\n\r\n                let new_list = response.data.filter(day => {\r\n                    return day.id && week.includes(day.id);\r\n                }).map(day => day.translations[i18next.language].day);\r\n\r\n                setWeekend(new_list)\r\n            }).catch((error) => {\r\n            });\r\n\r\n            setHospital(response.data.type)\r\n\r\n            setInvalidService(response.data.gender);\r\n\r\n            setLogoHospital(`https://api.medos.uz/` + response.data.image)\r\n\r\n            setRegion(response.data.region)\r\n\r\n            setHospitalType(response.data.hospital_type)\r\n\r\n            setAddressLocation(response.data.translations[i18next.language].address)\r\n\r\n            let location = response.data.location.split(',');\r\n\r\n            let locMy = {lat: Number(location[0]), lng: Number(location[1])};\r\n            setCenter(locMy);\r\n            setSelected(locMy)\r\n\r\n            setWorkingTime24(response.data.open_24)\r\n\r\n            setService(response.data.hospital_services)\r\n\r\n\r\n        }).catch((error) => {\r\n            if (error.response.statusText == \"Unauthorized\") {\r\n                window.location.pathname = \"/\";\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getInformation()\r\n        axios.get(`${baseUrl}days/`).then((response) => {\r\n            setDaysList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}hospital-type/`).then((response) => {\r\n            setHospitalList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n        axios.get(`${baseUrl}speciality/`).then((response) => {\r\n            setServiceList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n\r\n    }, []);\r\n\r\n    const handleChangeMore = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n\r\n        setWeekend(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n\r\n        let new_list = daysList.filter(day => {\r\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\r\n        }).map(day => day.id);\r\n\r\n        formOne.values.working_days = new_list\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const {target: {files}} = event;\r\n        const file = files[0];\r\n\r\n        function getBase64(file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () {\r\n                setLogoHospital(reader.result);\r\n            };\r\n            reader.onerror = function () {\r\n                setLogoHospital(null);\r\n            };\r\n\r\n        }\r\n\r\n        getBase64(file);\r\n    };\r\n\r\n    const ClicklLocation = (e) => {\r\n        let latitude = e.latLng.lat();\r\n        let longitude = e.latLng.lng();\r\n\r\n        let locMy = {lat: latitude, lng: longitude};\r\n\r\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"uz\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setSelected(locMy);\r\n            setAddressLocation(fullAddress)\r\n            setAddress_validate(false)\r\n        });\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"ru\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setAddressLocationRu(fullAddress);\r\n        });\r\n    };\r\n\r\n    const PlacesAutocomplete = ({setSelected}) => {\r\n        const {\r\n            ready,\r\n            value,\r\n            setValue,\r\n            suggestions: {status, data},\r\n            clearSuggestions,\r\n        } = usePlacesAutocomplete({\r\n            requestOptions: {\r\n                language: i18next.language,\r\n            },\r\n        });\r\n\r\n        const handleSelect = async (address) => {\r\n            const results = await getGeocode({address});\r\n            const {lat, lng} = await getLatLng(results[0]);\r\n            let locMy = {lat, lng};\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\r\n\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n\r\n                setSelected(locMy);\r\n                setCenter({lat, lng});\r\n                setAddressLocation(fullAddress)\r\n                setAddress_validate(false)\r\n            });\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n                setAddressLocationRu(fullAddress);\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Combobox onSelect={handleSelect}>\r\n                <ComboboxInput\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    disabled={!ready}\r\n                    className=\"combobox-input\"\r\n                    placeholder=\"Manzilni kiriting...\"\r\n                />\r\n\r\n                <div className=\"address-wrapper\">\r\n                    <div className=\"list-address\">\r\n                        {status === \"OK\" &&\r\n                        data.map(({place_id, description}) => (\r\n                            <ComboboxOption key={place_id} value={description}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Combobox>\r\n        );\r\n    };\r\n\r\n    const addSocialMedia = (key) => {\r\n        if (key === \"telegram\") {\r\n            setTg(true)\r\n        }\r\n        if (key === \"instagram\") {\r\n            setIns(true)\r\n        }\r\n        if (key === \"facebook\") {\r\n            setFace(true)\r\n        }\r\n        if (key === \"tiktok\") {\r\n            setTik(true)\r\n        }\r\n        if (key === \"youtube\") {\r\n            setYou(true)\r\n        }\r\n        let newMedia = {key, url: \"\"};\r\n        let newArr = socialMedias.concat(newMedia);\r\n        setSocialMedias(newArr)\r\n    };\r\n\r\n    const delSocialMedia = (ind, key) => {\r\n        if (key === \"telegram\") {\r\n            setTg(false)\r\n        }\r\n        if (key === \"instagram\") {\r\n            setIns(false)\r\n        }\r\n        if (key === \"facebook\") {\r\n            setFace(false)\r\n        }\r\n        if (key === \"tiktok\") {\r\n            setTik(false)\r\n        }\r\n        if (key === \"youtube\") {\r\n            setYou(false)\r\n        }\r\n\r\n        let newArr = socialMedias.filter((item, index) => index !== ind);\r\n        setSocialMedias(newArr)\r\n    };\r\n\r\n    const addService = () => {\r\n        let newService = {service: \"\", options: [], sub_services_list: [{sub_service: \"\", price: \"\"}]}\r\n        let newArr = service.concat(newService);\r\n        setService(newArr)\r\n    };\r\n    const delService = (ind) => {\r\n        let newArr = service.filter((item, index) => index !== ind);\r\n        setService(newArr)\r\n    };\r\n    const sendAllInfo = () => {\r\n        let loc = `${center.lat},${center.lng}`\r\n        let allInfoHospital = {\r\n            translations: {\r\n                uz: {\r\n                    name: formOne.values.nameUz,\r\n                    address: addressLocation\r\n                },\r\n                ru: {\r\n                    name: formOne.values.nameRu,\r\n                    address: addressLocationRu\r\n                }\r\n            },\r\n            base64_image: logoHospital,\r\n            disabled: invalidService,\r\n            type: formOne.values.type,\r\n            hospital_type: formOne.values.hospital_type,\r\n            phone1: formOne.values.phone1,\r\n            phone2: formOne.values.phone2,\r\n            start_time: formOne.values.start_time,\r\n            end_time: formOne.values.end_time,\r\n            open_24: workingTime24,\r\n            location: loc,\r\n            working_days: formOne.values.working_days,\r\n            services: service,\r\n            socials: socialMedias,\r\n            region: region\r\n        }\r\n        axios.post(`${baseUrl}hospital-profile/`, allInfoHospital, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            let idAlert = Date.now();\r\n            let alert = {\r\n                id: idAlert,\r\n                text: \"Malumotlar yangilandi!\",\r\n                img: \"./images/green.svg\",\r\n                color: \"#EDFFFA\",\r\n            };\r\n            dispatch(addAlert(alert));\r\n            setTimeout(() => {\r\n                dispatch(delAlert(idAlert));\r\n            }, 5000);\r\n\r\n            getInformation()\r\n        }).catch((error) => {\r\n        });\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n\r\n    return <div className=\"profile-hospital-container\">\r\n        <div className=\"logo\">\r\n            <img src=\"./images/logo.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"xbtn\">\r\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"register-page\">\r\n\r\n            <div className=\"title\">\r\n                Akkount sozlamalari\r\n            </div>\r\n            <div className=\"des\">\r\n                Shifoxona akkountingizni tahrirlashingiz mumkin\r\n            </div>\r\n            <div className=\"header\">\r\n                <div onClick={() => setPageNumber(1)} className={`item-menu ${pageNumber === 1 ? \"active\" : \"\"}`}>Umumiy\r\n                    ma'lumotlar\r\n                </div>\r\n                <div onClick={() => setPageNumber(2)}\r\n                     className={`item-menu ${pageNumber === 2 ? \"active\" : \"\"}`}>Xizmatlar\r\n                </div>\r\n            </div>\r\n            {pageNumber === 1 &&\r\n            <>\r\n                <div className=\"register-page-one\">\r\n                    <div className=\"logo-hospital\">\r\n                        <div className=\"logo-image\">\r\n                            {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\r\n                                <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"label\">\r\n                            Rasmni o'zgartirish\r\n                            <input onChange={getInputPhoto} type=\"file\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"inputs-box\">\r\n                        <TextField error={formOne.errors.nameUz === \"Required\"}\r\n                                   value={formOne.values.nameUz}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"nameUz\"\r\n                                   sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Shifoxona nomini kiriting (uz) \" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n\r\n                    <div className=\"inputs-box\">\r\n                        <TextField error={formOne.errors.nameRu === \"Required\"} value={formOne.values.nameRu}\r\n                                   onChange={formOne.handleChange}\r\n                                   name=\"nameRu\" sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                   id=\"outlined-basic\"\r\n                                   label=\"Введите название больницы (ru) \" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n\r\n                    <div className=\"des-input\">\r\n                        Iltimos, shifoxona nomini rus tili va o'zbek tilida kiritng\r\n                    </div>\r\n\r\n                    <div className=\"select-box\">\r\n                        <div className=\"select-sides\">\r\n                            <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                         className=\"selectMui\">\r\n                                <InputLabel id=\"demo-select-large-label\">Shifoxona</InputLabel>\r\n                                <Select\r\n                                    error={formOne.errors.type === \"Required\"}\r\n                                    name=\"type\"\r\n                                    labelId=\"demo-select-small-label\"\r\n                                    id=\"demo-select-small\"\r\n                                    value={hospital}\r\n                                    label=\"Shifoxona\"\r\n                                    onChange={(e) => {\r\n                                        formOne.handleChange(e);\r\n                                        setHospital(e.target.value)\r\n                                    }}\r\n                                >\r\n                                    <MenuItem value={1}>\r\n                                        Davlat\r\n                                    </MenuItem>\r\n                                    <MenuItem value={2}>\r\n                                        Xususiy\r\n                                    </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"select-sides\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"label-text\">\r\n                        <div className=\"sides\"></div>\r\n                        <div className=\"sides\"> Nogironlar uchun imkoniyatlar</div>\r\n                    </div>\r\n\r\n                    <div className=\"select-box\">\r\n                        <div className=\"select-sides\">\r\n                            <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                                         className=\"selectMui\">\r\n                                <InputLabel id=\"demo-select-large-label\">Shifoxona turi</InputLabel>\r\n                                <Select\r\n                                    error={formOne.errors.hospital_type === \"Required\"}\r\n                                    name=\"hospital_type\"\r\n                                    labelId=\"demo-select-small-label\"\r\n                                    id=\"demo-select-small\"\r\n                                    value={hospitalType}\r\n                                    label=\"Shifoxona turi\"\r\n                                    onChange={(e) => {\r\n                                        formOne.handleChange(e);\r\n                                        setHospitalType(e.target.value)\r\n                                    }}\r\n                                >\r\n                                    {hospitalList.map((item) => {\r\n                                        return <MenuItem key={item.id} value={item.id}>\r\n                                            {item.translations[i18next.language].name}\r\n                                        </MenuItem>\r\n                                    })}\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"select-sides\">\r\n                            <div className=\"on-of\">\r\n                                <div onClick={() => setInvalidService(true)}\r\n                                     className={`of ${invalidService ? \"on\" : \"\"}`}>\r\n                                    Mavjud\r\n                                </div>\r\n                                <div onClick={() => setInvalidService(false)}\r\n                                     className={`of ${!invalidService ? \"on\" : \"\"}`}>\r\n                                    Mavjud emas\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"label-text\">\r\n                        <div className=\"sides\">\r\n                            <div className=\"label-bold\">Ish vaqti</div>\r\n                        </div>\r\n                        <div className=\"sides\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"select-box\">\r\n                        <div className=\"select-sides\">\r\n                            <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                <InputLabel id=\"demo-multiple-checkbox-label\">Ish kunlarini belgilang</InputLabel>\r\n                                <Select\r\n                                    error={formOne.errors.working_days === \"Required\"}\r\n                                    name=\"working_days\"\r\n                                    labelId=\"demo-multiple-checkbox-label\"\r\n                                    id=\"demo-multiple-checkbox\"\r\n                                    multiple\r\n                                    value={weekend}\r\n                                    onChange={handleChangeMore}\r\n                                    input={<OutlinedInput label=\"Ish kunlarini  belgilang\"/>}\r\n                                    renderValue={(selected) => selected.join(', ')}\r\n                                    MenuProps={MenuProps}\r\n                                >\r\n                                    {daysList.map((item) => (\r\n                                        <MenuItem key={item.id} value={item.translations[i18next.language].day}>\r\n                                            <Checkbox\r\n                                                checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\r\n                                            <ListItemText primary={item.translations[i18next.language].day}/>\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"select-sides\">\r\n                            <div className=\"check-box\">\r\n                                <div className=\"checkbox-wrapper-13\">\r\n                                    <input\r\n                                        onChange={(e) => {\r\n                                            setWorkingTime24((prevState) => !prevState);\r\n                                        }}\r\n                                        checked={workingTime24}\r\n                                        id=\"c1-13\"\r\n                                        type=\"checkbox\"\r\n                                    />\r\n                                </div>\r\n                                <label htmlFor=\"c1-13\">\r\n                                    Ish faoliyati 24 soat yuritiladi\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {workingTime24 ? \"\" : <div className=\"select-box-working-time\">\r\n                        <div className=\"select-sides\">\r\n                            <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                            <input\r\n                                className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                name=\"start_time\" onChange={formOne.handleChange} value={formOne.values.start_time}\r\n                                type=\"time\"/>\r\n                        </div>\r\n                        <div className=\"select-sides\">\r\n                            <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                            <input\r\n                                className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                name=\"end_time\" onChange={formOne.handleChange} value={formOne.values.end_time}\r\n                                type=\"time\"/>\r\n                        </div>\r\n                    </div>}\r\n\r\n                    <div className=\"label-text\">\r\n                        <div className=\"sides\">\r\n                            <div className=\"label-bold\">Shifoxona bilan bog‘lanish</div>\r\n                        </div>\r\n                        <div className=\"sides\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"select-box\">\r\n                        <div className=\"select-sides\">\r\n                            <TextField\r\n                                error={formOne.errors.phone1 === \"Required\"}\r\n                                value={formOne.values.phone1}\r\n                                onChange={formOne.handleChange}\r\n                                name=\"phone1\"\r\n                                sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                label=\"Telefon raqam 1\" variant=\"outlined\" className=\"textField\"/>\r\n                        </div>\r\n                        <div className=\"select-sides\">\r\n                            <TextField\r\n                                error={formOne.errors.phone2 === \"Required\"}\r\n                                value={formOne.values.phone2}\r\n                                onChange={formOne.handleChange}\r\n                                name=\"phone2\"\r\n                                sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                label=\"Telefon raqam 2\" variant=\"outlined\" className=\"textField\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"label-text\">\r\n                        <div className=\"sides\">\r\n                            Ijtimoiy tarmoq sahifasi yoki veb sayt havolasi\r\n                        </div>\r\n                        <div className=\"sides\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"inputs-box-link\">\r\n                        {socialMedias.map((item, index) => {\r\n                            return <div key={index} className=\"inputs-social-media\">\r\n\r\n                                {item.key === \"telegram\" && <img src=\"./images/social-media/telegram.png\" alt=\"\"/>}\r\n                                {item.key === \"web\" && <img src=\"./images/social-media/web.png\" alt=\"\"/>}\r\n                                {item.key === \"instagram\" && <img src=\"./images/social-media/instagram.png\" alt=\"\"/>}\r\n                                {item.key === \"facebook\" && <img src=\"./images/social-media/facebook.png\" alt=\"\"/>}\r\n                                {item.key === \"youtube\" && <img src=\"./images/social-media/youtube.png\" alt=\"\"/>}\r\n                                {item.key === \"tiktok\" && <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>}\r\n\r\n                                <TextField onChange={(e) => {\r\n                                    item.url = e.target.value\r\n                                    let newSocial = [...socialMedias]\r\n                                    setSocialMedias(newSocial)\r\n                                }} sx={{m: 1, minWidth: \"43%\"}}\r\n                                           value={item.url}\r\n                                           size=\"small\"\r\n                                           id=\"outlined-basic\"\r\n                                           label=\"https://\" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                                {socialMedias.length > 1 && index !== 0 &&\r\n                                <div onClick={() => delSocialMedia(index, item.key)} className=\"del-icon\"><img\r\n                                    src=\"./images/del-icon.png\" alt=\"\"/></div>}\r\n                            </div>\r\n                        })}\r\n                        <div className=\"des\">Ijtimoiy tarmoq sahifalarni kirtish majburiy emas!</div>\r\n                        <div className=\"add-social-media\">\r\n                            {!tg && <div onClick={() => addSocialMedia(\"telegram\")} className=\"social-mdeia-icon\">\r\n                                <div className=\"sloy\">\r\n                                    <img src=\"./images/add.png\" alt=\"\"/>\r\n                                </div>\r\n                                <img src=\"./images/social-media/telegram.png\" alt=\"\"/>\r\n                            </div>}\r\n\r\n                            {!ins && <div onClick={() => addSocialMedia(\"instagram\")} className=\"social-mdeia-icon\">\r\n                                <div className=\"sloy\">\r\n                                    <img src=\"./images/add.png\" alt=\"\"/>\r\n                                </div>\r\n                                <img src=\"./images/social-media/instagram.png\" alt=\"\"/>\r\n                            </div>}\r\n\r\n                            {!face && <div onClick={() => addSocialMedia(\"facebook\")} className=\"social-mdeia-icon\">\r\n                                <div className=\"sloy\">\r\n                                    <img src=\"./images/add.png\" alt=\"\"/>\r\n                                </div>\r\n                                <img src=\"./images/social-media/facebook.png\" alt=\"\"/>\r\n                            </div>}\r\n\r\n                            {!you && <div onClick={() => addSocialMedia(\"youtube\")} className=\"social-mdeia-icon\">\r\n                                <div className=\"sloy\">\r\n                                    <img src=\"./images/add.png\" alt=\"\"/>\r\n                                </div>\r\n                                <img src=\"./images/social-media/youtube.png\" alt=\"\"/>\r\n                            </div>}\r\n\r\n                            {!tik && <div onClick={() => addSocialMedia(\"tiktok\")} className=\"social-mdeia-icon\">\r\n                                <div className=\"sloy\">\r\n                                    <img src=\"./images/add.png\" alt=\"\"/>\r\n                                </div>\r\n                                <img src=\"./images/social-media/tiktok.png\" alt=\"\"/>\r\n                            </div>}\r\n                        </div>\r\n                        <div className=\"des\">\r\n                            Quyidagi ijtimoiy tarmoq sahifalaringizni qo‘shish orqali bemorlarni bog‘lanishini\r\n                            osonlashtiring.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"register-page-two\">\r\n                    <div className=\"select-box\">\r\n                        <div className=\"select-sides\">\r\n                            <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                <InputLabel id=\"demo-select-large-label\">Viloyatni tanlang</InputLabel>\r\n                                <Select\r\n                                    error={region_validate}\r\n                                    labelId=\"demo-select-small-label\"\r\n                                    id=\"demo-select-small\"\r\n                                    value={region}\r\n                                    label=\"Viloyatni tanlang\"\r\n                                    onChange={(e) => setRegion(e.target.value)}\r\n                                >\r\n\r\n                                    {regions.map((item, index) => {\r\n                                        return <MenuItem key={index} onClick={() => {\r\n                                            setRegion_validate(false)\r\n                                            setCenter({lat: item.latitude, lng: item.longitude})\r\n                                        }} value={index + 1}>{item.name}</MenuItem>\r\n                                    })}\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"label-address\">Manzil:</div>\r\n                    <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\r\n                        {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\r\n                        {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\r\n                        {!addressLocation && !addressLocationRu && <p>Manzilni xaritadan belgilang</p>}\r\n                    </div>\r\n                    <div className=\"address-container\">\r\n                        <GoogleMap\r\n                            zoom={9}\r\n                            center={center}\r\n                            options={options}\r\n                            onClick={ClicklLocation}\r\n                            mapContainerClassName=\"map-box\"\r\n                        >\r\n                            {selected && (\r\n                                <MarkerF icon={selectAddressIcon} position={selected}/>\r\n                            )}\r\n\r\n                            <div className=\"search-address\">\r\n                                <div className=\"places-container\">\r\n                                    <PlacesAutocomplete setSelected={setSelected}/>\r\n                                    <img src=\"./images/search.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                        </GoogleMap>\r\n                    </div>\r\n                </div>\r\n            </>}\r\n\r\n            {pageNumber === 2 &&\r\n            <div className=\"register-page-three\">\r\n                {service.map((item, index) => {\r\n                    return <div key={index} className=\"service\">\r\n                        <div className=\"select-box\">\r\n                            <div className=\"select-sides\">\r\n                                <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                    <InputLabel id=\"demo-select-large-label\"> Xizmat turi</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-select-small-label\"\r\n                                        id=\"demo-select-small\"\r\n                                        value={item.service}\r\n                                        label=\"Xizmat turi\"\r\n                                        onChange={(e) => {\r\n                                            item.service = e.target.value;\r\n                                            item.options = serviceList.filter((item) => item.id === e.target.value)[0].options;\r\n                                            let change = [...service];\r\n                                            setService(change);\r\n                                        }}\r\n                                    >\r\n                                        {serviceList.map((item, index) => {\r\n                                            return <MenuItem key={item.id} value={item.id}>\r\n                                                {item.translations[i18next.language].name}\r\n                                            </MenuItem>\r\n                                        })}\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"select-sides\">\r\n                                {service.length > 1 && index !== 0 &&\r\n                                <img onClick={() => delService(index)} src=\"./images/del-icon.png\" alt=\"\"/>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {item.sub_services_list.map((itemService, indexService) => {\r\n                            return <div key={indexService} className=\"select-box\">\r\n                                <div className=\"select-sides\">\r\n                                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                        <InputLabel id=\"demo-select-large-label\">Xizmat nomi</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-select-small-label\"\r\n                                            id=\"demo-select-small\"\r\n                                            value={itemService.sub_service}\r\n                                            label=\"Xizmat nomi\"\r\n                                            onChange={(e) => {\r\n                                                let change = [...service];\r\n                                                setService(change);\r\n                                                itemService.sub_service = e.target.value\r\n                                            }}\r\n                                        >\r\n                                            {item.options.map((item) => {\r\n                                                return <MenuItem key={item.id} value={item.id}>\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </MenuItem>\r\n                                            })}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"select-sides\">\r\n                                    <TextField onChange={(e) => {\r\n                                        itemService.price = e.target.value;\r\n                                        let change = [...service];\r\n                                        setService(change);\r\n                                    }}\r\n                                               sx={{m: 1, minWidth: \"80%\"}}\r\n                                               size=\"small\" id=\"outlined-basic\"\r\n                                               value={itemService.price}\r\n                                               label=\"Xizmat narxi \" variant=\"outlined\" className=\"textField\"/>\r\n\r\n                                    {item.sub_services_list.length > 1 && indexService !== 0 && <img onClick={() => {\r\n                                        item.sub_services_list = item.sub_services_list.filter((item, index) => index !== indexService);\r\n                                        let change = [...service];\r\n                                        setService(change);\r\n                                    }} src=\"./images/del-icon.png\" alt=\"\"/>}\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n\r\n                        <div onClick={() => {\r\n                            item.sub_services_list = item.sub_services_list.concat({sub_service: \"\", price: \"\"});\r\n                            let change = [...service];\r\n                            setService(change);\r\n                        }} className=\"add-social-media\">\r\n                            Xizmat qo'shish\r\n                        </div>\r\n                        <div className=\"des-btn\">\r\n                            Ushbu tugmachani bosish orqali yangi tibbiy xizmat qo‘shishingiz mumkin\r\n                        </div>\r\n                    </div>\r\n                })}\r\n                <div onClick={addService} className=\"add-social-media\">\r\n                    Xizmat yaratish\r\n                </div>\r\n                <div className=\"des-btn\">\r\n                    Ushbu tugmachani bosish orqali yangi turdagi tibbiy xizmat yaratishingiz mumkin\r\n                </div>\r\n            </div>}\r\n\r\n            <div className=\"btn-box\">\r\n                <div onClick={() => navigate(\"/\")} className=\"prev-btn\">\r\n                    Bekor qilish\r\n                </div>\r\n\r\n                <div onClick={sendAllInfo} className=\"next-page-btn\">\r\n                    O'zgarishlarni tasdiqlash\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default ProfileHospital","import \"./style.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField, MenuItem, InputLabel, FormControl, Select, Checkbox, OutlinedInput,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport {GoogleMap, MarkerF, useLoadScript} from \"@react-google-maps/api\";\r\nimport {GOOGLE_MAPS_API_KEY} from \"../googleMapsApi\";\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxOption} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Loader from \"../../loader/Loader\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addAlert, delAlert} from \"../../../redux/AlertsBox\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\n\r\nconst PharmacyProfile = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [workingTime24, setWorkingTime24] = useState(false);\r\n    const [selected, setSelected] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [center, setCenter] = useState({lat: 41.295695, lng: 69.239730});\r\n    const [addressLocation, setAddressLocation] = useState(\"\");\r\n    const [addressLocationRu, setAddressLocationRu] = useState(\"\");\r\n    const [address_validate, setAddress_validate] = useState(false);\r\n    const [region, setRegion] = useState(\"\");\r\n    const [region_validate, setRegion_validate] = useState(false);\r\n    const [logoHospital, setLogoHospital] = useState(null);\r\n    const [weekend, setWeekend] = useState([]);\r\n    const [daysList, setDaysList] = useState([]);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    const selectAddressIcon = {\r\n        url: \"./images/address.png\",\r\n        scaledSize: {width: 40, height: 50},\r\n    };\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: GOOGLE_MAPS_API_KEY,\r\n        libraries: libraries,\r\n        language: i18next.language,\r\n    });\r\n\r\n    const options = useMemo(\r\n        () => ({\r\n            disableDefaultUI: false,\r\n            clickableIcons: false,\r\n        }),\r\n        []\r\n    );\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.nameUz) {\r\n            errors.nameUz = \"Required\";\r\n        }\r\n\r\n        if (!values.nameRu) {\r\n            errors.nameRu = \"Required\";\r\n        }\r\n\r\n        if (!values.phone1) {\r\n            errors.phone1 = \"Required\";\r\n        }\r\n\r\n        if (!values.phone2) {\r\n            errors.phone2 = \"Required\";\r\n        }\r\n\r\n        if (!values.working_days.length > 0) {\r\n            errors.working_days = \"Required\";\r\n        }\r\n\r\n        if (!workingTime24 && !values.start_time) {\r\n            errors.start_time = \"Required\";\r\n        }\r\n\r\n        if (!workingTime24 && !values.end_time) {\r\n            errors.end_time = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formOne = useFormik({\r\n        initialValues: {\r\n            nameUz: \"\",\r\n            nameRu: \"\",\r\n            phone1: \"\",\r\n            phone2: \"\",\r\n            start_time: \"\",\r\n            end_time: \"\",\r\n            working_days: [],\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            setPageNumber(2)\r\n            console.log(values)\r\n        },\r\n    });\r\n\r\n    const getInputPhoto = (event) => {\r\n        const {target: {files}} = event;\r\n        const file = files[0];\r\n\r\n        function getBase64(file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () {\r\n                setLogoHospital(reader.result);\r\n            };\r\n            reader.onerror = function () {\r\n                setLogoHospital(null);\r\n            };\r\n\r\n        }\r\n\r\n        getBase64(file);\r\n    };\r\n\r\n    const getInformation = () => {\r\n        axios.get(`${baseUrl}pharmacy-profile/`, {\r\n                headers: {\r\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n                }\r\n            }\r\n        ).then((response) => {\r\n\r\n            formOne.setValues({\r\n                nameUz: response.data.translations[\"uz\"].name,\r\n                nameRu: response.data.translations[\"ru\"].name,\r\n                phone1: response.data.phone1,\r\n                phone2: response.data.phone2,\r\n                start_time: response.data.start_time,\r\n                end_time: response.data.end_time,\r\n                working_days: response.data.working_days,\r\n            });\r\n\r\n            let week = response.data.working_days\r\n            axios.get(`${baseUrl}days/`).then((response) => {\r\n\r\n                let new_list = response.data.filter(day => {\r\n                    return day.id && week.includes(day.id);\r\n                }).map(day => day.translations[i18next.language].day);\r\n\r\n                setWeekend(new_list)\r\n            }).catch((error) => {\r\n            });\r\n\r\n            setLogoHospital(`https://api.medos.uz/` + response.data.image)\r\n\r\n            setRegion(response.data.region)\r\n\r\n            setAddressLocation(response.data.translations[i18next.language].address)\r\n\r\n            let location = response.data.location.split(',');\r\n\r\n            let locMy = {lat: Number(location[0]), lng: Number(location[1])};\r\n            setCenter(locMy);\r\n            setSelected(locMy)\r\n\r\n            setWorkingTime24(response.data.open_24)\r\n        }).catch((error) => {\r\n            if (error.response.statusText == \"Unauthorized\") {\r\n                window.location.pathname = \"/\";\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInformation()\r\n        axios.get(`${baseUrl}days/`).then((response) => {\r\n            setDaysList(response.data)\r\n        }).catch((error) => {\r\n        });\r\n    }, []);\r\n\r\n    const handleChangeMore = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n\r\n        setWeekend(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n\r\n        let new_list = daysList.filter(day => {\r\n            return day.translations[i18next.language].day && value.includes(day.translations[i18next.language].day);\r\n        }).map(day => day.id);\r\n\r\n        formOne.values.working_days = new_list\r\n    };\r\n\r\n    const ClicklLocation = (e) => {\r\n        let latitude = e.latLng.lat();\r\n        let longitude = e.latLng.lng();\r\n\r\n        let locMy = {lat: latitude, lng: longitude};\r\n\r\n        const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"uz\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setSelected(locMy);\r\n            setAddressLocation(fullAddress)\r\n            setAddress_validate(false)\r\n        });\r\n\r\n        axios.get(`${url}`, {\r\n            headers: {\r\n                \"Accept-Language\": \"ru\",\r\n            },\r\n        }).then((res) => {\r\n            let city = res.data.address.city;\r\n            let country = res.data.address.country;\r\n            let suburb = res.data.address.suburb;\r\n            let neighbourhood = res.data.address.neighbourhood;\r\n            let county = res.data.address.county;\r\n            let road = res.data.address.road;\r\n            let fullAddress = `${country ? country + \",\" : \"\"} ${city ? city + \",\" : \"\"\r\n            } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                county ? county + \",\" : \"\"\r\n            } ${road ? road : \"\"}`;\r\n\r\n            setAddressLocationRu(fullAddress);\r\n        });\r\n    };\r\n\r\n    const PlacesAutocomplete = ({setSelected}) => {\r\n        const {\r\n            ready,\r\n            value,\r\n            setValue,\r\n            suggestions: {status, data},\r\n            clearSuggestions,\r\n        } = usePlacesAutocomplete({\r\n            requestOptions: {\r\n                language: i18next.language,\r\n            },\r\n        });\r\n\r\n        const handleSelect = async (address) => {\r\n            const results = await getGeocode({address});\r\n            const {lat, lng} = await getLatLng(results[0]);\r\n            let locMy = {lat, lng};\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&lan=en`;\r\n\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"uz\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n\r\n                setSelected(locMy);\r\n                setCenter({lat, lng});\r\n                setAddressLocation(fullAddress)\r\n                setAddress_validate(false)\r\n            });\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": \"ru\"},}).then((res) => {\r\n                let city = res.data.address.city;\r\n                let country = res.data.address.country;\r\n                let suburb = res.data.address.suburb;\r\n                let neighbourhood = res.data.address.neighbourhood;\r\n                let county = res.data.address.county;\r\n                let road = res.data.address.road;\r\n                let fullAddress = `${country ? country + \",\" : \"\"} ${\r\n                    city ? city + \",\" : \"\"\r\n                } ${suburb ? suburb + \",\" : \"\"} \r\n            ${neighbourhood ? neighbourhood + \",\" : \"\"} ${\r\n                    county ? county + \",\" : \"\"\r\n                } ${road ? road : \"\"}`;\r\n                setAddressLocationRu(fullAddress);\r\n            });\r\n        };\r\n\r\n        return (\r\n            <Combobox onSelect={handleSelect}>\r\n                <ComboboxInput\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    disabled={!ready}\r\n                    className=\"combobox-input\"\r\n                    placeholder=\"Manzilni kiriting...\"\r\n                />\r\n\r\n                <div className=\"address-wrapper\">\r\n                    <div className=\"list-address\">\r\n                        {status === \"OK\" &&\r\n                        data.map(({place_id, description}) => (\r\n                            <ComboboxOption key={place_id} value={description}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Combobox>\r\n        );\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        let loc = `${center.lat},${center.lng}`;\r\n        let allInfoHospital = {\r\n            translations: {\r\n                uz: {\r\n                    name: formOne.values.nameUz,\r\n                    address: addressLocation\r\n                },\r\n                ru: {\r\n                    name: formOne.values.nameRu,\r\n                    address: addressLocationRu\r\n                }\r\n            },\r\n            base64_image: logoHospital,\r\n            phone1: formOne.values.phone1,\r\n            phone2: formOne.values.phone2,\r\n            start_time: formOne.values.start_time,\r\n            end_time: formOne.values.end_time,\r\n            open_24: workingTime24,\r\n            location: loc,\r\n            working_days: formOne.values.working_days,\r\n            region: region\r\n        };\r\n\r\n        axios.post(`${baseUrl}pharmacy-profile/`, allInfoHospital, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n\r\n            let idAlert = Date.now();\r\n            let alert = {\r\n                id: idAlert,\r\n                text: \"Malumotlar yangilandi!\",\r\n                img: \"./images/green.svg\",\r\n                color: \"#EDFFFA\",\r\n            };\r\n            dispatch(addAlert(alert));\r\n            setTimeout(() => {\r\n                dispatch(delAlert(idAlert));\r\n            }, 5000);\r\n\r\n            getInformation()\r\n        }).catch((error) => {\r\n        });\r\n\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n\r\n    return <div className=\"profile-pharmacies-container\">\r\n        <div className=\"logo\">\r\n            <img src=\"./images/logo.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"xbtn\">\r\n            <img onClick={() => navigate(\"/\")} src=\"./images/cancel.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"register-page\">\r\n            <div className=\"register-page-one\">\r\n                <div className=\"title\">\r\n                    Akkount sozlamalari\r\n                </div>\r\n                <div className=\"des\">\r\n                    Dorixona akkountingizni tahrirlashingiz mumkin\r\n                </div>\r\n                <div className=\"logo-hospital\">\r\n                    <div className=\"logo-image\">\r\n                        {logoHospital ? <img className=\"logo-clinic\" src={logoHospital} alt=\"\"/> :\r\n                            <img className=\"logo-camera\" src=\"./images/Exclude.png\" alt=\"\"/>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"label\">\r\n                        Logo qo‘shish\r\n                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"inputs-box\">\r\n                    <TextField error={formOne.errors.nameUz === \"Required\"}\r\n                               value={formOne.values.nameUz}\r\n                               onChange={formOne.handleChange}\r\n                               name=\"nameUz\"\r\n                               sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                               id=\"outlined-basic\"\r\n                               label=\"Shifoxona nomini kiriting (uz) \" variant=\"outlined\" className=\"textField\"/>\r\n                </div>\r\n\r\n                <div className=\"inputs-box\">\r\n                    <TextField error={formOne.errors.nameRu === \"Required\"} value={formOne.values.nameRu}\r\n                               onChange={formOne.handleChange}\r\n                               name=\"nameRu\" sx={{m: 1, minWidth: \"100%\"}} size=\"small\"\r\n                               id=\"outlined-basic\"\r\n                               label=\"Введите название больницы (ru) \" variant=\"outlined\" className=\"textField\"/>\r\n                </div>\r\n\r\n                <div className=\"des-input\">\r\n                    Iltimos, shifoxona nomini rus tili va o'zbek tilida kiritng\r\n                </div>\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Ish vaqti</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                            <InputLabel id=\"demo-multiple-checkbox-label\">Ish kunlarini belgilang</InputLabel>\r\n                            <Select\r\n                                error={formOne.errors.working_days === \"Required\"}\r\n                                name=\"working_days\"\r\n                                labelId=\"demo-multiple-checkbox-label\"\r\n                                id=\"demo-multiple-checkbox\"\r\n                                multiple\r\n                                value={weekend}\r\n                                onChange={handleChangeMore}\r\n                                input={<OutlinedInput label=\"Ish kunlarini  belgilang\"/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {daysList.map((item, index) => (\r\n                                    <MenuItem key={item.id} value={item.translations[i18next.language].day}>\r\n                                        <Checkbox\r\n                                            checked={weekend.indexOf(item.translations[i18next.language].day) > -1}/>\r\n                                        <ListItemText primary={item.translations[i18next.language].day}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <div className=\"check-box\">\r\n                            <div className=\"checkbox-wrapper-13\">\r\n                                <input\r\n                                    onChange={(e) => {\r\n                                        setWorkingTime24((prevState) => !prevState);\r\n                                    }}\r\n                                    checked={workingTime24}\r\n                                    id=\"c1-13\"\r\n                                    type=\"checkbox\"\r\n                                />\r\n                            </div>\r\n                            <label htmlFor=\"c1-13\">\r\n                                Ish faoliyati 24 soat yuritiladi\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {workingTime24 ? \"\" : <div className=\"select-box-working-time\">\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.start_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"start_time\" onChange={formOne.handleChange} value={formOne.values.start_time}\r\n                            type=\"time\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <label htmlFor=\"\">Ish vaqti boshlanishi</label>\r\n                        <input\r\n                            className={`working_time ${formOne.errors.end_time === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                            name=\"end_time\" onChange={formOne.handleChange} value={formOne.values.end_time}\r\n                            type=\"time\"/>\r\n                    </div>\r\n                </div>}\r\n\r\n                <div className=\"label-text\">\r\n                    <div className=\"sides\">\r\n                        <div className=\"label-bold\">Dorixona bilan bog‘lanish</div>\r\n                    </div>\r\n                    <div className=\"sides\"></div>\r\n                </div>\r\n\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            error={formOne.errors.phone1 === \"Required\"}\r\n                            value={formOne.values.phone1}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"phone1\"\r\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                            label=\"Telefon raqam 1\" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                    <div className=\"select-sides\">\r\n                        <TextField\r\n                            error={formOne.errors.phone2 === \"Required\"}\r\n                            value={formOne.values.phone2}\r\n                            onChange={formOne.handleChange}\r\n                            name=\"phone2\"\r\n                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                            label=\"Telefon raqam 2\" variant=\"outlined\" className=\"textField\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"register-page-two\">\r\n                <div className=\"select-box\">\r\n                    <div className=\"select-sides\">\r\n                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                            <InputLabel id=\"demo-select-large-label\">Viloyatni tanlang</InputLabel>\r\n                            <Select\r\n                                error={region_validate}\r\n                                labelId=\"demo-select-small-label\"\r\n                                id=\"demo-select-small\"\r\n                                value={region}\r\n                                label=\"Viloyatni tanlang\"\r\n                                onChange={(e) => setRegion(e.target.value)}\r\n                            >\r\n\r\n                                {regions.map((item, index) => {\r\n                                    return <MenuItem key={index} onClick={() => {\r\n                                        setRegion_validate(false)\r\n                                        setCenter({lat: item.latitude, lng: item.longitude})\r\n                                    }} value={index + 1}>{item.name}</MenuItem>\r\n                                })}\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n                <div className=\"label-address\">Manzil:</div>\r\n                <div className={`address-box ${address_validate ? \"validate_location\" : \"\"}`}>\r\n                    {i18next.language === \"uz\" && addressLocation ? addressLocation : \"\"}\r\n                    {i18next.language === \"ru\" && addressLocationRu ? addressLocationRu : \"\"}\r\n                    {!addressLocation && !addressLocationRu && <p>Manzilni xaritadan belgilang</p>}\r\n                </div>\r\n                <div className=\"address-container\">\r\n                    <GoogleMap\r\n                        zoom={9}\r\n                        center={center}\r\n                        options={options}\r\n                        onClick={ClicklLocation}\r\n                        mapContainerClassName=\"map-box\"\r\n                    >\r\n                        {selected && (\r\n                            <MarkerF icon={selectAddressIcon} position={selected}/>\r\n                        )}\r\n\r\n                        <div className=\"search-address\">\r\n                            <div className=\"places-container\">\r\n                                <PlacesAutocomplete setSelected={setSelected}/>\r\n                                <img src=\"./images/search.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </GoogleMap>\r\n                </div>\r\n                <div className=\"btn-box\">\r\n                    <div onClick={() => navigate(\"/\")} className=\"prev-btn\">\r\n                        <img src=\"./images/prev-btn.png\" alt=\"\"/>\r\n                        Bekor qilish\r\n                    </div>\r\n                    <div onClick={() => {\r\n                        if (addressLocation && region) {\r\n                            sendAllInfo()\r\n                        } else {\r\n                            if (!addressLocation) setAddress_validate(true);\r\n                            if (!region) setRegion_validate(true)\r\n                        }\r\n                    }} className=\"next-page-btn\">\r\n                        O'zgarishlarni saqlash\r\n                        <img src=\"./images/next-btn.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default PharmacyProfile","import \"./style.scss\"\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useSelector} from \"react-redux\";\r\nimport MobileNavbar from \"../mobile-navbar/MobileNavbar\";\r\n\r\n\r\nconst Messages = () => {\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [messages, setMessages] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}patient/${localStorage.getItem(\"userId\")}/`).then((response) => {\r\n            setMessages(response.data);\r\n        });\r\n    }, []);\r\n    const delMessage = (id) => {\r\n        axios.delete(`${baseUrl}patient/${id}/`).then((response) => {\r\n            axios.get(`${baseUrl}patient/${localStorage.getItem(\"userId\")}/`).then((response) => {\r\n                setMessages(response.data);\r\n            });\r\n        });\r\n    };\r\n    return <div className=\"messages-wrapper\">\r\n        <Navbar/>\r\n        <div className=\"bottom-contents\">\r\n            <div className=\"left-side\">\r\n                <div className=\"title\">\r\n                    Kelib tushgan murojaat va xabarlar\r\n                </div>\r\n                <div className=\"messages\">\r\n                    {messages.map((item, index) => {\r\n                        return <div key={index} className=\"message-box\">\r\n                            <div className=\"icon-message\">\r\n                                <img src=\"./images/mail.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div onClick={() => delMessage(item.id)} className=\"del-icon\">\r\n                                <img src=\"./images/del-icon.png\" alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                {item.name}\r\n                            </div>\r\n                            <div className=\"number\">\r\n                                {item.phone}\r\n                            </div>\r\n                            <div className=\"des\">\r\n                                {item.text}\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"mobile-navbar-container\">\r\n            <MobileNavbar/>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Messages","import React from \"react\";\r\nimport Clinics from \"../components/clinics/Clinics\";\r\nimport Doctors from \"../components/doctors/Doctors\";\r\nimport Saved from \"../components/saved/Saved\";\r\nimport AboutClinic from \"../components/about-clinic/About-clinic\";\r\nimport Pharmacies from \"../components/Pharmacies/Pharmacies\";\r\nimport Login from \"../components/login/login\";\r\nimport AboutDoctor from \"../components/about-doctor/About-doctor\";\r\nimport AboutPharma from \"../components/about-pharma/AboutPharma\";\r\nimport Register from \"../components/register/Register\";\r\nimport RegisterHospital from \"../components/register/register-hospital/RegisterHospital\";\r\nimport RegisterDoctor from \"../components/register/register-doctor/RegisterDoctor\";\r\nimport RegisterPharmacies from \"../components/register/register-pharmacies/RegisterPharmacies\";\r\nimport Service from \"../components/services/Services\";\r\nimport ProfileDoctor from \"../components/profile/profile-doctor/ProfileDoctor\";\r\nimport ProfileHospital from \"../components/profile/hospital-profile/HospitalProfile\";\r\nimport PharmacyProfile from \"../components/profile/pharmacy-profile/PharmacyProfile\";\r\nimport Messages from \"../components/messages/Messages\";\r\n\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <Clinics/>\r\n    },\r\n    {\r\n        path: \"/doctors\",\r\n        element: <Doctors/>\r\n    },\r\n    {\r\n        path: \"/pharmacies\",\r\n        element: <Pharmacies/>\r\n    },\r\n    {\r\n        path: \"/saved\",\r\n        element: <Saved/>\r\n    },\r\n    {\r\n        path: \"/about-clinic\",\r\n        element: <AboutClinic/>\r\n    },\r\n    {\r\n        path: \"/about-doctor\",\r\n        element: <AboutDoctor/>\r\n    },\r\n    {\r\n        path: \"/about-pharmacies\",\r\n        element: <AboutPharma/>\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        element: <Login/>\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        element: <Register/>\r\n    },\r\n    {\r\n        path: \"/register-hospital\",\r\n        element: <RegisterHospital/>\r\n    },\r\n    {\r\n        path: \"/register-doctor\",\r\n        element: <RegisterDoctor/>\r\n    },\r\n    {\r\n        path: \"/register-pharmacies\",\r\n        element: <RegisterPharmacies/>\r\n    },\r\n    {\r\n        path: \"/services\",\r\n        element: <Service/>\r\n    },\r\n    {\r\n        path: \"/messages\",\r\n        element: <Messages/>\r\n    },\r\n];\r\n\r\nexport const allRoutes = [\r\n    ...publicRoutes,\r\n    {\r\n        path: \"/profile-doctor\",\r\n        element: <ProfileDoctor/>\r\n    },\r\n    {\r\n        path: \"/profile-hospital\",\r\n        element: <ProfileHospital/>\r\n    },\r\n    {\r\n        path: \"/profile-pharmacy\",\r\n        element: <PharmacyProfile/>\r\n    },\r\n];\r\n\r\n\r\n","import {useRef, useState, useContext, useEffect} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport ReactStars from \"react-stars\";\r\nimport {hideModal, showModals} from \"../../redux/ModalContent\";\r\nimport \"./style.scss\";\r\nimport {useFormik} from \"formik\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {addAlert, delAlert} from \"../../redux/AlertsBox\";\r\nimport i18next from \"i18next\";\r\nimport axios from \"axios\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Modal = () => {\r\n    const {t} = useTranslation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const nodeRef = useRef(null);\r\n    const modalContent = useSelector((store) => store.ModalContent.data);\r\n    const baseUrl = useSelector((store) => store.baseUrl.data);\r\n    const [raidCount, setRaidCount] = useState();\r\n\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        } else if (isNaN(Number(values.phone))) {\r\n            errors.phone = \"Required\";\r\n        }\r\n        if (!values.name) {\r\n            errors.name = \"Required\";\r\n        }\r\n        if (!values.text) {\r\n            errors.text = \"Required\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const formReception = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            phone: \"\",\r\n            text: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            let reception = {\r\n                ...values,\r\n                user: modalContent.item\r\n            };\r\n\r\n            let rate = {\r\n                ...values,\r\n                user: modalContent.item,\r\n                mark: raidCount\r\n            };\r\n\r\n            if (modalContent.status === \"sms\") {\r\n                console.log(reception);\r\n                axios.post(`${baseUrl}patient/`, reception).then((response) => {\r\n                    let idAlert = Date.now();\r\n                    let alert = {\r\n                        id: idAlert,\r\n                        text: \"Xabar yuborildi!\",\r\n                        img: \"./images/green.svg\",\r\n                        color: \"#EDFFFA\",\r\n                    };\r\n                    dispatch(addAlert(alert));\r\n                    setTimeout(() => {\r\n                        dispatch(delAlert(idAlert));\r\n                    }, 5000);\r\n                    dispatch(hideModal({show: false}));\r\n                    formReception.resetForm();\r\n                });\r\n            }\r\n\r\n            if (modalContent.status === \"commit\") {\r\n                axios.post(`${baseUrl}comment/`, rate).then((response) => {\r\n                    let idAlert = Date.now();\r\n                    let alert = {\r\n                        id: idAlert,\r\n                        text: \"Baxolandi!\",\r\n                        img: \"./images/green.svg\",\r\n                        color: \"#EDFFFA\",\r\n                    };\r\n                    dispatch(addAlert(alert));\r\n                    setTimeout(() => {\r\n                        dispatch(delAlert(idAlert));\r\n                    }, 5000);\r\n                    dispatch(hideModal({show: false}))\r\n                    formReception.resetForm()\r\n                });\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={modalContent.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalContent.status === \"sms\" && <form onSubmit={formReception.handleSubmit} className=\"send-sms\">\r\n                        <div className=\"header\">\r\n                            <div className=\"xbtn\">\r\n                                <img onClick={() => dispatch(hideModal({show: false}))} src=\"./images/cancel.png\"\r\n                                     alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\">\r\n                            Qabulga yozilish\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            Operatorlar siz bilan aloqaga chiqa olishlari uchun pastdagi maydonlarni to‘g‘ri\r\n                            to‘ldiring!\r\n                        </div>\r\n                        <div className=\"inputs-box\">\r\n                            <input\r\n                                className={formReception.errors.name === \"Required\" ? \"Required\" : \"\"}\r\n                                onChange={formReception.handleChange}\r\n                                value={formReception.values.name}\r\n                                name=\"name\"\r\n                                placeholder=\"To'liq ismingizni yozing\" type=\"text\"/>\r\n                            <input\r\n                                className={formReception.errors.phone === \"Required\" ? \"Required\" : \"\"}\r\n                                onChange={formReception.handleChange}\r\n                                value={formReception.values.phone}\r\n                                name=\"phone\"\r\n                                placeholder=\"Telefon raqamingizni kiriting\" type=\"text\"/>\r\n                            <textarea\r\n                                className={formReception.errors.text === \"Required\" ? \"Required\" : \"\"}\r\n                                onChange={formReception.handleChange}\r\n                                value={formReception.values.text}\r\n                                name=\"text\"\r\n                                placeholder=\"Siz kuzatilayotgan muammo haqida qisqacha izoh yozing\"\r\n                                cols=\"30\" rows=\"10\"></textarea>\r\n                        </div>\r\n                        <div className=\"buttons-box\">\r\n                            <div onClick={() => dispatch(hideModal({show: false}))} className=\"cancel-btn\">Bekor\r\n                                qilish\r\n                            </div>\r\n                            <button type=\"submit\" className=\"send-btn\">Yuborish</button>\r\n                        </div>\r\n                    </form>}\r\n\r\n                    {modalContent.status === \"contact\" &&\r\n                    <div className=\"contact\">\r\n                        <div className=\"header\">\r\n                            <div className=\"title\">\r\n                                {modalContent.item.translations[i18next.language].name ?\r\n                                    modalContent.item.translations[i18next.language].name :\r\n                                    <>\r\n                                        {modalContent.item.translations[i18next.language].first_name} &nbsp;\r\n                                        {modalContent.item.translations[i18next.language].last_name} &nbsp;\r\n                                        {modalContent.item.translations[i18next.language].middle_name}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div className=\"xbtn\">\r\n                                <img onClick={() => dispatch(hideModal({show: false}))} src=\"./images/cancel.png\"\r\n                                     alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title-contact\">Ish vaqti</div>\r\n                        <div className=\"content\">\r\n                            {modalContent.item.open_24 ? \"24 soat ochiq\" : <>\r\n                                {modalContent.item.start_time} dan\r\n                                &nbsp;\r\n                                {modalContent.item.end_time} gacha\r\n                            </>}\r\n                        </div>\r\n\r\n                        <div className=\"title-contact\">Bog‘lanish uchun telefon raqmalar</div>\r\n                        <div className=\"content\">\r\n                            <div className=\"phone\">\r\n                                {modalContent.item.phone1 ? modalContent.item.phone1 : modalContent.item.phone}\r\n                            </div>\r\n                            <div className=\"phone\">\r\n                                {modalContent.item.phone2}\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n\r\n                    {modalContent.status === \"commit\" &&\r\n                    <form onSubmit={formReception.handleSubmit} className=\"send-commit\">\r\n                        <div className=\"header\">\r\n                            <div className=\"xbtn\">\r\n                                <img onClick={() => dispatch(hideModal({show: false}))} src=\"./images/cancel.png\"\r\n                                     alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title\">\r\n                            Baholang va izoh qoldiring\r\n                        </div>\r\n                        <div className=\"stars\">\r\n                            <ReactStars\r\n                                count={5}\r\n                                onChange={(e) => {\r\n                                    setRaidCount(e);\r\n                                }}\r\n                                size={35}\r\n                                color2={\"rgba(255, 194, 50, 1)\"}\r\n                                half={false}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputs-box\">\r\n                            <input\r\n                                className={formReception.errors.name === \"Required\" ? \"Required\" : \"\"}\r\n                                onChange={formReception.handleChange}\r\n                                value={formReception.values.name}\r\n                                name=\"name\"\r\n                                placeholder=\"To'liq ismingizni yozing\" type=\"text\"/>\r\n                            <input\r\n                                className={formReception.errors.phone === \"Required\" ? \"Required\" : \"\"}\r\n                                onChange={formReception.handleChange}\r\n                                value={formReception.values.phone}\r\n                                name=\"phone\"\r\n                                placeholder=\"Telefon raqamingizni kiriting\" type=\"text\"/>\r\n                            <div className=\"description\">\r\n                                Sizning xavfsizligingiz uchun telefon raqami boshqa foydalanuvchilarga ko‘rinmaydi.\r\n                            </div>\r\n                            <textarea\r\n                                className={formReception.errors.text === \"Required\" ? \"Required\" : \"\"}\r\n                                onChange={formReception.handleChange}\r\n                                value={formReception.values.text}\r\n                                name=\"text\"\r\n                                placeholder=\"Siz kuzatilayotgan muammo haqida qisqacha izoh yozing\"\r\n                                cols=\"30\" rows=\"10\"></textarea>\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            Barcha izohlar tekshiruvdan o'tadi\r\n                        </div>\r\n                        <button type=\"submit\" className=\"send-btn\">Saqlash va yuborish</button>\r\n                    </form>}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n    );\r\n};\r\nexport default Modal;\r\n","import \"./style.scss\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {delAlert} from \"../../redux/AlertsBox\"\r\n\r\nconst Alerts = () => {\r\n    const dispatch = useDispatch()\r\n    const Alerts = useSelector((store) => store.Alerts.data)\r\n    const delAlerts = (id) => {\r\n        dispatch(delAlert(id))\r\n    };\r\n\r\n    return <div className=\"alerts-container\">\r\n\r\n        {\r\n            Alerts.length > 0 && <div className={`alerts-box ${Alerts.length > 3 ? \"alerts-box-hide\" : \"\"}`}>\r\n                {Alerts.map((item, index) => {\r\n                    return <div key={index} className=\"alert\">\r\n                        <div style={{background:item.color}} className=\"left-side\">\r\n                            <img src={item.img} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"right-side\">\r\n                            {item.text}\r\n                        </div>\r\n                        <div className=\"xbtn\">\r\n                            <img onClick={() => delAlerts(item.id)} src=\"./images/x-button.png\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default Alerts","import React, {useMemo, useState, useEffect, createContext} from \"react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport NotFound from \"../notFound/NotFound\";\r\nimport {allRoutes, publicRoutes} from \"../../routes/Routes\";\r\nimport axios from \"axios\";\r\nimport i18next from \"i18next\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getLocation} from \"../../redux/locationUser\";\r\nimport Modal from \"../modal/Modal\";\r\nimport Alerts from \"../alerts/Alerts\";\r\n\r\n\r\nexport const MainContext = createContext();\r\n\r\nconst App = () => {\r\n    const {t} = useTranslation();\r\n    const [url, setUrl] = useState('https://api.buyukyol.uz/');\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useMemo(() => localStorage.getItem('token'), []);\r\n\r\n    const routes = useMemo(() => {\r\n        if (user) return allRoutes;\r\n        return publicRoutes\r\n    }, [user]);\r\n\r\n    const regions = [\r\n        {name: t(\"Andijan\"), latitude: 40.813616, longitude: 72.283463},\r\n        {name: t(\"Bukhara\"), latitude: 39.767070, longitude: 64.455393},\r\n        {name: t(\"Ferghana\"), latitude: 40.372379, longitude: 71.797770},\r\n        {name: t(\"Jizzakh\"), latitude: 40.119300, longitude: 67.880140},\r\n        {name: t(\"Namangan\"), latitude: 41.004297, longitude: 71.642956},\r\n        {name: t(\"Navoi\"), latitude: 40.096634, longitude: 65.352255},\r\n        {name: t(\"Kashkadarya\"), latitude: 38.852124, longitude: 65.784203},\r\n        {name: t(\"Samarkand\"), latitude: 39.649307, longitude: 66.965182},\r\n        {name: t(\"SyrDarya\"), latitude: 40.376986, longitude: 68.713159},\r\n        {name: t(\"Surkhandarya\"), latitude: 37.931559, longitude: 67.564765},\r\n        {name: t(\"Tashkent\"), latitude: 41.295695, longitude: 69.239730},\r\n        {name: t(\"Khorezm\"), latitude: 41.522326, longitude: 60.623731},\r\n        {name: t(\"Karakalpakstan\"), latitude: 43.730521, longitude: 59.064533}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&lan=en`;\r\n            axios.get(`${url}`, {headers: {\"Accept-Language\": i18next.language}}).then((res) => {\r\n                const location = {\r\n                    key: regions.findIndex(region => region.name === res.data.address.city),\r\n                    \"city\": res.data.address.city, \"latitude\": Number(latitude), \"longitude\": Number(longitude)\r\n                };\r\n                dispatch(getLocation(location))\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return <MainContext.Provider value={url}>\r\n        <Routes>\r\n            {routes.map((route, index) => (<Route key={index} {...route} />))}\r\n            <Route path={'*'} element={<NotFound/>}/>\r\n        </Routes>\r\n        <Modal/>\r\n        <Alerts/>\r\n    </MainContext.Provider>\r\n};\r\n\r\nexport default App;"],"names":["NotFound","_jsx","className","children","_jsxs","Navbar","baseUrl","useSelector","store","data","t","useTranslation","dispatch","useDispatch","profile","setProfile","useState","searchList","setSearchList","navigate","useNavigate","location","setLocation","locationRu","setLocationRu","searchBox","setSearchBox","inputVal","setInputVal","filterResult","setFilterResult","useEffect","axios","get","concat","then","response","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","url","headers","res","address","city","Menus","name","window","onclick","event","target","matches","getInformation","status","item","translations","getClinics","changeMenu","first_name","last_name","getDoctor","getPharmacies","post","sub_service","id","_Fragment","onClick","src","alt","i18next","language","code","country_code","map","_ref","localStorage","setItem","changeLanguage","index","NavLink","to","_ref2","isActive","img","onChange","e","value","filteredResults","filterData","searchValue","lowerCaseSearchValue","toLowerCase","find1","hospitals","filter","hospital","Object","values","some","translation","includes","find2","doctors","doctor","middle_name","filterDoctors","find3","pharmacies","pharmacy","filterPharmacies","find4","services","service","found","length","placeholder","type","getItem","removeItem","reload","Footer","links","link","href","GOOGLE_MAPS_API_KEY","LoaderMap","ClinicMarkers","clinics","Clinics","selectedLocation","setSelectedLocation","clinicActiveId","setClinicActiveId","icon","scaledSize","width","height","icon2","MarkerClustererF","gridSize","clusterer","MarkerF","lat","Number","split","lng","InfoWindow","onCloseClick","image","avg_rating","comment_count","open_24","start_time","end_time","getAboutMarker","DoctorMarkers","Doctors","specialty","experience","working_days","day","PharmaciesMarkers","Pharmacies","isPlaceOpen","startTime","endTime","startParts","endParts","startDate","Date","setHours","endDate","now","AboutMarker","aboutMarker","MarkerAbout","libraries","Map","onloadMap","setOnloadMap","LocationUser","showMap","ShowMap","center","setCenter","isLoaded","useLoadScript","googleMapsApiKey","regions","options","useMemo","disableDefaultUI","clickableIcons","locMy","GoogleMap","zoom","mapContainerClassName","onLoad","myLocation","key","findIndex","region","getLocation","show","pathname","MobileNavbar","filterService","Menu","serviceList","setServiceList","regionSelect","setRegionSelect","hospitalList","setHospitalList","hospitalType","setHospitalType","setRegion","setType","speciality","setSpeciality","working24","setWorking24","disable","setDisable","savedPosts","setSavedPosts","catch","error","getSavedPosts","filterHospital","ShowModal","showModals","hospital_type_key","region_key","type_key","speciality_key","open_24_key","disabled_key","filterBox","hospital_type","disabled","queryString","entries","encodeURIComponent","join","JSON","parse","FormControl","sx","m","minWidth","size","InputLabel","Select","labelId","label","MenuItem","changeRegion","postId","updatedSavedPosts","push","stringify","handleSaveClick","user","hospital_services","gender","setGender","cost","setCost","gender_key","cost_key","sub_speciality","consultation_fee","second_consultation_fee","Saved","tabActive","setTabActive","like","setLike","setClinics","setDoctors","setPharmacies","savedPostsClinic","setSavedPostsClinic","getSavedPostsClinic","savedPostsDoctor","setSavedPostsDoctor","getSavedPostsDoctor","savedPostsPharmacy","setSavedPostsPharmacy","getSavedPostsPharmacy","handleSaveClickClinic","handleSaveClickDoctor","handleSaveClickPharmacy","MapAbout","locationAbout","AboutClinic","clinic","setClinic","comments","setComments","setServices","tabs","slice","time","Array","from","mark","_","text","doctor_count","services_count","service_count","sub_services_list","price","Login","phone","setPhone","setCode","checkCode","setCheckCode","minutes","setMinutes","seconds","setSeconds","interval","setInterval","clearInterval","HandleLogin","user_id","prevState","idAlert","alert","color","addAlert","setTimeout","delAlert","CheckCode","token","user_type","useOnKeyPress","callback","targetKey","keyPressHandler","addEventListener","removeEventListener","AuthCode","allowedCharacters","undefined","trim","htmlFor","PhoneInput","international","defaultCountry","AboutDoctor","setDoctor","similarDoctors","setSimilarDoctors","bio","AboutPharma","setPharmacy","phone1","phone2","Register","direction","setDirection","RegisterHospital","setHospital","invalidService","setInvalidService","workingTime24","setWorkingTime24","selected","setSelected","pageNumber","setPageNumber","socialMedias","setSocialMedias","setService","addressLocation","setAddressLocation","addressLocationRu","setAddressLocationRu","address_validate","setAddress_validate","weekend","setWeekend","region_validate","setRegion_validate","logoHospital","setLogoHospital","daysList","setDaysList","logoValidate","setLogoValidate","ref2","useRef","tg","setTg","ins","setIns","face","setFace","you","setYou","tik","setTik","loader","setLoader","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","formOne","useFormik","initialValues","nameUz","nameRu","validate","errors","isNaN","onSubmit","_ref2$current","current","scrollIntoView","behavior","PlacesAutocomplete","ready","setValue","suggestions","clearSuggestions","usePlacesAutocomplete","requestOptions","Combobox","onSelect","async","results","getGeocode","getLatLng","country","suburb","neighbourhood","county","road","fullAddress","ComboboxInput","place_id","description","ComboboxOption","addSocialMedia","newMedia","newArr","Loader","ref","files","file","reader","FileReader","readAsDataURL","onload","result","onerror","getBase64","TextField","handleChange","variant","multiple","new_list","input","OutlinedInput","renderValue","Checkbox","checked","indexOf","ListItemText","primary","delSocialMedia","ind","handleSubmit","latLng","Marker","change","delService","itemService","indexService","addService","sendAllInfo","loc","allInfoHospital","uz","ru","base64_image","socials","cyrillicToTranslit","CyrillicToTranslit","subSpecialty","setSubSpecialty","setSpecialty","specialtyList","setSpecialtyList","subSpecialtyList","setSubSpecialtyList","bio_uz","bio_ru","transform","reverse","Textarea","RegisterPharmacies","Service","hospital_count","sub_service_list","console","log","ProfileDoctor","setValues","doctor_socials","week","newSubSpecialty","statusText","newSocial","ProfileHospital","hospital_socials","PharmacyProfile","Messages","messages","setMessages","delMessage","delete","publicRoutes","path","element","RegisterDoctor","allRoutes","Modal","nodeRef","modalContent","ModalContent","raidCount","setRaidCount","formReception","reception","rate","hideModal","resetForm","CSSTransition","in","timeout","classNames","unmountOnExit","cols","rows","ReactStars","count","color2","half","Alerts","background","delAlerts","MainContext","createContext","App","setUrl","routes","Provider","Routes","route","Route"],"sourceRoot":""}